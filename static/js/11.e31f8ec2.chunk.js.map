{"version":3,"sources":["hooks/useIsMountedRef.ts","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","views/auth/RegisterView/Auth0Register.tsx","views/auth/RegisterView/FirebaseAuthRegister.tsx","views/auth/RegisterView/JWTRegister.tsx","views/auth/RegisterView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","checkedIcon","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","SwitchBase","type","concat","capitalize","checked","disabled","fontSize","undefined","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","useStyles","makeStyles","Auth0Register","rest","loginWithPopup","useAuth","useState","error","setError","isMountedRef","handleRegister","a","console","message","Box","my","FormHelperText","display","justifyContent","Button","onClick","variant","googleButton","common","white","providerIcon","marginRight","spacing","divider","flexGrow","dividerText","margin","FirebaseAuthRegister","createUserWithEmailAndPassword","signInWithGoogle","handleGoogleClick","fullWidth","alt","src","process","alignItems","mt","Divider","orientation","Typography","initialValues","email","password","policy","submit","validationSchema","Yup","shape","max","required","min","oneOf","onSubmit","values","setErrors","setStatus","setSubmitting","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","Boolean","helperText","label","onBlur","onChange","value","ml","Link","href","JWTRegister","register","userOptions","user","setUser","handleSelectChange","event","persist","target","select","SelectProps","native","map","userCategory","key","methodIcons","Auth0","FirebaseAuth","JWT","background","dark","flexDirection","minHeight","banner","paper","paddingTop","borderBottom","bannerChip","methodIcon","height","marginLeft","cardContainer","cardContent","currentMethodIcon","width","maxHeight","RegisterView","method","Page","title","Container","maxWidth","mb","gutterBottom","RouterLink","to"],"mappings":"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","file":"static/js/11.e31f8ec2.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import { Box, Button, FormHelperText, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useState } from 'react';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\ninterface Auth0RegisterProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Auth0Register: FC<Auth0RegisterProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { loginWithPopup } = useAuth() as any;\n  const [error, setError] = useState<string | null>(null);\n  const isMountedRef = useIsMountedRef();\n\n  const handleRegister = async (): Promise<void> => {\n    try {\n      await loginWithPopup();\n    } catch (err) {\n      console.error(err);\n      if (isMountedRef.current) {\n        setError(err.message);\n      }\n    }\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {error && (\n        <Box my={3}>\n          <FormHelperText error>{error}</FormHelperText>\n        </Box>\n      )}\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Button onClick={handleRegister} variant=\"contained\" color=\"secondary\">\n          Register with Auth0\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nAuth0Register.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Auth0Register;\n","import {\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  FormHelperText,\n  Link,\n  makeStyles,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport * as Yup from 'yup';\n\ninterface FirebaseAuthRegisterProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  googleButton: {\n    backgroundColor: theme.palette.common.white\n  },\n  providerIcon: {\n    marginRight: theme.spacing(2)\n  },\n  divider: {\n    flexGrow: 1\n  },\n  dividerText: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst FirebaseAuthRegister: FC<FirebaseAuthRegisterProps> = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  // @ts-ignore\n  const { createUserWithEmailAndPassword, signInWithGoogle } = useAuth() as any;\n  const isMountedRef = useIsMountedRef();\n\n  const handleGoogleClick = async () => {\n    try {\n      await signInWithGoogle();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        className={classes.googleButton}\n        fullWidth\n        onClick={handleGoogleClick}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        <img\n          alt=\"Google\"\n          className={classes.providerIcon}\n          src={`${process.env.PUBLIC_URL}/static/images/google.svg`}\n        />\n        Register with Google\n      </Button>\n      <Box alignItems=\"center\" display=\"flex\" mt={2}>\n        <Divider className={classes.divider} orientation=\"horizontal\" />\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n          className={classes.dividerText}\n        >\n          OR\n        </Typography>\n        <Divider className={classes.divider} orientation=\"horizontal\" />\n      </Box>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          policy: true,\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email('Must be a valid email')\n            .max(255)\n            .required('Email is required'),\n          password: Yup.string()\n            .min(7)\n            .max(255)\n            .required('Password is required'),\n          policy: Yup.boolean().oneOf([true], 'This field must be checked')\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await createUserWithEmailAndPassword(values.email, values.password);\n\n            if (isMountedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (isMountedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => (\n          <form\n            noValidate\n            className={clsx(classes.root, className)}\n            onSubmit={handleSubmit}\n            {...rest}\n          >\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            <Box alignItems=\"center\" display=\"flex\" mt={2} ml={-1}>\n              <Checkbox\n                checked={values.policy}\n                name=\"policy\"\n                onChange={handleChange}\n              />\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                I have read the{' '}\n                <Link component=\"a\" href=\"#\" color=\"secondary\">\n                  Terms and Conditions\n                </Link>\n              </Typography>\n            </Box>\n            {Boolean(touched.policy && errors.policy) && (\n              <FormHelperText error>{errors.policy}</FormHelperText>\n            )}\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n            <Box mt={2}>\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Register\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nFirebaseAuthRegister.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FirebaseAuthRegister;\n","import {\n  Box,\n  Button,\n  Checkbox,\n  FormHelperText,\n  Link,\n  makeStyles,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React, { ChangeEvent, FC, useState } from 'react';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport * as Yup from 'yup';\n\ninterface JWTRegisterProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst JWTRegister: FC<JWTRegisterProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  // @ts-ignore\n  const { register } = useAuth() as any;\n  const isMountedRef = useIsMountedRef();\n\n  const userOptions = ['Company', 'Influencer'];\n\n  const [user, setUser] = useState<string>(userOptions[0]);\n\n  const handleSelectChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    event.persist();\n    setUser(event.target.value);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        name: '',\n        // usertype: user,\n        password: '',\n        policy: false,\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Must be a valid email')\n          .max(255)\n          .required('Email is required'),\n        name: Yup.string().max(255).required('Name is required'),\n        // usertype: Yup.string().required('Must choose a type of account'),\n        password: Yup.string().min(7).max(255).required('Password is required'),\n        policy: Yup.boolean().oneOf([true], 'This field must be checked')\n      })}\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          //TODO Need to add usertype here\n          await register(values.email, values.name, values.password);\n\n          if (isMountedRef.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          noValidate\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.name && errors.name)}\n            fullWidth\n            helperText={touched.name && errors.name}\n            label=\"Name\"\n            margin=\"normal\"\n            name=\"name\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            value={values.name}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            // error={Boolean(touched.usertype && errors.usertype)}\n            // helperText={touched.usertype && errors.usertype}\n            fullWidth\n            label=\"Type of user\"\n            margin=\"normal\"\n            name=\"usertype\"\n            onBlur={handleBlur}\n            onChange={handleSelectChange}\n            select\n            SelectProps={{ native: true }}\n            value={user}\n            variant=\"outlined\"\n          >\n            {userOptions.map(userCategory => (\n              <option key={userCategory} value={userCategory}>\n                {userCategory}\n              </option>\n            ))}\n          </TextField>\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <Box alignItems=\"center\" display=\"flex\" mt={2} ml={-1}>\n            <Checkbox\n              checked={values.policy}\n              name=\"policy\"\n              onChange={handleChange}\n            />\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              I have read the{' '}\n              <Link component=\"a\" href=\"#\" color=\"secondary\">\n                Terms and Conditions\n              </Link>\n            </Typography>\n          </Box>\n          {Boolean(touched.policy && errors.policy) && (\n            <FormHelperText error>{errors.policy}</FormHelperText>\n          )}\n          {errors.submit && (\n            <Box mt={3}>\n              <FormHelperText error>{errors.submit}</FormHelperText>\n            </Box>\n          )}\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Register\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nJWTRegister.propTypes = {\n  className: PropTypes.string\n};\n\nexport default JWTRegister;\n","import {\n  Box,\n  Card,\n  CardContent,\n  Chip,\n  Container,\n  Divider,\n  Link,\n  makeStyles,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Logo from 'src/components/Logo';\nimport Page from 'src/components/Page';\nimport useAuth from 'src/hooks/useAuth';\nimport { Theme } from 'src/theme';\nimport Auth0Register from './Auth0Register';\nimport FirebaseAuthRegister from './FirebaseAuthRegister';\nimport JWTRegister from './JWTRegister';\n\nconst methodIcons = {\n  Auth0: `${process.env.PUBLIC_URL}/static/images/auth0.svg`,\n  FirebaseAuth: `${process.env.PUBLIC_URL}/static/images/firebase.svg`,\n  JWT: `${process.env.PUBLIC_URL}/static/images/jwt.svg`\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n  banner: {\n    backgroundColor: theme.palette.background.paper,\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  bannerChip: {\n    marginRight: theme.spacing(2)\n  },\n  methodIcon: {\n    height: 30,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n  cardContainer: {\n    paddingBottom: 80,\n    paddingTop: 80\n  },\n  cardContent: {\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 400\n  },\n  currentMethodIcon: {\n    height: 40,\n    '& > img': {\n      width: 'auto',\n      maxHeight: '100%'\n    }\n  }\n}));\n\nconst RegisterView: FC = () => {\n  const classes = useStyles();\n  const { method } = useAuth() as any;\n\n  return (\n    <Page className={classes.root} title=\"Register\">\n      \n      {/* <div className={classes.banner}>\n        <Container maxWidth=\"md\">\n          <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\">\n            <Chip\n              color=\"secondary\"\n              label=\"NEW\"\n              size=\"small\"\n              className={classes.bannerChip}\n            />\n            <Box alignItems=\"center\" display=\"flex\">\n              <Typography color=\"textPrimary\" variant=\"h6\">\n                Visit our{' '}\n                <Link component={RouterLink} to=\"/docs\">\n                  docs\n                </Link>{' '}\n                and find out how to switch between\n              </Typography>\n              <Tooltip title=\"Auth0\">\n                <img\n                  alt=\"Auth0\"\n                  className={classes.methodIcon}\n                  src={methodIcons['Auth0']}\n                />\n              </Tooltip>\n              <Tooltip title=\"Firebase\">\n                <img\n                  alt=\"Firebase\"\n                  className={classes.methodIcon}\n                  src={methodIcons['FirebaseAuth']}\n                />\n              </Tooltip>\n              <Tooltip title=\"JSON Web Token\">\n                <img\n                  alt=\"JWT\"\n                  className={classes.methodIcon}\n                  src={methodIcons['JWT']}\n                />\n              </Tooltip>\n            </Box>\n          </Box>\n        </Container>\n      </div> */}\n      <Container className={classes.cardContainer} maxWidth=\"sm\">\n        <Box mb={8} display=\"flex\" justifyContent=\"center\">\n        </Box>\n        <Card>\n          <CardContent className={classes.cardContent}>\n            <Box\n              alignItems=\"center\"\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              mb={3}\n            >\n              <div>\n                <Typography color=\"textPrimary\" gutterBottom variant=\"h2\">\n                  Register\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Register on the internal platform\n                </Typography>\n              </div>\n              <div className={classes.currentMethodIcon}>\n                <img alt=\"Auth method\" src={methodIcons[method]} />\n              </div>\n            </Box>\n            <Box flexGrow={1} mt={3}>\n              {method === 'Auth0' && <Auth0Register />}\n              {method === 'FirebaseAuth' && <FirebaseAuthRegister />}\n              {method === 'JWT' && <JWTRegister />}\n            </Box>\n            <Box my={3}>\n              <Divider />\n            </Box>\n            <Link\n              component={RouterLink}\n              to=\"/login\"\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Already have an account? Click here!\n            </Link>\n          </CardContent>\n        </Card>\n      </Container>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n"],"sourceRoot":""}