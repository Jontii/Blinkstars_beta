{"version":3,"sources":["hooks/useIsMountedRef.ts","views/account/AccountView/Header.tsx","views/account/AccountView/General/ProfileDetails.tsx","views/account/AccountView/General/countries.ts","views/account/AccountView/General/GeneralSettings.tsx","views/account/AccountView/General/index.tsx","views/account/AccountView/Subscription.tsx","views/account/AccountView/Notifications.tsx","views/account/AccountView/Security.tsx","views/account/AccountView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","root","Header","className","rest","classes","clsx","Breadcrumbs","separator","fontSize","aria-label","Link","color","to","component","RouterLink","Typography","variant","theme","name","marginTop","spacing","avatar","height","width","ProfileDetails","user","Card","CardContent","Box","display","alignItems","flexDirection","textAlign","Avatar","src","gutterBottom","tier","CardActions","Button","fullWidth","GeneralSettings","enqueueSnackbar","useSnackbar","enableReinitialize","initialValues","canHire","city","country","email","isPublic","phone","state","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","wait","success","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","CardHeader","title","Divider","Grid","container","item","md","xs","TextField","Boolean","helperText","label","onBlur","onChange","value","type","Autocomplete","getOptionLabel","option","text","options","countries","renderInput","params","Switch","checked","edge","mt","FormHelperText","p","justifyContent","disabled","General","useAuth","lg","xl","overview","padding","flexWrap","breakpoints","down","productImage","marginRight","details","Subscription","isMountedRef","useState","subscription","setSubscription","getSubscription","useCallback","axios","get","response","data","Paper","currency","price","alt","process","proposalsLeft","templatesLeft","invitesLeft","adsLeft","hasAnalytics","hasEmailAlerts","size","Notifications","event","preventDefault","wrap","sm","FormControlLabel","control","Checkbox","defaultChecked","Security","password","passwordConfirm","min","oneOf","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","AccountView","currentTab","setCurrentTab","Page","Container","maxWidth","Tabs","scrollButtons","textColor","map","tab","Tab","key"],"mappings":"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","file":"static/js/46.75077616.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\nimport type { MutableRefObject } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import React from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Typography,\n  Breadcrumbs,\n  Link,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link color=\"inherit\" to=\"/app\" component={RouterLink}>\n          Dashboard\n        </Link>\n        <Typography color=\"textPrimary\">\n          Account\n        </Typography>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Settings\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\nimport type { User } from 'src/types/user';\n\ninterface ProfileDetailsProps {\n  className?: string;\n  user: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst ProfileDetails: FC<ProfileDetailsProps> = ({ className, user, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          textAlign=\"center\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            className={classes.name}\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.name}\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            Your tier:\n            {' '}\n            <Link\n              component={RouterLink}\n              to=\"#\"\n            >\n              {user.tier}\n            </Link>\n          </Typography>\n        </Box>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"text\"\n        >\n          Remove picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  user: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","export default [\n  { \"text\": \"Afghanistan\", \"value\": \"AF\" },\n  { \"text\": \"Åland Islands\", \"value\": \"AX\" },\n  { \"text\": \"Albania\", \"value\": \"AL\" },\n  { \"text\": \"Algeria\", \"value\": \"DZ\" },\n  { \"text\": \"American Samoa\", \"value\": \"AS\" },\n  { \"text\": \"Andorra\", \"value\": \"AD\" },\n  { \"text\": \"Angola\", \"value\": \"AO\" },\n  { \"text\": \"Anguilla\", \"value\": \"AI\" },\n  { \"text\": \"Antarctica\", \"value\": \"AQ\" },\n  { \"text\": \"Antigua and Barbuda\", \"value\": \"AG\" },\n  { \"text\": \"Argentina\", \"value\": \"AR\" },\n  { \"text\": \"Armenia\", \"value\": \"AM\" },\n  { \"text\": \"Aruba\", \"value\": \"AW\" },\n  { \"text\": \"Australia\", \"value\": \"AU\" },\n  { \"text\": \"Austria\", \"value\": \"AT\" },\n  { \"text\": \"Azerbaijan\", \"value\": \"AZ\" },\n  { \"text\": \"Bahamas\", \"value\": \"BS\" },\n  { \"text\": \"Bahrain\", \"value\": \"BH\" },\n  { \"text\": \"Bangladesh\", \"value\": \"BD\" },\n  { \"text\": \"Barbados\", \"value\": \"BB\" },\n  { \"text\": \"Belarus\", \"value\": \"BY\" },\n  { \"text\": \"Belgium\", \"value\": \"BE\" },\n  { \"text\": \"Belize\", \"value\": \"BZ\" },\n  { \"text\": \"Benin\", \"value\": \"BJ\" },\n  { \"text\": \"Bermuda\", \"value\": \"BM\" },\n  { \"text\": \"Bhutan\", \"value\": \"BT\" },\n  { \"text\": \"Bolivia\", \"value\": \"BO\" },\n  { \"text\": \"Bosnia and Herzegovina\", \"value\": \"BA\" },\n  { \"text\": \"Botswana\", \"value\": \"BW\" },\n  { \"text\": \"Bouvet Island\", \"value\": \"BV\" },\n  { \"text\": \"Brazil\", \"value\": \"BR\" },\n  { \"text\": \"British Indian Ocean Territory\", \"value\": \"IO\" },\n  { \"text\": \"Brunei Darussalam\", \"value\": \"BN\" },\n  { \"text\": \"Bulgaria\", \"value\": \"BG\" },\n  { \"text\": \"Burkina Faso\", \"value\": \"BF\" },\n  { \"text\": \"Burundi\", \"value\": \"BI\" },\n  { \"text\": \"Cambodia\", \"value\": \"KH\" },\n  { \"text\": \"Cameroon\", \"value\": \"CM\" },\n  { \"text\": \"Canada\", \"value\": \"CA\" },\n  { \"text\": \"Cape Verde\", \"value\": \"CV\" },\n  { \"text\": \"Cayman Islands\", \"value\": \"KY\" },\n  { \"text\": \"Central African Republic\", \"value\": \"CF\" },\n  { \"text\": \"Chad\", \"value\": \"TD\" },\n  { \"text\": \"Chile\", \"value\": \"CL\" },\n  { \"text\": \"China\", \"value\": \"CN\" },\n  { \"text\": \"Christmas Island\", \"value\": \"CX\" },\n  { \"text\": \"Cocos (Keeling) Islands\", \"value\": \"CC\" },\n  { \"text\": \"Colombia\", \"value\": \"CO\" },\n  { \"text\": \"Comoros\", \"value\": \"KM\" },\n  { \"text\": \"Congo\", \"value\": \"CG\" },\n  { \"text\": \"Congo, The Democratic Republic of the\", \"value\": \"CD\" },\n  { \"text\": \"Cook Islands\", \"value\": \"CK\" },\n  { \"text\": \"Costa Rica\", \"value\": \"CR\" },\n  { \"text\": \"Cote D'Ivoire\", \"value\": \"CI\" },\n  { \"text\": \"Croatia\", \"value\": \"HR\" },\n  { \"text\": \"Cuba\", \"value\": \"CU\" },\n  { \"text\": \"Cyprus\", \"value\": \"CY\" },\n  { \"text\": \"Czech Republic\", \"value\": \"CZ\" },\n  { \"text\": \"Denmark\", \"value\": \"DK\" },\n  { \"text\": \"Djibouti\", \"value\": \"DJ\" },\n  { \"text\": \"Dominica\", \"value\": \"DM\" },\n  { \"text\": \"Dominican Republic\", \"value\": \"DO\" },\n  { \"text\": \"Ecuador\", \"value\": \"EC\" },\n  { \"text\": \"Egypt\", \"value\": \"EG\" },\n  { \"text\": \"El Salvador\", \"value\": \"SV\" },\n  { \"text\": \"Equatorial Guinea\", \"value\": \"GQ\" },\n  { \"text\": \"Eritrea\", \"value\": \"ER\" },\n  { \"text\": \"Estonia\", \"value\": \"EE\" },\n  { \"text\": \"Ethiopia\", \"value\": \"ET\" },\n  { \"text\": \"Falkland Islands (Malvinas)\", \"value\": \"FK\" },\n  { \"text\": \"Faroe Islands\", \"value\": \"FO\" },\n  { \"text\": \"Fiji\", \"value\": \"FJ\" },\n  { \"text\": \"Finland\", \"value\": \"FI\" },\n  { \"text\": \"France\", \"value\": \"FR\" },\n  { \"text\": \"French Guiana\", \"value\": \"GF\" },\n  { \"text\": \"French Polynesia\", \"value\": \"PF\" },\n  { \"text\": \"French Southern Territories\", \"value\": \"TF\" },\n  { \"text\": \"Gabon\", \"value\": \"GA\" },\n  { \"text\": \"Gambia\", \"value\": \"GM\" },\n  { \"text\": \"Georgia\", \"value\": \"GE\" },\n  { \"text\": \"Germany\", \"value\": \"DE\" },\n  { \"text\": \"Ghana\", \"value\": \"GH\" },\n  { \"text\": \"Gibraltar\", \"value\": \"GI\" },\n  { \"text\": \"Greece\", \"value\": \"GR\" },\n  { \"text\": \"Greenland\", \"value\": \"GL\" },\n  { \"text\": \"Grenada\", \"value\": \"GD\" },\n  { \"text\": \"Guadeloupe\", \"value\": \"GP\" },\n  { \"text\": \"Guam\", \"value\": \"GU\" },\n  { \"text\": \"Guatemala\", \"value\": \"GT\" },\n  { \"text\": \"Guernsey\", \"value\": \"GG\" },\n  { \"text\": \"Guinea\", \"value\": \"GN\" },\n  { \"text\": \"Guinea-Bissau\", \"value\": \"GW\" },\n  { \"text\": \"Guyana\", \"value\": \"GY\" },\n  { \"text\": \"Haiti\", \"value\": \"HT\" },\n  { \"text\": \"Heard Island and Mcdonald Islands\", \"value\": \"HM\" },\n  { \"text\": \"Holy See (Vatican City State)\", \"value\": \"VA\" },\n  { \"text\": \"Honduras\", \"value\": \"HN\" },\n  { \"text\": \"Hong Kong\", \"value\": \"HK\" },\n  { \"text\": \"Hungary\", \"value\": \"HU\" },\n  { \"text\": \"Iceland\", \"value\": \"IS\" },\n  { \"text\": \"India\", \"value\": \"IN\" },\n  { \"text\": \"Indonesia\", \"value\": \"ID\" },\n  { \"text\": \"Iran, Islamic Republic Of\", \"value\": \"IR\" },\n  { \"text\": \"Iraq\", \"value\": \"IQ\" },\n  { \"text\": \"Ireland\", \"value\": \"IE\" },\n  { \"text\": \"Isle of Man\", \"value\": \"IM\" },\n  { \"text\": \"Israel\", \"value\": \"IL\" },\n  { \"text\": \"Italy\", \"value\": \"IT\" },\n  { \"text\": \"Jamaica\", \"value\": \"JM\" },\n  { \"text\": \"Japan\", \"value\": \"JP\" },\n  { \"text\": \"Jersey\", \"value\": \"JE\" },\n  { \"text\": \"Jordan\", \"value\": \"JO\" },\n  { \"text\": \"Kazakhstan\", \"value\": \"KZ\" },\n  { \"text\": \"Kenya\", \"value\": \"KE\" },\n  { \"text\": \"Kiribati\", \"value\": \"KI\" },\n  { \"text\": \"Korea, Democratic People'S Republic of\", \"value\": \"KP\" },\n  { \"text\": \"Korea, Republic of\", \"value\": \"KR\" },\n  { \"text\": \"Kuwait\", \"value\": \"KW\" },\n  { \"text\": \"Kyrgyzstan\", \"value\": \"KG\" },\n  { \"text\": \"Lao People'S Democratic Republic\", \"value\": \"LA\" },\n  { \"text\": \"Latvia\", \"value\": \"LV\" },\n  { \"text\": \"Lebanon\", \"value\": \"LB\" },\n  { \"text\": \"Lesotho\", \"value\": \"LS\" },\n  { \"text\": \"Liberia\", \"value\": \"LR\" },\n  { \"text\": \"Libyan Arab Jamahiriya\", \"value\": \"LY\" },\n  { \"text\": \"Liechtenstein\", \"value\": \"LI\" },\n  { \"text\": \"Lithuania\", \"value\": \"LT\" },\n  { \"text\": \"Luxembourg\", \"value\": \"LU\" },\n  { \"text\": \"Macao\", \"value\": \"MO\" },\n  { \"text\": \"Macedonia, The Former Yugoslav Republic of\", \"value\": \"MK\" },\n  { \"text\": \"Madagascar\", \"value\": \"MG\" },\n  { \"text\": \"Malawi\", \"value\": \"MW\" },\n  { \"text\": \"Malaysia\", \"value\": \"MY\" },\n  { \"text\": \"Maldives\", \"value\": \"MV\" },\n  { \"text\": \"Mali\", \"value\": \"ML\" },\n  { \"text\": \"Malta\", \"value\": \"MT\" },\n  { \"text\": \"Marshall Islands\", \"value\": \"MH\" },\n  { \"text\": \"Martinique\", \"value\": \"MQ\" },\n  { \"text\": \"Mauritania\", \"value\": \"MR\" },\n  { \"text\": \"Mauritius\", \"value\": \"MU\" },\n  { \"text\": \"Mayotte\", \"value\": \"YT\" },\n  { \"text\": \"Mexico\", \"value\": \"MX\" },\n  { \"text\": \"Micronesia, Federated States of\", \"value\": \"FM\" },\n  { \"text\": \"Moldova, Republic of\", \"value\": \"MD\" },\n  { \"text\": \"Monaco\", \"value\": \"MC\" },\n  { \"text\": \"Mongolia\", \"value\": \"MN\" },\n  { \"text\": \"Montserrat\", \"value\": \"MS\" },\n  { \"text\": \"Morocco\", \"value\": \"MA\" },\n  { \"text\": \"Mozambique\", \"value\": \"MZ\" },\n  { \"text\": \"Myanmar\", \"value\": \"MM\" },\n  { \"text\": \"Namibia\", \"value\": \"NA\" },\n  { \"text\": \"Nauru\", \"value\": \"NR\" },\n  { \"text\": \"Nepal\", \"value\": \"NP\" },\n  { \"text\": \"Netherlands\", \"value\": \"NL\" },\n  { \"text\": \"Netherlands Antilles\", \"value\": \"AN\" },\n  { \"text\": \"New Caledonia\", \"value\": \"NC\" },\n  { \"text\": \"New Zealand\", \"value\": \"NZ\" },\n  { \"text\": \"Nicaragua\", \"value\": \"NI\" },\n  { \"text\": \"Niger\", \"value\": \"NE\" },\n  { \"text\": \"Nigeria\", \"value\": \"NG\" },\n  { \"text\": \"Niue\", \"value\": \"NU\" },\n  { \"text\": \"Norfolk Island\", \"value\": \"NF\" },\n  { \"text\": \"Northern Mariana Islands\", \"value\": \"MP\" },\n  { \"text\": \"Norway\", \"value\": \"NO\" },\n  { \"text\": \"Oman\", \"value\": \"OM\" },\n  { \"text\": \"Pakistan\", \"value\": \"PK\" },\n  { \"text\": \"Palau\", \"value\": \"PW\" },\n  { \"text\": \"Palestinian Territory, Occupied\", \"value\": \"PS\" },\n  { \"text\": \"Panama\", \"value\": \"PA\" },\n  { \"text\": \"Papua New Guinea\", \"value\": \"PG\" },\n  { \"text\": \"Paraguay\", \"value\": \"PY\" },\n  { \"text\": \"Peru\", \"value\": \"PE\" },\n  { \"text\": \"Philippines\", \"value\": \"PH\" },\n  { \"text\": \"Pitcairn\", \"value\": \"PN\" },\n  { \"text\": \"Poland\", \"value\": \"PL\" },\n  { \"text\": \"Portugal\", \"value\": \"PT\" },\n  { \"text\": \"Puerto Rico\", \"value\": \"PR\" },\n  { \"text\": \"Qatar\", \"value\": \"QA\" },\n  { \"text\": \"Reunion\", \"value\": \"RE\" },\n  { \"text\": \"Romania\", \"value\": \"RO\" },\n  { \"text\": \"Russian Federation\", \"value\": \"RU\" },\n  { \"text\": \"RWANDA\", \"value\": \"RW\" },\n  { \"text\": \"Saint Helena\", \"value\": \"SH\" },\n  { \"text\": \"Saint Kitts and Nevis\", \"value\": \"KN\" },\n  { \"text\": \"Saint Lucia\", \"value\": \"LC\" },\n  { \"text\": \"Saint Pierre and Miquelon\", \"value\": \"PM\" },\n  { \"text\": \"Saint Vincent and the Grenadines\", \"value\": \"VC\" },\n  { \"text\": \"Samoa\", \"value\": \"WS\" },\n  { \"text\": \"San Marino\", \"value\": \"SM\" },\n  { \"text\": \"Sao Tome and Principe\", \"value\": \"ST\" },\n  { \"text\": \"Saudi Arabia\", \"value\": \"SA\" },\n  { \"text\": \"Senegal\", \"value\": \"SN\" },\n  { \"text\": \"Serbia and Montenegro\", \"value\": \"CS\" },\n  { \"text\": \"Seychelles\", \"value\": \"SC\" },\n  { \"text\": \"Sierra Leone\", \"value\": \"SL\" },\n  { \"text\": \"Singapore\", \"value\": \"SG\" },\n  { \"text\": \"Slovakia\", \"value\": \"SK\" },\n  { \"text\": \"Slovenia\", \"value\": \"SI\" },\n  { \"text\": \"Solomon Islands\", \"value\": \"SB\" },\n  { \"text\": \"Somalia\", \"value\": \"SO\" },\n  { \"text\": \"South Africa\", \"value\": \"ZA\" },\n  { \"text\": \"South Georgia and the South Sandwich Islands\", \"value\": \"GS\" },\n  { \"text\": \"Spain\", \"value\": \"ES\" },\n  { \"text\": \"Sri Lanka\", \"value\": \"LK\" },\n  { \"text\": \"Sudan\", \"value\": \"SD\" },\n  { \"text\": \"Suriname\", \"value\": \"SR\" },\n  { \"text\": \"Svalbard and Jan Mayen\", \"value\": \"SJ\" },\n  { \"text\": \"Swaziland\", \"value\": \"SZ\" },\n  { \"text\": \"Sweden\", \"value\": \"SE\" },\n  { \"text\": \"Switzerland\", \"value\": \"CH\" },\n  { \"text\": \"Syrian Arab Republic\", \"value\": \"SY\" },\n  { \"text\": \"Taiwan, Province of China\", \"value\": \"TW\" },\n  { \"text\": \"Tajikistan\", \"value\": \"TJ\" },\n  { \"text\": \"Tanzania, United Republic of\", \"value\": \"TZ\" },\n  { \"text\": \"Thailand\", \"value\": \"TH\" },\n  { \"text\": \"Timor-Leste\", \"value\": \"TL\" },\n  { \"text\": \"Togo\", \"value\": \"TG\" },\n  { \"text\": \"Tokelau\", \"value\": \"TK\" },\n  { \"text\": \"Tonga\", \"value\": \"TO\" },\n  { \"text\": \"Trinidad and Tobago\", \"value\": \"TT\" },\n  { \"text\": \"Tunisia\", \"value\": \"TN\" },\n  { \"text\": \"Turkey\", \"value\": \"TR\" },\n  { \"text\": \"Turkmenistan\", \"value\": \"TM\" },\n  { \"text\": \"Turks and Caicos Islands\", \"value\": \"TC\" },\n  { \"text\": \"Tuvalu\", \"value\": \"TV\" },\n  { \"text\": \"Uganda\", \"value\": \"UG\" },\n  { \"text\": \"Ukraine\", \"value\": \"UA\" },\n  { \"text\": \"United Arab Emirates\", \"value\": \"AE\" },\n  { \"text\": \"United Kingdom\", \"value\": \"GB\" },\n  { \"text\": \"United States\", \"value\": \"US\" },\n  { \"text\": \"United States Minor Outlying Islands\", \"value\": \"UM\" },\n  { \"text\": \"Uruguay\", \"value\": \"UY\" },\n  { \"text\": \"Uzbekistan\", \"value\": \"UZ\" },\n  { \"text\": \"Vanuatu\", \"value\": \"VU\" },\n  { \"text\": \"Venezuela\", \"value\": \"VE\" },\n  { \"text\": \"Viet Nam\", \"value\": \"VN\" },\n  { \"text\": \"Virgin Islands, British\", \"value\": \"VG\" },\n  { \"text\": \"Virgin Islands, U.S.\", \"value\": \"VI\" },\n  { \"text\": \"Wallis and Futuna\", \"value\": \"WF\" },\n  { \"text\": \"Western Sahara\", \"value\": \"EH\" },\n  { \"text\": \"Yemen\", \"value\": \"YE\" },\n  { \"text\": \"Zambia\", \"value\": \"ZM\" },\n  { \"text\": \"Zimbabwe\", \"value\": \"ZW\" }\n];\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport type { User } from 'src/types/user';\nimport wait from 'src/utils/wait';\nimport countries from './countries';\n\ninterface GeneralSettingsProps {\n  className?: string;\n  user: User;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst GeneralSettings: FC<GeneralSettingsProps> = ({ className, user, ...rest }) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        canHire: user.canHire || false,\n        city: user.city || '',\n        country: user.country || '',\n        email: user.email || '',\n        isPublic: user.isPublic || false,\n        name: user.name || '',\n        phone: user.phone || '',\n        state: user.state || '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        canHire: Yup.bool(),\n        city: Yup.string().max(255),\n        country: Yup.string().max(255),\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        isPublic: Yup.bool(),\n        name: Yup.string().max(255).required('Name is required'),\n        phone: Yup.string(),\n        state: Yup.string()\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // NOTE: Make API request\n          await wait(200);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Profile updated', {\n            variant: 'success'\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <CardHeader title=\"Profile\" />\n            <Divider />\n            <CardContent>\n              <Grid\n                container\n                spacing={4}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Name\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email ? errors.email : 'We will use this email to contact you'}\n                    label=\"Email Address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Phone Number\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Autocomplete\n                    getOptionLabel={(option) => option.text}\n                    options={countries}\n                    renderInput={(params) => (\n                      <TextField\n                        fullWidth\n                        label=\"Country\"\n                        name=\"country\"\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                        {...params}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.state && errors.state)}\n                    fullWidth\n                    helperText={touched.state && errors.state}\n                    label=\"State/Region\"\n                    name=\"state\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.state}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.city && errors.city)}\n                    fullWidth\n                    helperText={touched.city && errors.city}\n                    label=\"City\"\n                    name=\"city\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.city}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                {user.name !== 'AMD' && (\n<>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    Make Contact Info Public\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Means that anyone viewing your profile will be able to see your\n                    contacts details\n                  </Typography>\n                  <Switch\n                    checked={values.isPublic}\n                    edge=\"start\"\n                    name=\"isPublic\"\n                    onChange={handleChange}\n                  />\n                </Grid>\n               <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    Available to hire\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Toggling this will let companies know that you are available\n                    for new campaigns\n                  </Typography>\n                  <Switch\n                    checked={values.canHire}\n                    edge=\"start\"\n                    name=\"canHire\"\n                    onChange={handleChange}\n                  />\n                </Grid>\n                </> )}\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box\n              p={2}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n            >\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Save Changes\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  user: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport ProfileDetails from './ProfileDetails';\nimport GeneralSettings from './GeneralSettings';\n\ninterface GeneralProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst General: FC<GeneralProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <ProfileDetails user={user} />\n      </Grid>\n      <Grid\n        item\n        lg={8}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n        <GeneralSettings user={user} />\n      </Grid>\n    </Grid>\n  );\n}\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Link,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\ninterface SubscriptionProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  overview: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column-reverse',\n      alignItems: 'flex-start'\n    }\n  },\n  productImage: {\n    marginRight: theme.spacing(1),\n    height: 48,\n    width: 48\n  },\n  details: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }\n  }\n}));\n\nconst Subscription: FC<SubscriptionProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [subscription, setSubscription] = useState<any | null>(null);\n\n  const getSubscription = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/account/subscription');\n\n      if (isMountedRef.current) {\n        setSubscription(response.data.subscription);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getSubscription();\n  }, [getSubscription]);\n\n  if (!subscription) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Manage your subscription\" />\n      <Divider />\n      <CardContent>\n        <Paper variant=\"outlined\">\n          <Box className={classes.overview}>\n            <div>\n              <Typography\n                display=\"inline\"\n                variant=\"h4\"\n                color=\"textPrimary\"\n              >\n                {subscription.currency}\n                {subscription.price}\n              </Typography>\n              <Typography\n                display=\"inline\"\n                variant=\"subtitle1\"\n              >\n                /mo\n              </Typography>\n            </div>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <img\n                alt=\"Product\"\n                className={classes.productImage}\n                src={`${process.env.PUBLIC_URL}/static/images/products/product_premium.svg`}\n              />\n              <Typography\n                variant=\"overline\"\n                color=\"textSecondary\"\n              >\n                {subscription.name}\n              </Typography>\n            </Box>\n          </Box>\n          <Divider />\n          <Box className={classes.details}>\n            <div>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.proposalsLeft} proposals left`}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.templatesLeft} templates`}\n              </Typography>\n            </div>\n            <div>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.invitesLeft} invites left`}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.adsLeft} ads left`}\n              </Typography>\n            </div>\n            <div>\n              {subscription.hasAnalytics && (\n                <Typography\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  Analytics dashboard\n                </Typography>\n              )}\n              {subscription.hasEmailAlerts && (\n                <Typography\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  Email alerts\n                </Typography>\n              )}\n            </div>\n          </Box>\n        </Paper>\n        <Box\n          mt={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Upgrade plan\n          </Button>\n        </Box>\n        <Box mt={2}>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            The refunds don&apos;t work once you have the subscription, but you can\n            always\n            {' '}\n            <Link\n              color=\"secondary\"\n              component={RouterLink}\n              to=\"#\"\n            >\n              Cancel your subscription\n            </Link>\n            .\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nSubscription.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Subscription;\n","import React from 'react';\nimport type { FC, FormEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\ninterface NotificationProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Notifications: FC<NotificationProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>): Promise<void> => {\n    event.preventDefault();\n    // NOTE: Make API request\n    await wait(500);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardHeader title=\"Notifications\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                System\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Email alerts\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Push Notifications\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Text message\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label={(\n                    <>\n                      <Typography\n                        variant=\"body1\"\n                        color=\"textPrimary\"\n                      >\n                        Phone calls\n                      </Typography>\n                      <Typography variant=\"caption\">\n                        Short voice phone updating you\n                      </Typography>\n                    </>\n                  )}\n                />\n              </div>\n            </Grid>\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                Chat App\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Email\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Push notifications\"\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          p={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <Button\n            color=\"secondary\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Save Settings\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React from 'react';\nimport type { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\ninterface SecurityProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Security: FC<SecurityProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        password: '',\n        passwordConfirm: '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        password: Yup.string()\n          .min(7, 'Must be at least 7 characters')\n          .max(255)\n          .required('Required'),\n        passwordConfirm: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // NOTE: Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Password updated', {\n            variant: 'success'\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <CardHeader title=\"Change Password\" />\n            <Divider />\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\n                    fullWidth\n                    helperText={touched.passwordConfirm && errors.passwordConfirm}\n                    label=\"Password Confirmation\"\n                    name=\"passwordConfirm\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.passwordConfirm}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box\n              p={2}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n            >\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Change Password\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nSecurity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Security;\n","import React, { useState } from 'react';\nimport type { FC, ChangeEvent } from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport type { Theme } from 'src/theme';\nimport Header from './Header';\nimport General from './General';\nimport Subscription from './Subscription';\nimport Notifications from './Notifications';\nimport Security from './Security';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst AccountView: FC = () => {\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState<string>('general');\n\n  const tabs = [\n    { value: 'general', label: 'General' },\n    // { value: 'subscription', label: 'Subscription' },\n    // { value: 'notifications', label: 'Notifications' },\n    // { value: 'security', label: 'Security' }\n  ];\n\n  const handleTabsChange = (event: ChangeEvent<{}>, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            variant=\"scrollable\"\n            textColor=\"secondary\"\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box mt={3}>\n          {currentTab === 'general' && <General />}\n          {currentTab === 'subscription' && <Subscription />}\n          {currentTab === 'notifications' && <Notifications />}\n          {currentTab === 'security' && <Security />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default AccountView;\n"],"sourceRoot":""}