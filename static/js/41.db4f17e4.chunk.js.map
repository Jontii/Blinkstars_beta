{"version":3,"sources":["hooks/useIsMountedRef.ts","utils/getInitials.ts","components/Label.tsx","components/GenericMoreButton.tsx","views/reports/DashboardView/Header.tsx","views/reports/DashboardView/LatestProjects.tsx","views/reports/DashboardView/NewProjects.tsx","views/reports/DashboardView/PerformanceOverTime/Chart.tsx","views/reports/DashboardView/PerformanceOverTime/index.tsx","views/reports/DashboardView/RoiPerCustomer.tsx","views/reports/DashboardView/TodaysMoney.tsx","views/reports/DashboardView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","timeRanges","value","text","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","Button","startIcon","SvgIcon","Menu","getContentAnchorEl","_timeRange","MenuItem","key","process","technology","marginLeft","row","LatestProjects","isMountedRef","projects","setProjects","history","useHistory","getProjects","useCallback","a","axios","get","response","tempProjects","push","data","console","Card","CardHeader","action","GenericMoreButton","Divider","Box","Table","TableHead","TableRow","TableCell","align","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","project","hover","id","Avatar","alt","src","author","avatar","ml","numeral","budget","format","currency","moment","createdAt","label","contrastText","NewProjects","gutterBottom","flexWrap","position","Chart","dataProp","labels","useTheme","options","responsive","maintainAspectRatio","animation","legend","layout","scales","xAxes","gridLines","drawBorder","ticks","fontColor","yAxes","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","callback","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","borderWidth","borderColor","background","default","titleFontColor","bodyFontColor","footerFontColor","callbacks","tooltipItem","yLabel","canvas","gradient","getContext","createLinearGradient","addColorStop","datasets","pointBorderColor","pointBorderWidth","pointRadius","pointBackgroundColor","chart","PerformanceOverTime","performance","thisWeek","thisMonth","thisYear","CardContent","RoiPerCustomer","TodaysMoney","dark","minHeight","paddingTop","paddingBottom","DashboardView","Page","Container","lg","sm","xs","xl"],"mappings":"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","file":"static/js/41.db4f17e4.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","const getInitials = (name: string = '') => {\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n};\n\nexport default getInitials;\n","import { fade, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, ReactNode } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={clsx(\n        classes.root,\n        {\n          [classes[color]]: color\n        },\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import {\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Tooltip\n} from '@material-ui/core';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport React, { FC, memo, useRef, useState } from 'react';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nconst GenericMoreButton: FC = props => {\n  const classes = useStyles();\n  const moreRef = useRef<any>(null);\n  const [openMenu, setOpenMenu] = useState<boolean>(false);\n\n  const handleMenuOpen = (): void => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = (): void => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton onClick={handleMenuOpen} ref={moreRef} {...props}>\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(GenericMoreButton);\n","import {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  makeStyles,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useRef, useState } from 'react';\nimport { Calendar as CalendarIcon } from 'react-feather';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const actionRef = useRef<any>(null);\n  const [isMenuOpen, setMenuOpen] = useState<boolean>(false);\n  const [timeRange, setTimeRange] = useState<string>(timeRanges[2].text);\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography variant=\"body1\" color=\"textPrimary\">\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          Here&apos;s what&apos;s happening\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <CalendarIcon />\n            </SvgIcon>\n          }\n        >\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map(_timeRange => (\n            <MenuItem\n              key={_timeRange.value}\n              onClick={() => setTimeRange(_timeRange.text)}\n            >\n              {_timeRange.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useHistory } from 'react-router';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport { Project } from 'src/types/reports';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\n\ninterface LatestProjectsProps {\n  className?: string;\n}\n\nconst technologyMap: Record<string, string> = {\n  'html-css': `${process.env.PUBLIC_URL}/static/images/technologies/html.svg`,\n  'react-js': `${process.env.PUBLIC_URL}/static/images/technologies/react-js.svg`,\n  'vue-js': `${process.env.PUBLIC_URL}/static/images/technologies/vue-js.svg`,\n  angular: `${process.env.PUBLIC_URL}/static/images/technologies/angular.svg`,\n  figma: `${process.env.PUBLIC_URL}/static/images/technologies/figma.svg`,\n  sketch: `${process.env.PUBLIC_URL}/static/images/technologies/sketch.svg`\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  technology: {\n    height: 30,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  row: {\n    cursor: 'pointer'\n  }\n}));\n\nconst LatestProjects: FC<LatestProjectsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState<Project[]>([]);\n  const history = useHistory();\n\n  const getProjects = useCallback(async () => {\n    try {\n      const response = await axios.get<{ projects: Project[] }>(\n        '/api/reports/latest-projects'\n      );\n\n      if (isMountedRef.current) {\n        let tempProjects = [];\n        tempProjects.push(response.data.projects[0]);\n\n        setProjects(tempProjects);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader action={<GenericMoreButton />} title=\"Active Campaigns\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={900}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Title</TableCell>\n                <TableCell>Author</TableCell>\n                <TableCell>Budget</TableCell>\n                {/* <TableCell>Area</TableCell> */}\n                <TableCell align=\"right\" sortDirection=\"desc\">\n                  <Tooltip enterDelay={300} title=\"Sort\">\n                    <TableSortLabel active direction=\"desc\">\n                      Created\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {projects.map(project => (\n                <TableRow\n                  hover\n                  key={project.id}\n                  className={classes.row}\n                  onClick={() => history.push('/app/projects/1')}\n                >\n                  <TableCell>{project.title}</TableCell>\n                  <TableCell>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Avatar alt=\"Author\" src={project.author.avatar}>\n                        {getInitials(project.author.name)}\n                      </Avatar>\n                      <Box ml={1}>{project.author.name}</Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {numeral(project.budget).format(\n                      `${project.currency}0,0.00`\n                    )}\n                  </TableCell>\n                  {/* <TableCell>Telekom</TableCell> */}\n                  <TableCell align=\"right\">\n                    {moment(project.createdAt).format('DD MMM, YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      {/* <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/projects\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box> */}\n    </Card>\n  );\n};\n\nLatestProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProjects;\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpenOutlined';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface NewProjectsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst NewProjects: FC<NewProjectsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: 12,\n    difference: -10\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          New Campaigns\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            {data.value}\n          </Typography>\n          {/* <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}%\n          </Label> */}\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <FolderOpenIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nNewProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NewProjects;\n","import { fade, makeStyles, useTheme } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Theme } from 'src/theme';\n\ninterface ChartProps {\n  className?: string;\n  data: any[];\n  labels: string[];\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nconst Chart: FC<ChartProps> = ({\n  className,\n  data: dataProp,\n  labels,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme: Theme = useTheme();\n\n  const data = (canvas: HTMLCanvasElement) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n\n    gradient.addColorStop(0, fade(theme.palette.secondary.main, 0.2));\n    gradient.addColorStop(0.9, 'rgba(255,255,255,0)');\n    gradient.addColorStop(1, 'rgba(255,255,255,0)');\n\n    return {\n      datasets: [\n        {\n          data: dataProp,\n          backgroundColor: gradient,\n          borderColor: theme.palette.secondary.main,\n          pointBorderColor: theme.palette.background.default,\n          pointBorderWidth: 3,\n          pointRadius: 6,\n          pointBackgroundColor: theme.palette.secondary.main\n        }\n      ],\n      labels\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 7,\n            callback: (value: number) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.default,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem: any) => {\n          let label = `Income: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\ninterface PerformanceOverTimeProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: '100%'\n  }\n}));\n\nconst PerformanceOverTime: FC<PerformanceOverTimeProps> = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const performance = {\n    thisWeek: {\n      data: [],\n      labels: []\n    },\n    thisMonth: {\n      data: [],\n      labels: []\n    },\n    thisYear: {\n      data: [10, 5, 11, 20, 13, 28, 18, 4, 13, 12, 13, 5],\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ]\n    }\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Performance Over Time\"\n      />\n      <Divider />\n      <CardContent>\n        <PerfectScrollbar>\n          <Box height={375} minWidth={500}>\n            <Chart\n              className={classes.chart}\n              data={performance.thisYear.data}\n              labels={performance.thisYear.labels}\n            />\n          </Box>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nPerformanceOverTime.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PerformanceOverTime;\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface RoiPerCustomerProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    color: theme.palette.secondary.main,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst RoiPerCustomer: FC<RoiPerCustomerProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '25.50',\n    currency: '$'\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          color=\"inherit\"\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n        >\n          Roi per campaign\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography color=\"inherit\" variant=\"h3\">\n            {data.currency}\n            {data.value}\n          </Typography>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar} color=\"inherit\">\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nRoiPerCustomer.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RoiPerCustomer;\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport Label from 'src/components/Label';\nimport { Theme } from 'src/theme';\n\ninterface TodaysMoneyProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst TodaysMoney: FC<TodaysMoneyProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '24,000',\n    currency: '$',\n    difference: 4\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          Todays money\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            {data.currency}\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}%\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nTodaysMoney.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TodaysMoney;\n","import { Container, Grid, makeStyles } from '@material-ui/core';\nimport React, { FC } from 'react';\nimport Page from 'src/components/Page';\nimport { Theme } from 'src/theme';\nimport Header from './Header';\nimport LatestProjects from './LatestProjects';\nimport NewProjects from './NewProjects';\nimport PerformanceOverTime from './PerformanceOverTime';\nimport RoiPerCustomer from './RoiPerCustomer';\nimport TodaysMoney from './TodaysMoney';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst DashboardView: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Page className={classes.root} title=\"Dashboard\">\n      <Container maxWidth={false}>\n        <Header />\n        <Grid container spacing={3}>\n          <Grid item lg={3} sm={6} xs={12}>\n            <TodaysMoney />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <NewProjects />\n          </Grid>\n          {/* <Grid\n            item\n            lg={3}\n            sm={6}\n            xs={12}\n          >\n            <SystemHealth />\n          </Grid> */}\n          <Grid item lg={3} sm={6} xs={12}>\n            <RoiPerCustomer />\n          </Grid>\n          {/* <Grid\n            item\n            lg={3}\n            xs={12}\n          >\n            <RealTime />\n          </Grid> */}\n          <Grid item lg={9} xs={12}>\n            <PerformanceOverTime />\n          </Grid>\n          {/* <Grid\n            item\n            lg={5}\n            xl={4}\n            xs={12}\n          >\n            <TeamTasks />\n          </Grid> */}\n          <Grid item lg={7} xl={8} xs={12}>\n            <LatestProjects />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default DashboardView;\n"],"sourceRoot":""}