{"version":3,"sources":["hooks/useIsMountedRef.ts","utils/getInitials.ts","components/Label.tsx","components/GenericMoreButton.tsx","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","views/reports/DashboardAlternativeView/CustomerActivity.tsx","views/reports/DashboardAlternativeView/EarningsSegmentation/Chart.tsx","views/reports/DashboardAlternativeView/EarningsSegmentation/index.tsx","views/reports/DashboardAlternativeView/FinancialStats/Chart.tsx","views/reports/DashboardAlternativeView/FinancialStats/index.tsx","views/reports/DashboardAlternativeView/Header.tsx","views/reports/DashboardAlternativeView/LatestOrders.tsx","views/reports/DashboardAlternativeView/MostProfitableProducts/CircularProgress.tsx","views/reports/DashboardAlternativeView/MostProfitableProducts/index.tsx","views/reports/DashboardAlternativeView/Overview.tsx","views/reports/DashboardAlternativeView/TopReferrals.tsx","views/reports/DashboardAlternativeView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","ListItemAvatar","React","other","_objectWithoutProperties","context","ListContext","_extends","alignItemsFlexStart","withStyles","marginTop","item","borderRight","divider","CustomerActivity","isMountedRef","activities","setActivities","getActivities","useCallback","a","axios","get","response","data","console","Card","CardHeader","action","GenericMoreButton","Divider","Box","Typography","align","variant","component","gutterBottom","List","disablePadding","activity","i","ListItem","length","key","id","Avatar","alt","RouterLink","src","customer","avatar","to","ListItemText","disableTypography","Link","underline","description","noWrap","moment","createdAt","fromNow","Chart","dataProp","useTheme","datasets","dataset","borderWidth","borderColor","background","default","hoverBorderColor","labels","options","responsive","maintainAspectRatio","animation","cutoutPercentage","legend","layout","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","dark","titleFontColor","text","bodyFontColor","footerFontColor","callbacks","label","tooltipItem","_data","index","value","textAlign","flexDirection","EarningsSegmentation","earnings","setEarnings","getEarnings","p","position","minHeight","thisYear","barThickness","maxBarThickness","barPercentage","categoryPercentage","lastYear","cornerRadius","scales","xAxes","gridLines","drawBorder","ticks","fontColor","yAxes","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","callback","yLabel","chart","FinancialStats","pt","pr","pl","timeRanges","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","Breadcrumbs","separator","aria-label","Button","startIcon","SvgIcon","Menu","getContentAnchorEl","_timeRange","MenuItem","defaultProps","labelColors","complete","pending","rejected","LatestOrders","orders","setOrders","getOrders","Table","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","order","hover","number","items","numeral","totalAmount","format","currency","status","size","endIcon","circle1","stroke","type","fill","strokeWidth","circle2","strokeDasharray","CircularProgress","viewBox","d","image","subscriptions","colors","green","MostProfitableProducts","products","setProducts","getProducts","product","ml","price","mr","conversionRate","breakpoints","up","down","borderBottom","valueContainer","marginLeft","Overview","overview","md","sm","xs","fontWeightBold","common","white","TopReferrals","referrals","setReferrals","getReferrals","referral","initials","primaryTypographyProps","paddingTop","paddingBottom","DashboardAlternativeView","Page","Container","lg","xl"],"mappings":"gKAAA,WAeeA,IAbS,WACtB,IAAMC,EAAYC,kBAAO,GASzB,OAPAC,qBACE,kBAAM,WACJF,EAAUG,SAAU,KAEtB,IAGKH,I,kCCHMI,IATK,WAAwB,IAAvBC,EAAsB,uDAAP,GAClC,OAAOA,EACJC,QAAQ,MAAO,KACfC,MAAM,KACNC,MAAM,EAAG,GACTC,KAAI,SAAAC,GAAC,OAAIA,GAAKA,EAAE,GAAGC,iBACnBC,KAAK,M,+FCOJC,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJC,WAAYF,EAAMG,WAAWD,WAC7BE,WAAY,SACZC,aAAc,EACdC,QAAS,cACTC,SAAU,EACVC,WAAY,SACZC,OAAQ,UACRC,WAAY,EACZC,SAAUX,EAAMG,WAAWS,QAAQ,IACnCC,WAAYb,EAAMG,WAAWW,iBAC7BC,OAAQ,GACRC,eAAgB,SAChBC,cAAe,GACfC,SAAU,GACVC,QAASnB,EAAMoB,QAAQ,GAAK,GAC5BC,cAAe,aAEjBC,QAAS,CACPC,MAAOvB,EAAMwB,QAAQF,QAAQG,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQF,QAAQG,KAAM,MAEpDG,UAAW,CACTL,MAAOvB,EAAMwB,QAAQI,UAAUH,KAC/BC,gBAAiBC,YAAK3B,EAAMwB,QAAQI,UAAUH,KAAM,MAEtDI,MAAO,CACLN,MAAOvB,EAAMwB,QAAQK,MAAMJ,KAC3BC,gBAAiBC,YAAK3B,EAAMwB,QAAQK,MAAMJ,KAAM,MAElDK,QAAS,CACPP,MAAOvB,EAAMwB,QAAQM,QAAQL,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQM,QAAQL,KAAM,MAEpDM,QAAS,CACPR,MAAOvB,EAAMwB,QAAQO,QAAQN,KAC7BC,gBAAiBC,YAAK3B,EAAMwB,QAAQO,QAAQN,KAAM,UA0CvCO,IAtCe,SAAC,GAMxB,IAAD,IALJC,iBAKI,MALQ,GAKR,MAJJV,aAII,MAJI,YAIJ,EAHJW,EAGI,EAHJA,SAEGC,GACC,EAFJC,MAEI,yDACEC,EAAUvC,IAEhB,OACE,wCACEmC,UAAWK,YACTD,EAAQpC,KADK,eAGVoC,EAAQd,GAASA,GAEpBU,IAEEE,GAEHD,K,mOC1DDpC,EAAYC,aAAW,iBAAO,CAClCwC,KAAM,CACJC,MAAO,IACPC,SAAU,YAmECC,oBA/De,SAAAC,GAC5B,IAAMN,EAAUvC,IACV8C,EAAU1D,iBAAY,MAFS,EAGL2D,oBAAkB,GAHb,mBAG9BC,EAH8B,KAGpBC,EAHoB,KAarC,OACE,oCACE,kBAAC,IAAD,CAASC,MAAM,gBACb,kBAAC,IAAD,eAAYC,QAXK,WACrBF,GAAY,IAU6BG,IAAKN,GAAaD,GACrD,kBAAC,IAAD,CAAUhC,SAAS,YAGvB,kBAAC,IAAD,CACEwC,SAAUP,EAAQxD,QAClBgE,aAAc,CACZC,SAAU,MACVC,WAAY,QAEdC,QAjBkB,WACtBR,GAAY,IAiBRS,KAAMV,EACNW,WAAY,CAAExB,UAAWI,EAAQE,MACjCmB,gBAAiB,CACfL,SAAU,MACVC,WAAY,SAGd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAchC,QAAQ,YAExB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAcA,QAAQ,UAExB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAcA,QAAQ,YAExB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAcA,QAAQ,mB,kCC/EhC,uDAuBIqC,EAA8BC,cAAiB,SAAwBjB,EAAOO,GAChF,IAAIb,EAAUM,EAAMN,QAChBJ,EAAYU,EAAMV,UAClB4B,EAAQC,YAAyBnB,EAAO,CAAC,UAAW,cAEpDoB,EAAUH,aAAiBI,KAC/B,OAAoBJ,gBAAoB,MAAOK,YAAS,CACtDhC,UAAWK,YAAKD,EAAQpC,KAAMgC,EAAkC,eAAvB8B,EAAQ3D,YAA+BiC,EAAQ6B,qBACxFhB,IAAKA,GACJW,OAwBUM,gBAjDK,CAElBlE,KAAM,CACJiB,SAAU,GACVR,WAAY,GAIdwD,oBAAqB,CACnBE,UAAW,IAwCmB,CAChC9E,KAAM,qBADO6E,CAEZR,I,+TC5BG7D,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACNoE,KAAM,CACJlD,QAASnB,EAAMoB,QAAQ,GACvBb,SAAU,EACV,kBAAmB,CACjB+D,YAAY,aAAD,OAAetE,EAAMwB,QAAQ+C,eAiH/BC,EA5GqC,SAAC,GAG9C,IAFLvC,EAEI,EAFJA,UACGE,EACC,6BACEE,EAAUvC,IACV2E,EAAezF,cAFjB,EAGgC6D,mBAAiC,IAHjE,mBAGG6B,EAHH,KAGeC,EAHf,KAKEC,EAAgBC,sBAAW,sBAAC,4BAAAC,EAAA,+EAEPC,IAAMC,IAC3B,kCAH4B,OAExBC,EAFwB,OAM1BR,EAAarF,SACfuF,EAAcM,EAASC,KAAKR,YAPA,gDAU9BS,QAAQtD,MAAR,MAV8B,yDAY/B,CAAC4C,IAMJ,OAJAtF,qBAAU,WACRyF,MACC,CAACA,IAGF,kBAACQ,EAAA,EAAD,eAAMnD,UAAWK,YAAKD,EAAQpC,KAAMgC,IAAgBE,GAClD,kBAACkD,EAAA,EAAD,CAAYrC,MAAM,oBAAoBsC,OAAQ,kBAACC,EAAA,EAAD,QAC9C,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAKnF,QAAQ,QACX,yBAAK2B,UAAWI,EAAQgC,MACtB,kBAACqB,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKrE,MAAM,eAA9C,UAGA,kBAACmE,EAAA,EAAD,CACEC,MAAM,SACNE,UAAU,KACVC,cAAY,EACZF,QAAQ,WACRrE,MAAM,iBALR,eAUF,kBAACiE,EAAA,EAAD,MACA,yBAAKvD,UAAWI,EAAQgC,MACtB,kBAACqB,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKrE,MAAM,eAA9C,OAGA,kBAACmE,EAAA,EAAD,CACEC,MAAM,SACNE,UAAU,KACVC,cAAY,EACZF,QAAQ,WACRrE,MAAM,iBALR,YAWJ,kBAACiE,EAAA,EAAD,MACA,kBAACO,EAAA,EAAD,CAAMC,gBAAc,GACjBtB,EAAWhF,KAAI,SAACuG,EAAUC,GAAX,OACd,kBAACC,EAAA,EAAD,CAAU5B,QAAS2B,EAAIxB,EAAW0B,OAAS,EAAGC,IAAKJ,EAASK,IAC1D,kBAAC3C,EAAA,EAAD,KACE,kBAAC4C,EAAA,EAAD,CACEC,IAAI,WACJX,UAAWY,IACXC,IAAKT,EAASU,SAASC,OACvBC,GAAG,KAEFxH,YAAY4G,EAASU,SAASrH,QAGnC,kBAACwH,EAAA,EAAD,CACEC,mBAAiB,EACjBzF,QACE,kBAAC0F,EAAA,EAAD,CACEzF,MAAM,cACNsE,UAAWY,IACXI,GAAG,IACHI,UAAU,OACVrB,QAAQ,MAEPK,EAASU,SAASrH,MAGvBsC,UACE,kBAAC8D,EAAA,EAAD,CAAYE,QAAQ,QAAQrE,MAAM,iBAC/B0E,EAASiB,eAIhB,kBAACxB,EAAA,EAAD,CAAYnE,MAAM,gBAAgB4F,QAAM,EAACvB,QAAQ,WAC9CwB,IAAOnB,EAASoB,WAAWC,kB,yBCrE3BC,EAxDe,SAAC,GAAiC,IAAzBC,EAAwB,EAA9BtC,KAAmB/C,EAAW,wBACvDnC,EAAeyH,cAEfvC,EAAO,CACXwC,SAAUF,EAASE,SAAShI,KAAI,SAAAiI,GAAO,kCAClCA,GADkC,IAErCC,YAAa,EACbC,YAAa7H,EAAMwB,QAAQsG,WAAWC,QACtCC,iBAAkBhI,EAAMwB,QAAQsG,WAAWC,aAE7CE,OAAQT,EAASS,QAGbC,EAAU,CACdC,YAAY,EACZC,qBAAqB,EACrBC,WAAW,EACXC,iBAAkB,GAClBC,OAAQ,CACNjI,SAAS,GAEXkI,OAAQ,CACNrH,QAAS,GAEXsH,SAAU,CACRC,SAAS,EACTC,KAAM,QACNC,WAAW,EACXC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVnB,YAAa,EACbC,YAAa7H,EAAMwB,QAAQ+C,QAC3B7C,gBAAiB1B,EAAMwB,QAAQsG,WAAWkB,KAC1CC,eAAgBjJ,EAAMwB,QAAQ0H,KAAK5H,QACnC6H,cAAenJ,EAAMwB,QAAQ0H,KAAKtH,UAClCwH,gBAAiBpJ,EAAMwB,QAAQ0H,KAAKtH,UACpCyH,UAAW,CACTC,MADS,SACHC,EAAaC,GACjB,IAAMF,EAAQE,EAAMvB,OAAOsB,EAAYE,OACjCC,EAAQF,EAAM9B,SAAS,GAAGxC,KAAKqE,EAAYE,OAEjD,MAAM,GAAN,OAAUH,EAAV,aAAoBI,EAApB,SAMR,OAAO,kBAAC,WAAD,eAAUxE,KAAMA,EAAMgD,QAASA,GAAa/F,KCtC/CrC,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACNoE,KAAM,CACJsF,UAAW,SACXpJ,SAAU,EACVD,QAAS,OACTsJ,cAAe,SACf5I,eAAgB,SAChBG,QAASnB,EAAMoB,QAAQ,EAAG,GAC1B,uBAAwB,CACtBkD,YAAY,aAAD,OAAetE,EAAMwB,QAAQ+C,eAgE/BsF,EA3D6C,SAAC,GAGtD,IAFL5H,EAEI,EAFJA,UACGE,EACC,6BACEE,EAAUvC,IACV2E,EAAezF,cAFjB,EAG4B6D,mBAAc,MAH1C,mBAGGiH,EAHH,KAGaC,EAHb,KAKEC,EAAcnF,sBAAW,sBAAC,4BAAAC,EAAA,+EAELC,IAAMC,IAAI,yBAFL,OAEtBC,EAFsB,OAIxBR,EAAarF,SACf2K,EAAY9E,EAASC,KAAK4E,UALA,gDAQ5B3E,QAAQtD,MAAR,MAR4B,yDAU7B,CAAC4C,IAMJ,OAJAtF,qBAAU,WACR6K,MACC,CAACA,IAECF,EAKH,kBAAC1E,EAAA,EAAD,eAAMnD,UAAWK,YAAKD,EAAQpC,KAAMgC,IAAgBE,GAClD,kBAACkD,EAAA,EAAD,CACEC,OAAQ,kBAACC,EAAA,EAAD,MACRvC,MAAM,0BAER,kBAACwC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAKwE,EAAG,EAAGC,SAAS,WAAWC,UAAW,KACxC,kBAAC,EAAD,CAAOjF,KAAM4E,KAEf,kBAACtE,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAKnF,QAAQ,QACVwJ,EAAS7B,OAAOvI,KAAI,SAAC4J,EAAepD,GAAhB,OACnB,yBAAKG,IAAKiD,EAAOrH,UAAWI,EAAQgC,MAClC,kBAACqB,EAAA,EAAD,CAAYE,QAAQ,KAAKrE,MAAM,eAC5BuI,EAASpC,SAAS,GAAGxC,KAAKgB,GAD7B,KAGA,kBAACR,EAAA,EAAD,CAAYE,QAAQ,WAAWrE,MAAM,iBAClC+H,SArBJ,M,0BChDLxJ,EAAYC,aAAW,iBAAO,CAClCE,KAAM,CACJiK,SAAU,gBA4HC3C,EAxHe,SAAC,GAKxB,IAJCC,EAIF,EAJJtC,KACA+C,EAGI,EAHJA,OACAhG,EAEI,EAFJA,UACGE,EACC,6CACEE,EAAUvC,IACVE,EAAeyH,cAEfvC,EAAO,CACXwC,SAAU,CACR,CACE4B,MAAO,YACP5H,gBAAiB1B,EAAMwB,QAAQI,UAAUH,KACzCyD,KAAMsC,EAAS4C,SACfC,aAAc,GACdC,gBAAiB,GACjBC,cAAe,GACfC,mBAAoB,IAEtB,CACElB,MAAO,YACP5H,gBAAiBC,YAAK3B,EAAMwB,QAAQI,UAAUH,KAAM,KACpDyD,KAAMsC,EAASiD,SACfJ,aAAc,GACdC,gBAAiB,GACjBC,cAAe,GACfC,mBAAoB,KAGxBvC,UAGIC,EAAU,CACdC,YAAY,EACZC,qBAAqB,EACrBC,WAAW,EACXqC,aAAc,GACdnC,OAAQ,CACNjI,SAAS,GAEXkI,OAAQ,CACNrH,QAAS,GAEXwJ,OAAQ,CACNC,MAAO,CACL,CACEC,UAAW,CACTvK,SAAS,EACTwK,YAAY,GAEdC,MAAO,CACL5J,QAAS,GACT6J,UAAWhL,EAAMwB,QAAQ0H,KAAKtH,aAIpCqJ,MAAO,CACL,CACEJ,UAAW,CACTK,WAAY,CAAC,GACbC,iBAAkB,CAAC,GACnB5J,MAAOvB,EAAMwB,QAAQ+C,QACrBuG,YAAY,EACZM,mBAAoB,CAAC,GACrBC,yBAA0B,CAAC,GAC3BC,cAAetL,EAAMwB,QAAQ+C,SAE/BwG,MAAO,CACL5J,QAAS,GACT6J,UAAWhL,EAAMwB,QAAQ0H,KAAKtH,UAC9B2J,aAAa,EACbC,IAAK,EACLC,cAAe,EACfC,SAAU,SAAChC,GAAD,OAAoBA,EAAQ,EAAR,UAAeA,EAAf,KAA0BA,OAKhEjB,SAAU,CACRC,SAAS,EACTC,KAAM,QACNC,WAAW,EACXC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVnB,YAAa,EACbC,YAAa7H,EAAMwB,QAAQ+C,QAC3B7C,gBAAiB1B,EAAMwB,QAAQsG,WAAWkB,KAC1CC,eAAgBjJ,EAAMwB,QAAQ0H,KAAK5H,QACnC6H,cAAenJ,EAAMwB,QAAQ0H,KAAKtH,UAClCwH,gBAAiBpJ,EAAMwB,QAAQ0H,KAAKtH,UACpCyH,UAAW,CACTrG,MAAO,aACPsG,MAAO,SAACC,GACN,IAAID,EAAK,iBAAaC,EAAYoC,QAMlC,OAJIpC,EAAYoC,OAAS,IACvBrC,GAAS,KAGJA,MAMf,OACE,uCAAKrH,UAAWK,YAAKD,EAAQpC,KAAMgC,IAAgBE,GACjD,kBAAC,MAAD,CAAK+C,KAAMA,EAAMgD,QAASA,MCpH1BpI,EAAYC,aAAW,iBAAO,CAClCE,KAAM,GACN2L,MAAO,CACL7K,OAAQ,SA0CG8K,EAtCiC,SAAC,GAA4B,IAA1B5J,EAAyB,EAAzBA,UAAcE,EAAW,6BACpEE,EAAUvC,IAoBhB,OACE,kBAACsF,EAAA,EAAD,eAAMnD,UAAWK,YAAKD,EAAQpC,KAAMgC,IAAgBE,GAClD,kBAACkD,EAAA,EAAD,CAAYC,OAAQ,kBAACC,EAAA,EAAD,MAAuBvC,MAAM,oBACjD,kBAACwC,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAKvE,SAAU,IAAK4K,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACpC,kBAAC,EAAD,CAAO/J,UAAWI,EAAQuJ,MAAO1G,KAzB3B,CACZkF,SAAU,CAAC,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACpDK,SAAU,CAAC,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,KAuBExC,OArBvC,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,a,gFCfEgE,GAAa,CACjB,CACEvC,MAAO,QACPR,KAAM,SAER,CACEQ,MAAO,YACPR,KAAM,aAER,CACEQ,MAAO,eACPR,KAAM,gBAER,CACEQ,MAAO,YACPR,KAAM,cAIJpJ,GAAYC,aAAW,iBAAO,CAClCE,KAAM,OAGFiM,GAA0B,SAAC,GAA4B,IAA1BjK,EAAyB,EAAzBA,UAAcE,EAAW,6BACpDE,EAAUvC,KACVqM,EAAYjN,iBAAY,MAF4B,EAGxB2D,oBAAkB,GAHM,mBAGnDuJ,EAHmD,KAGvCC,EAHuC,OAIxBxJ,mBAAiBoJ,GAAW,GAAG/C,MAJP,mBAInDoD,EAJmD,KAIxCC,EAJwC,KAM1D,OACE,kBAACC,EAAA,EAAD,eACEvK,UAAWK,YAAKD,EAAQpC,KAAMgC,GAC9BwK,WAAS,EACTC,QAAQ,gBACRtL,QAAS,GACLe,GAEJ,kBAACqK,EAAA,EAAD,CAAMnI,MAAI,GACR,kBAACsI,EAAA,EAAD,CACEC,UAAW,kBAAC,KAAD,CAAkBjM,SAAS,UACtCkM,aAAW,cAEX,kBAAC7F,EAAA,EAAD,CACEpB,QAAQ,QACRrE,MAAM,UACNsF,GAAG,OACHhB,UAAWY,KAJb,aAQA,kBAACf,EAAA,EAAD,CAAYE,QAAQ,QAAQrE,MAAM,eAAlC,YAIF,kBAACmE,EAAA,EAAD,CAAYE,QAAQ,KAAKrE,MAAM,eAA/B,qBAIF,kBAACiL,EAAA,EAAD,CAAMnI,MAAI,GACR,kBAACyI,EAAA,EAAD,CACE5J,IAAKiJ,EACLlJ,QAAS,kBAAMoJ,GAAY,IAC3BU,UACE,kBAACC,EAAA,EAAD,CAASrM,SAAS,SAChB,kBAAC,KAAD,QAIH2L,GAEH,kBAACW,EAAA,EAAD,CACE9J,SAAUgJ,EAAU/M,QACpBmE,QAAS,kBAAM8I,GAAY,IAC3B7I,KAAM4I,EACNc,mBAAoB,KACpB9J,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdI,gBAAiB,CACfL,SAAU,MACVC,WAAY,WAGb2I,GAAWvM,KAAI,SAAAyN,GAAU,OACxB,kBAACC,EAAA,EAAD,CACE/G,IAAK8G,EAAWzD,MAChBzG,QAAS,kBAAMsJ,EAAaY,EAAWjE,QAEtCiE,EAAWjE,aAa1BgD,GAAOmB,aAAe,GAEPnB,U,8GC7FToB,GAAoE,CACxEC,SAAU,UACVC,QAAS,UACTC,SAAU,SAGN3N,GAAYC,aAAW,iBAAO,CAClCE,KAAM,OA4FOyN,GAzF6B,SAAC,GAA4B,IAA1BzL,EAAyB,EAAzBA,UAAcE,EAAW,6BAChEE,EAAUvC,KACV2E,EAAezF,cAFiD,EAG1C6D,mBAAkB,IAHwB,mBAG/D8K,EAH+D,KAGvDC,EAHuD,KAKhEC,EAAYhJ,sBAAW,sBAAC,4BAAAC,EAAA,+EAEHC,IAAMC,IAC3B,8BAHwB,OAEpBC,EAFoB,OAMtBR,EAAarF,SACfwO,EAAU3I,EAASC,KAAKyI,QAPA,gDAU1BxI,QAAQtD,MAAR,MAV0B,yDAY3B,CAAC4C,IAMJ,OAJAtF,qBAAU,WACR0O,MACC,CAACA,IAGF,kBAACzI,EAAA,EAAD,eAAMnD,UAAWK,YAAKD,EAAQpC,KAAMgC,IAAgBE,GAClD,kBAACkD,EAAA,EAAD,CAAYC,OAAQ,kBAACC,EAAA,EAAD,MAAuBvC,MAAM,kBACjD,kBAACwC,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAKvE,SAAU,KACb,kBAAC4M,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWC,cAAc,QACvB,kBAACC,GAAA,EAAD,CAASC,WAAY,IAAKpL,MAAM,QAC9B,kBAACqL,GAAA,EAAD,CAAgBC,QAAM,EAACC,UAAU,QAAjC,YAKJ,kBAACN,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,CAAWtI,MAAM,SAAjB,UAGJ,kBAAC6I,GAAA,EAAD,KACGb,EAAOjO,KAAI,SAAA+O,GAAK,OACf,kBAACT,GAAA,EAAD,CAAUU,OAAK,EAACrI,IAAKoI,EAAMnI,IACzB,kBAAC2H,GAAA,EAAD,KAAYQ,EAAME,QAClB,kBAACV,GAAA,EAAD,KAAYQ,EAAM9H,SAASrH,MAC3B,kBAAC2O,GAAA,EAAD,KAAYQ,EAAMG,OAClB,kBAACX,GAAA,EAAD,KACGY,KAAQJ,EAAMK,aAAaC,OAA3B,UACIN,EAAMO,SADV,YAIH,kBAACf,GAAA,EAAD,KACE,kBAACjM,GAAA,EAAD,CAAOT,MAAO+L,GAAYmB,EAAMQ,SAC7BR,EAAMQ,SAGX,kBAAChB,GAAA,EAAD,CAAWtI,MAAM,SACdyB,IAAOqH,EAAMpH,WAAW0H,OAAO,kCAQ9C,kBAACtJ,EAAA,EAAD,CAAKwE,EAAG,EAAG3J,QAAQ,OAAOU,eAAe,YACvC,kBAAC8L,EAAA,EAAD,CACEjH,UAAWY,IACXyI,KAAK,QACLrI,GAAG,yBACHsI,QAAS,kBAAC,KAAD,OAJX,c,SCxGFrP,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJuC,MAAO,GACPzB,OAAQ,IAEVqO,QAAS,CACPC,OACyB,SAAvBrP,EAAMwB,QAAQ8N,KAAkB,mBAAqB,mBACvDC,KAAM,OACNC,YAAa,GAEfC,QAAS,CACPJ,OAAQrP,EAAMwB,QAAQI,UAAUH,KAChC8N,KAAM,OACNC,YAAa,EACbnH,UAAW,kCAEb,sBAAuB,CACrB,KAAM,CACJqH,gBAAiB,cAmCRC,GA9BqC,SAAC,GAI9C,IAHL1N,EAGI,EAHJA,UACAyH,EAEI,EAFJA,MACGvH,EACC,qCACEE,EAAUvC,KAEhB,OACE,uCAAKmC,UAAWK,YAAKD,EAAQpC,KAAMgC,IAAgBE,GACjD,yBAAKyN,QAAQ,aACX,0BACE3N,UAAWI,EAAQ+M,QACnBS,EAAE,gFACFH,gBAAgB,aAElB,0BACEzN,UAAWI,EAAQoN,QACnBI,EAAE,gFACFH,gBAAe,UAAKhG,EAAL,cCrBnB5J,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACN6P,MAAO,CACLpP,WAAY,EACZK,OAAQ,GACRyB,MAAO,IAETuN,cAAe,CACblP,WAAYb,EAAMG,WAAWW,kBAE/B4I,MAAO,CACLnI,MAAOyO,KAAOC,MAAM,KACpBpP,WAAYb,EAAMG,WAAWW,sBAyHlBoP,GArHiD,SAAC,GAG1D,IAFLjO,EAEI,EAFJA,UACGE,EACC,6BACEE,EAAUvC,KACV2E,EAAezF,cAFjB,EAG4B6D,mBAAoB,IAHhD,mBAGGsN,EAHH,KAGaC,EAHb,KAKEC,EAAcxL,sBAAW,sBAAC,4BAAAC,EAAA,+EAELC,IAAMC,IAC3B,oCAH0B,OAEtBC,EAFsB,OAMxBR,EAAarF,SACfgR,EAAYnL,EAASC,KAAKiL,UAPA,gDAU5BhL,QAAQtD,MAAR,MAV4B,yDAY7B,CAAC4C,IAMJ,OAJAtF,qBAAU,WACRkR,MACC,CAACA,IAGF,kBAACjL,EAAA,EAAD,eAAMnD,UAAWK,YAAKD,EAAQpC,KAAMgC,IAAgBE,GAClD,kBAACkD,EAAA,EAAD,CACEC,OAAQ,kBAACC,EAAA,EAAD,MACRvC,MAAM,6BAER,kBAACwC,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAKvE,SAAU,KACb,kBAAC4M,GAAA,EAAD,KACE,kBAACU,GAAA,EAAD,KACG2B,EAASzQ,KAAI,SAAA4Q,GAAO,OACnB,kBAACtC,GAAA,EAAD,CAAUU,OAAK,EAACrI,IAAKiK,EAAQhK,IAC3B,kBAAC2H,GAAA,EAAD,KACE,kBAACxI,EAAA,EAAD,CAAKnF,QAAQ,OAAOF,WAAW,UAC7B,yBACEoG,IAAI,UACJvE,UAAWI,EAAQyN,MACnBpJ,IAAK4J,EAAQR,QAEf,kBAACrK,EAAA,EAAD,CAAK8K,GAAI,GACP,kBAAC7K,EAAA,EAAD,CAAYE,QAAQ,KAAKrE,MAAM,eAC5B+O,EAAQhR,MAEX,kBAACoG,EAAA,EAAD,CAAYE,QAAQ,QAAQrE,MAAM,iBAChC,0BAAMU,UAAWI,EAAQ0N,eACtBlB,KAAQyB,EAAQP,eAAehB,OAAO,QACjC,IAHV,aASN,kBAACd,GAAA,EAAD,KACE,kBAACvI,EAAA,EAAD,CAAYE,QAAQ,KAAKrE,MAAM,eAA/B,SAGA,kBAACmE,EAAA,EAAD,CAAYyB,QAAM,EAACvB,QAAQ,QAAQrE,MAAM,iBACvC,0BAAMU,UAAWI,EAAQqH,OACtBmF,KAAQyB,EAAQE,OAAOzB,OAAvB,UACIuB,EAAQtB,SADZ,YAGK,IALV,YASF,kBAACf,GAAA,EAAD,KACE,kBAACxI,EAAA,EAAD,CACEnF,QAAQ,OACRF,WAAW,SACXY,eAAe,YAEf,kBAACyE,EAAA,EAAD,CAAKgL,GAAI,GACP,kBAAC/K,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,KACRrE,MAAM,eAEL+O,EAAQI,eALX,KAOA,kBAAChL,EAAA,EAAD,CAAYE,QAAQ,QAAQrE,MAAM,iBAAlC,oBAIF,kBAAC,GAAD,CAAkBmI,MAAO4G,EAAQI,2BASjD,kBAACjL,EAAA,EAAD,CAAKwE,EAAG,EAAG3J,QAAQ,OAAOU,eAAe,YACvC,kBAAC8L,EAAA,EAAD,CACEjH,UAAWY,IACXyI,KAAK,QACLrI,GAAG,IACHsI,QAAS,kBAAC,KAAD,OAJX,c,SCzIFrP,GAAYC,aAAW,SAACC,GAAD,YAAmB,CAC9CC,KAAM,GACNoE,MAAI,GACFlD,QAASnB,EAAMoB,QAAQ,GACvBuI,UAAW,UAFT,eAGD3J,EAAM2Q,YAAYC,GAAG,MAAQ,CAC5B,uBAAwB,CACtBtM,YAAY,aAAD,OAAetE,EAAMwB,QAAQ+C,YAL1C,eAQDvE,EAAM2Q,YAAYE,KAAK,MAAQ,CAC9B,uBAAwB,CACtBC,aAAa,aAAD,OAAe9Q,EAAMwB,QAAQ+C,YAV3C,GAcJwM,eAAgB,CACdzQ,QAAS,OACTF,WAAY,SACZY,eAAgB,UAElBsI,MAAO,CACL0H,WAAYhR,EAAMoB,QAAQ,QA8Ff6P,GA1FqB,SAAC,GAA4B,IAA1BhP,EAAyB,EAAzBA,UAAcE,EAAW,6BACxDE,EAAUvC,KACVoR,EACI,aADJA,EAEM,aAFNA,EAGI,aAHJA,EAIW,SAGjB,OACE,kBAAC9L,EAAA,EAAD,eAAMnD,UAAWK,YAAKD,EAAQpC,KAAMgC,IAAgBE,GAClD,kBAACqK,EAAA,EAAD,CAAMpM,WAAW,SAASqM,WAAS,EAACC,QAAQ,iBAC1C,kBAACF,EAAA,EAAD,CAAMvK,UAAWI,EAAQgC,KAAMA,MAAI,EAAC8M,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACpD,kBAAC3L,EAAA,EAAD,CACEG,UAAU,KACVC,cAAY,EACZF,QAAQ,WACRrE,MAAM,iBAJR,gBAQA,yBAAKU,UAAWI,EAAQ0O,gBACtB,kBAACrL,EAAA,EAAD,CAAYE,QAAQ,KAAKrE,MAAM,eAA/B,IACI2P,GAEJ,kBAAClP,GAAA,EAAD,CAAOC,UAAWI,EAAQiH,MAAO/H,MAAM,WAAvC,UAKJ,kBAACiL,EAAA,EAAD,CAAMvK,UAAWI,EAAQgC,KAAMA,MAAI,EAAC8M,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACpD,kBAAC3L,EAAA,EAAD,CACEG,UAAU,KACVC,cAAY,EACZF,QAAQ,WACRrE,MAAM,iBAJR,kBAQA,yBAAKU,UAAWI,EAAQ0O,gBACtB,kBAACrL,EAAA,EAAD,CAAYE,QAAQ,KAAKrE,MAAM,eAA/B,IACI2P,GAEJ,kBAAClP,GAAA,EAAD,CAAOC,UAAWI,EAAQiH,MAAO/H,MAAM,WAAvC,UAKJ,kBAACiL,EAAA,EAAD,CAAMvK,UAAWI,EAAQgC,KAAMA,MAAI,EAAC8M,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACpD,kBAAC3L,EAAA,EAAD,CACEG,UAAU,KACVC,cAAY,EACZF,QAAQ,WACRrE,MAAM,iBAJR,cAQA,yBAAKU,UAAWI,EAAQ0O,gBACtB,kBAACrL,EAAA,EAAD,CAAYE,QAAQ,KAAKrE,MAAM,eAC5B2P,GAEH,kBAAClP,GAAA,EAAD,CAAOC,UAAWI,EAAQiH,MAAO/H,MAAM,SAAvC,UAKJ,kBAACiL,EAAA,EAAD,CAAMvK,UAAWI,EAAQgC,KAAMA,MAAI,EAAC8M,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACpD,kBAAC3L,EAAA,EAAD,CACEG,UAAU,KACVC,cAAY,EACZF,QAAQ,WACRrE,MAAM,iBAJR,wBAQA,yBAAKU,UAAWI,EAAQ0O,gBACtB,kBAACrL,EAAA,EAAD,CAAYE,QAAQ,KAAKrE,MAAM,eAC5B2P,QCxFTpR,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJK,QAAS,OACTsJ,cAAe,UAEjBhD,OAAQ,CACNjG,SAAU,GACVE,WAAYb,EAAMG,WAAWmR,eAC7B/P,MAAOvB,EAAMwB,QAAQ+P,OAAOC,WA4DjBC,GAxD6B,SAAC,GAA4B,IAA1BxP,EAAyB,EAAzBA,UAAcE,EAAW,6BAChEE,EAAUvC,KACV2E,EAAezF,cAFiD,EAGpC6D,mBAAqB,IAHe,mBAG/D6O,EAH+D,KAGpDC,EAHoD,KAKhEC,EAAe/M,sBAAW,sBAAC,4BAAAC,EAAA,+EAENC,IAAMC,IAC3B,8BAH2B,OAEvBC,EAFuB,OAMzBR,EAAarF,SACfuS,EAAa1M,EAASC,KAAKwM,WAPA,gDAU7BvM,QAAQtD,MAAR,MAV6B,yDAY9B,CAAC4C,IAMJ,OAJAtF,qBAAU,WACRyS,MACC,CAACA,IAGF,kBAACxM,EAAA,EAAD,eAAMnD,UAAWK,YAAKD,EAAQpC,KAAMgC,IAAgBE,GAClD,kBAACkD,EAAA,EAAD,CAAYC,OAAQ,kBAACC,EAAA,EAAD,MAAuBvC,MAAM,kBACjD,kBAACwC,EAAA,EAAD,MACA,kBAACO,EAAA,EAAD,CAAMC,gBAAc,GACjB0L,EAAUhS,KAAI,SAACmS,EAAU3L,GAAX,OACb,kBAACC,EAAA,EAAD,CAAU5B,QAAS2B,EAAIwL,EAAUtL,OAAS,EAAGC,IAAKwL,EAASvS,MACzD,kBAACqE,EAAA,EAAD,KACE,kBAAC4C,EAAA,EAAD,CACEtE,UAAWI,EAAQuE,OACnBxE,MAAO,CAAEV,gBAAiBmQ,EAAStQ,QAElCsQ,EAASC,WAGd,kBAAChL,EAAA,EAAD,CACExF,QAASuQ,EAASvS,KAClByS,uBAAwB,CAAEnM,QAAS,QAErC,kBAACF,EAAA,EAAD,CAAYE,QAAQ,QAAQrE,MAAM,iBAC/BsN,KAAQgD,EAASnI,OAAOqF,OAAO,eCpExCjP,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJyB,gBAAiB1B,EAAMwB,QAAQsG,WAAWkB,KAC1CmB,UAAW,OACX6H,WAAYhS,EAAMoB,QAAQ,GAC1B6Q,cAAejS,EAAMoB,QAAQ,QAuClB8Q,UAnCsB,WACnC,IAAM7P,EAAUvC,KAEhB,OACE,kBAACqS,EAAA,EAAD,CAAMlQ,UAAWI,EAAQpC,KAAM+C,MAAM,yBACnC,kBAACoP,EAAA,EAAD,CAAW3P,UAAU,GACnB,kBAAC,GAAD,MACA,kBAAC+J,EAAA,EAAD,CAAMC,WAAS,EAACrL,QAAS,GACvB,kBAACoL,EAAA,EAAD,CAAMnI,MAAI,EAACgN,GAAI,IACb,kBAAC,GAAD,OAEF,kBAAC7E,EAAA,EAAD,CAAMnI,MAAI,EAACgO,GAAI,EAAGC,GAAI,EAAGjB,GAAI,IAC3B,kBAAC,EAAD,OAEF,kBAAC7E,EAAA,EAAD,CAAMnI,MAAI,EAACgO,GAAI,EAAGC,GAAI,EAAGjB,GAAI,IAC3B,kBAAC,EAAD,OAEF,kBAAC7E,EAAA,EAAD,CAAMnI,MAAI,EAACgO,GAAI,EAAGhB,GAAI,IACpB,kBAAC,GAAD,OAEF,kBAAC7E,EAAA,EAAD,CAAMnI,MAAI,EAACgO,GAAI,EAAGhB,GAAI,IACpB,kBAAC,EAAD,OAEF,kBAAC7E,EAAA,EAAD,CAAMnI,MAAI,EAACgO,GAAI,EAAGhB,GAAI,IACpB,kBAAC,GAAD,OAEF,kBAAC7E,EAAA,EAAD,CAAMnI,MAAI,EAACgO,GAAI,EAAGhB,GAAI,IACpB,kBAAC,GAAD","file":"static/js/39.11e16a19.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","const getInitials = (name: string = '') => {\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n};\n\nexport default getInitials;\n","import { fade, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, ReactNode } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={clsx(\n        classes.root,\n        {\n          [classes[color]]: color\n        },\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import {\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Tooltip\n} from '@material-ui/core';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport React, { FC, memo, useRef, useState } from 'react';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nconst GenericMoreButton: FC = props => {\n  const classes = useStyles();\n  const moreRef = useRef<any>(null);\n  const [openMenu, setOpenMenu] = useState<boolean>(false);\n\n  const handleMenuOpen = (): void => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = (): void => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton onClick={handleMenuOpen} ref={moreRef} {...props}>\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(GenericMoreButton);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport { CustomerActivity as CustomerActivityType } from 'src/types/reports';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\n\ninterface CustomerActivityProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst CustomerActivity: FC<CustomerActivityProps> = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [activities, setActivities] = useState<CustomerActivityType[]>([]);\n\n  const getActivities = useCallback(async () => {\n    try {\n      const response = await axios.get<{ activities: CustomerActivityType[] }>(\n        '/api/reports/customer-activity'\n      );\n\n      if (isMountedRef.current) {\n        setActivities(response.data.activities);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getActivities();\n  }, [getActivities]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader title=\"Customer Activity\" action={<GenericMoreButton />} />\n      <Divider />\n      <Box display=\"flex\">\n        <div className={classes.item}>\n          <Typography align=\"center\" variant=\"h3\" color=\"textPrimary\">\n            15,245\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Registered\n          </Typography>\n        </div>\n        <Divider />\n        <div className={classes.item}>\n          <Typography align=\"center\" variant=\"h3\" color=\"textPrimary\">\n            357\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Online\n          </Typography>\n        </div>\n      </Box>\n      <Divider />\n      <List disablePadding>\n        {activities.map((activity, i) => (\n          <ListItem divider={i < activities.length - 1} key={activity.id}>\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Customer\"\n                component={RouterLink}\n                src={activity.customer.avatar}\n                to=\"#\"\n              >\n                {getInitials(activity.customer.name)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"#\"\n                  underline=\"none\"\n                  variant=\"h6\"\n                >\n                  {activity.customer.name}\n                </Link>\n              }\n              secondary={\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {activity.description}\n                </Typography>\n              }\n            />\n            <Typography color=\"textSecondary\" noWrap variant=\"caption\">\n              {moment(activity.createdAt).fromNow()}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n};\n\nCustomerActivity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CustomerActivity;\n","import { useTheme } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Theme } from 'src/theme';\n\ninterface ChartProps {\n  className?: string;\n  data: any;\n}\n\nconst Chart: FC<ChartProps> = ({ data: dataProp, ...rest }) => {\n  const theme: Theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets.map(dataset => ({\n      ...dataset,\n      borderWidth: 8,\n      borderColor: theme.palette.background.default,\n      hoverBorderColor: theme.palette.background.default\n    })),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n\n  return <Doughnut data={data} options={options} {...rest} />;\n};\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired\n};\n\nexport default Chart;\n","import {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport Chart from './Chart';\n\ninterface EarningsSegmentationProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst EarningsSegmentation: FC<EarningsSegmentationProps> = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [earnings, setEarnings] = useState<any>(null);\n\n  const getEarnings = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/reports/earnings');\n\n      if (isMountedRef.current) {\n        setEarnings(response.data.earnings);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEarnings();\n  }, [getEarnings]);\n\n  if (!earnings) {\n    return null;\n  }\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Earnings Segmentation\"\n      />\n      <Divider />\n      <Box p={3} position=\"relative\" minHeight={320}>\n        <Chart data={earnings} />\n      </Box>\n      <Divider />\n      <Box display=\"flex\">\n        {earnings.labels.map((label: string, i: number) => (\n          <div key={label} className={classes.item}>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              {earnings.datasets[0].data[i]}%\n            </Typography>\n            <Typography variant=\"overline\" color=\"textSecondary\">\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box>\n    </Card>\n  );\n};\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\n\nexport default EarningsSegmentation;\n","import { fade, makeStyles, useTheme } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Theme } from 'src/theme';\n\ninterface ChartProps {\n  className?: string;\n  data: any;\n  labels: string[];\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nconst Chart: FC<ChartProps> = ({\n  data: dataProp,\n  labels,\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme: Theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        label: 'This year',\n        backgroundColor: theme.palette.secondary.main,\n        data: dataProp.thisYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      },\n      {\n        label: 'Last year',\n        backgroundColor: fade(theme.palette.secondary.main, 0.25),\n        data: dataProp.lastYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 5,\n            callback: (value: number) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem: any) => {\n          let label = `Sales: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Bar data={data} options={options} />\n    </div>\n  );\n};\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import { Box, Card, CardHeader, Divider, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\ninterface FinancialStatsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: 400\n  }\n}));\n\nconst FinancialStats: FC<FinancialStatsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const stats = {\n    thisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\n    lastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13]\n  };\n  const labels = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ];\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader action={<GenericMoreButton />} title=\"Financial Stats\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700} pt={4} pr={2} pl={2}>\n          <Chart className={classes.chart} data={stats} labels={labels} />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nFinancialStats.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FinancialStats;\n","import {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  makeStyles,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useRef, useState } from 'react';\nimport { Calendar as CalendarIcon } from 'react-feather';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const actionRef = useRef<any>(null);\n  const [isMenuOpen, setMenuOpen] = useState<boolean>(false);\n  const [timeRange, setTimeRange] = useState<string>(timeRanges[2].text);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography variant=\"body1\" color=\"textPrimary\">\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          Finance Overview\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <CalendarIcon />\n            </SvgIcon>\n          }\n        >\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map(_timeRange => (\n            <MenuItem\n              key={_timeRange.value}\n              onClick={() => setTimeRange(_timeRange.text)}\n            >\n              {_timeRange.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Link as RouterLink } from 'react-router-dom';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Label from 'src/components/Label';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Order, OrderStatus } from 'src/types/reports';\nimport axios from 'src/utils/axios';\n\ninterface LatestOrdersProps {\n  className?: string;\n}\n\nconst labelColors: Record<OrderStatus, 'success' | 'warning' | 'error'> = {\n  complete: 'success',\n  pending: 'warning',\n  rejected: 'error'\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst LatestOrders: FC<LatestOrdersProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [orders, setOrders] = useState<Order[]>([]);\n\n  const getOrders = useCallback(async () => {\n    try {\n      const response = await axios.get<{ orders: Order[] }>(\n        '/api/reports/latest-orders'\n      );\n\n      if (isMountedRef.current) {\n        setOrders(response.data.orders);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getOrders();\n  }, [getOrders]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader action={<GenericMoreButton />} title=\"Latest Orders\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip enterDelay={300} title=\"Sort\">\n                    <TableSortLabel active direction=\"desc\">\n                      Number\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>Customer</TableCell>\n                <TableCell>Items</TableCell>\n                <TableCell>Total</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell align=\"right\">Date</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map(order => (\n                <TableRow hover key={order.id}>\n                  <TableCell>{order.number}</TableCell>\n                  <TableCell>{order.customer.name}</TableCell>\n                  <TableCell>{order.items}</TableCell>\n                  <TableCell>\n                    {numeral(order.totalAmount).format(\n                      `${order.currency}0,0.00`\n                    )}\n                  </TableCell>\n                  <TableCell>\n                    <Label color={labelColors[order.status]}>\n                      {order.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(order.createdAt).format('DD MMM, YYYY hh:mm:ss')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/management/orders\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface CircularProgressProps {\n  className?: string;\n  value: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  circle1: {\n    stroke:\n      theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: theme.palette.secondary.main,\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  }\n}));\n\nconst CircularProgress: FC<CircularProgressProps> = ({\n  className,\n  value,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <svg viewBox=\"0 0 36 36\">\n        <path\n          className={classes.circle1}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray=\"100, 100\"\n        />\n        <path\n          className={classes.circle2}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray={`${value}, 100`}\n        />\n      </svg>\n    </div>\n  );\n};\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  colors,\n  Divider,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Link as RouterLink } from 'react-router-dom';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport { Product } from 'src/types/reports';\nimport axios from 'src/utils/axios';\nimport CircularProgress from './CircularProgress';\n\ninterface MostProfitableProductsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  image: {\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  }\n}));\n\nconst MostProfitableProducts: FC<MostProfitableProductsProps> = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [products, setProducts] = useState<Product[]>([]);\n\n  const getProducts = useCallback(async () => {\n    try {\n      const response = await axios.get<{ products: Product[] }>(\n        '/api/reports/profitable-products'\n      );\n\n      if (isMountedRef.current) {\n        setProducts(response.data.products);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Most Profitable Products\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableBody>\n              {products.map(product => (\n                <TableRow hover key={product.id}>\n                  <TableCell>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <img\n                        alt=\"Product\"\n                        className={classes.image}\n                        src={product.image}\n                      />\n                      <Box ml={2}>\n                        <Typography variant=\"h6\" color=\"textPrimary\">\n                          {product.name}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          <span className={classes.subscriptions}>\n                            {numeral(product.subscriptions).format('0,0')}\n                          </span>{' '}\n                          Active\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Typography variant=\"h6\" color=\"textPrimary\">\n                      Price\n                    </Typography>\n                    <Typography noWrap variant=\"body2\" color=\"textSecondary\">\n                      <span className={classes.value}>\n                        {numeral(product.price).format(\n                          `${product.currency}0,0.00`\n                        )}\n                      </span>{' '}\n                      monthly\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"flex-end\"\n                    >\n                      <Box mr={2}>\n                        <Typography\n                          align=\"right\"\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {product.conversionRate}%\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Conversion Rate\n                        </Typography>\n                      </Box>\n                      <CircularProgress value={product.conversionRate} />\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nMostProfitableProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MostProfitableProducts;\n","import { Card, Grid, makeStyles, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport Label from 'src/components/Label';\nimport { Theme } from 'src/theme';\n\ninterface OverviewProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Overview: FC<OverviewProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const overview = {\n    income: '854,355.00',\n    expanses: '373,250.50',\n    profit: '123,532.00',\n    subscriptions: '26,000'\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Grid alignItems=\"center\" container justify=\"space-between\">\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Income\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              ${overview.income}\n            </Typography>\n            <Label className={classes.label} color=\"success\">\n              +25%\n            </Label>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Expanses\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              ${overview.expanses}\n            </Typography>\n            <Label className={classes.label} color=\"success\">\n              +12%\n            </Label>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Net Profit\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {overview.profit}\n            </Typography>\n            <Label className={classes.label} color=\"error\">\n              -20%\n            </Label>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Active Subscriptions\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {overview.subscriptions}\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nOverview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Overview;\n","import {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport { Referral } from 'src/types/reports';\nimport axios from 'src/utils/axios';\n\ninterface TopReferralsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  avatar: {\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.palette.common.white\n  }\n}));\n\nconst TopReferrals: FC<TopReferralsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [referrals, setReferrals] = useState<Referral[]>([]);\n\n  const getReferrals = useCallback(async () => {\n    try {\n      const response = await axios.get<{ referrals: Referral[] }>(\n        '/api/reports/top-referrals'\n      );\n\n      if (isMountedRef.current) {\n        setReferrals(response.data.referrals);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getReferrals();\n  }, [getReferrals]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader action={<GenericMoreButton />} title=\"Top Referrals\" />\n      <Divider />\n      <List disablePadding>\n        {referrals.map((referral, i) => (\n          <ListItem divider={i < referrals.length - 1} key={referral.name}>\n            <ListItemAvatar>\n              <Avatar\n                className={classes.avatar}\n                style={{ backgroundColor: referral.color }}\n              >\n                {referral.initials}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={referral.name}\n              primaryTypographyProps={{ variant: 'h6' }}\n            />\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {numeral(referral.value).format('0,0')}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n};\n\nTopReferrals.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopReferrals;\n","import { Container, Grid, makeStyles } from '@material-ui/core';\nimport React, { FC } from 'react';\nimport Page from 'src/components/Page';\nimport { Theme } from 'src/theme';\nimport CustomerActivity from './CustomerActivity';\nimport EarningsSegmentation from './EarningsSegmentation';\nimport FinancialStats from './FinancialStats';\nimport Header from './Header';\nimport LatestOrders from './LatestOrders';\nimport MostProfitableProducts from './MostProfitableProducts';\nimport Overview from './Overview';\nimport TopReferrals from './TopReferrals';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst DashboardAlternativeView: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Page className={classes.root} title=\"Dashboard Alternative\">\n      <Container maxWidth={false}>\n        <Header />\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Overview />\n          </Grid>\n          <Grid item lg={8} xl={9} xs={12}>\n            <FinancialStats />\n          </Grid>\n          <Grid item lg={4} xl={3} xs={12}>\n            <EarningsSegmentation />\n          </Grid>\n          <Grid item lg={8} xs={12}>\n            <LatestOrders />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <CustomerActivity />\n          </Grid>\n          <Grid item lg={8} xs={12}>\n            <MostProfitableProducts />\n          </Grid>\n          <Grid item lg={4} xs={12}>\n            <TopReferrals />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default DashboardAlternativeView;\n"],"sourceRoot":""}