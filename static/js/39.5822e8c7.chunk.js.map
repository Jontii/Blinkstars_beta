{"version":3,"sources":["hooks/useIsMountedRef.ts","utils/getInitials.ts","components/Label.tsx","components/GenericMoreButton.tsx","views/reports/DashboardView/Header.tsx","views/reports/DashboardView/Campaigns.tsx","views/reports/DashboardView/LatestProjects.tsx","views/reports/DashboardView/NewProjects.tsx","views/reports/DashboardView/RoiPerCustomer.tsx","views/reports/DashboardView/TodaysMoney.tsx","views/reports/DashboardView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","timeRanges","value","text","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","Button","startIcon","SvgIcon","Menu","getContentAnchorEl","_timeRange","MenuItem","key","Campaigns","campaign","index","technology","marginLeft","row","enqueueSnackbar","useSnackbar","useSelector","state","approvedUser","companyAcceptedUser","userAccepted","notDemoCampaign","author","console","log","accepted","setAccepted","dispatch","useDispatch","TableRow","hover","TableCell","Box","Avatar","alt","src","avatar","ml","userAcceptedCampaign","transitionDuration","matchScore","align","moment","createdAt","format","LatestProjects","showOnlyFirst","isMountedRef","projects","setProjects","useHistory","getProjects","useCallback","a","axios","get","response","temp","data","createCampaign","campaignTitle","push","id","process","companyCampaign","companyName","budget","parseInt","campaignBudget","Date","getTime","currency","technologies","Card","CardHeader","action","GenericMoreButton","Divider","Table","TableHead","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","project","p","size","endIcon","label","contrastText","NewProjects","gutterBottom","flexWrap","RoiPerCustomer","TodaysMoney","background","dark","minHeight","paddingTop","paddingBottom","DashboardView","saveSettings","useSettings","user","useAuth","tier","THEMES","LIGHT_COMPANY","LIGHT","Page","Container","lg","sm","xs"],"mappings":"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","file":"static/js/39.5822e8c7.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","const getInitials = (name: string = '') => {\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n};\n\nexport default getInitials;\n","import { fade, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, ReactNode } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={clsx(\n        classes.root,\n        {\n          [classes[color]]: color\n        },\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import {\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Tooltip\n} from '@material-ui/core';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport React, { FC, memo, useRef, useState } from 'react';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nconst GenericMoreButton: FC = props => {\n  const classes = useStyles();\n  const moreRef = useRef<any>(null);\n  const [openMenu, setOpenMenu] = useState<boolean>(false);\n\n  const handleMenuOpen = (): void => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = (): void => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton onClick={handleMenuOpen} ref={moreRef} {...props}>\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(GenericMoreButton);\n","import {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  makeStyles,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useRef, useState } from 'react';\nimport { Calendar as CalendarIcon } from 'react-feather';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const actionRef = useRef<any>(null);\n  const [isMenuOpen, setMenuOpen] = useState<boolean>(false);\n  const [timeRange, setTimeRange] = useState<string>(timeRanges[2].text);\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography variant=\"body1\" color=\"textPrimary\">\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          Here&apos;s what&apos;s happening\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <CalendarIcon />\n            </SvgIcon>\n          }\n        >\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map(_timeRange => (\n            <MenuItem\n              key={_timeRange.value}\n              onClick={() => setTimeRange(_timeRange.text)}\n            >\n              {_timeRange.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Link,\r\n  makeStyles,\r\n  TableCell,\r\n  TableRow\r\n} from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { FC, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { userAcceptedCampaign } from 'src/slices/campaign';\r\nimport { useDispatch, useSelector } from 'src/store';\r\nimport { Project } from 'src/types/reports';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\ninterface IProps {\r\n  campaign: Project;\r\n  index: number;\r\n}\r\n\r\nconst Campaigns: FC<IProps> = ({ campaign, index }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    technology: {\r\n      height: 30,\r\n      '& + &': {\r\n        marginLeft: theme.spacing(1)\r\n      }\r\n    },\r\n    row: {\r\n      cursor: 'pointer'\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { companyAcceptedUser, userAccepted } = useSelector(\r\n    state => state.campaign.approvedUser\r\n  );\r\n\r\n  let notDemoCampaign = false;\r\n  if (campaign.author.name === 'Telia') {\r\n    notDemoCampaign = false;\r\n    console.log('Enter');\r\n  } else if (campaign.author.name === 'Bring') {\r\n    notDemoCampaign = false;\r\n    console.log('Enter');\r\n  } else {\r\n    notDemoCampaign = true;\r\n  }\r\n  console.log(notDemoCampaign);\r\n\r\n  const [accepted, setAccepted] = useState<boolean>(\r\n    notDemoCampaign ? userAccepted : false\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setClickAccepted = (value: boolean) => {\r\n    if (!value) {\r\n      setAccepted(value);\r\n      dispatch(userAcceptedCampaign(true));\r\n\r\n      enqueueSnackbar(\r\n        'Applied to campaign, congratulations! Click on the campaign title to view the campaign while your status is pending. 🎉',\r\n        {\r\n          variant: 'success',\r\n          anchorOrigin: {\r\n            horizontal: 'center',\r\n            vertical: 'bottom'\r\n          },\r\n          transitionDuration: 500\r\n        }\r\n      );\r\n    } else {\r\n      setAccepted(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow hover className={classes.row}>\r\n      <TableCell>\r\n        {/* onClick={() => history.push('/app/projects/1')} */}\r\n        <Link component={RouterLink} to={`/app/campaign/view/${index}`}>\r\n          {/* {campaign.createCampaign.campaignTitle} */}\r\n          {campaign.title}\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Avatar alt=\"Author\" src={campaign.author.avatar}>\r\n            {getInitials(campaign.author.name)}\r\n          </Avatar>\r\n          <Box ml={1}>{campaign.author.name}</Box>\r\n        </Box>\r\n      </TableCell>\r\n      {/* <TableCell>\r\n                        {numeral(campaign.createCampaign.campaignBudget).format(\r\n                          `SEK0,0.00`\r\n                        )}\r\n                      </TableCell> */}\r\n      <TableCell>\r\n        {!accepted ? (\r\n          <Button onClick={() => setClickAccepted(!accepted)} color=\"secondary\">\r\n            Accept\r\n          </Button>\r\n        ) : (\r\n          <Button color=\"primary\">\r\n            {companyAcceptedUser ? <>Company Accepted</> : <>Pending</>}\r\n          </Button>\r\n        )}\r\n      </TableCell>\r\n      <TableCell style={{ color: '#4caf50' }}>{campaign.matchScore}</TableCell>\r\n      <TableCell align=\"right\">\r\n        {moment(campaign.createdAt).format('DD MMM, YYYY')}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Campaigns;\r\n","import {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useHistory } from 'react-router';\nimport { Link as RouterLink } from 'react-router-dom';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { useSelector } from 'src/store';\nimport { Theme } from 'src/theme';\nimport { Project } from 'src/types/reports';\nimport axios from 'src/utils/axios';\nimport Campaigns from './Campaigns';\n\ninterface LatestProjectsProps {\n  className?: string;\n  title?: string;\n  showOnlyFirst: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  technology: {\n    height: 30,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  row: {\n    cursor: 'pointer'\n  }\n}));\n\nconst LatestProjects: FC<LatestProjectsProps> = ({\n  className,\n  title,\n  showOnlyFirst,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState<Project[]>([]);\n  const history = useHistory();\n\n  const campaign = useSelector(state => state.campaign);\n  const getProjects = useCallback(async () => {\n    try {\n      const response = await axios.get<{ projects: Project[] }>(\n        '/api/reports/latest-projects'\n      );\n\n      if (isMountedRef.current) {\n        let tempProjects = [];\n\n        if (showOnlyFirst) {\n          let temp = [...response.data.projects];\n\n          if (campaign.createCampaign.campaignTitle) {\n            temp.push({\n              id: 'klarn',\n              author: {\n                avatar: `${process.env.PUBLIC_URL}/static/images/avatars/avatar_9.svg`,\n                name: campaign.companyCampaign.companyName\n              },\n              budget: parseInt(campaign.createCampaign.campaignBudget),\n              createdAt: new Date().getTime(),\n              currency: 'SEK',\n              technologies: [],\n              matchScore: '89%',\n              title: campaign.createCampaign.campaignTitle\n            });\n          }\n\n          // temp.splice(0, 1);\n          setProjects(temp);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [\n    isMountedRef,\n    campaign.createCampaign.campaignTitle,\n    campaign.createCampaign.campaignBudget,\n    campaign.companyCampaign.companyName,\n    showOnlyFirst\n  ]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader\n        action={<GenericMoreButton />}\n        title={title || 'My Matched Campaigns'}\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={900}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Title</TableCell>\n                <TableCell>Author</TableCell>\n                {/* <TableCell>Budget</TableCell> */}\n                {showOnlyFirst && <TableCell>Campaign Status</TableCell>}\n                {showOnlyFirst && <TableCell>Match Score</TableCell>}\n                <TableCell align=\"right\" sortDirection=\"desc\">\n                  <Tooltip enterDelay={300} title=\"Sort\">\n                    <TableSortLabel active direction=\"desc\">\n                      Created\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            {/* {!showOnlyFirst && (\n              <TableBody>\n                {projects.map(project => (\n                  <TableRow\n                    hover\n                    key={project.id}\n                    className={classes.row}\n                    // onClick={() => history.push('/app/projects/1')}\n                  >\n                    <TableCell>{project.title}</TableCell>\n                    <TableCell>\n                      <Box display=\"flex\" alignItems=\"center\">\n                        <Avatar alt=\"Author\" src={project.author.avatar}>\n                          {getInitials(project.author.name)}\n                        </Avatar>\n                        <Box ml={1}>{project.author.name}</Box>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {numeral(project.budget).format(\n                        `${project.currency}0,0.00`\n                      )}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {moment(project.createdAt).format('DD MMM, YYYY')}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            )} */}\n            <>\n              <TableBody>\n                {projects &&\n                  showOnlyFirst &&\n                  projects.map((project, index) => (\n                    <Campaigns key={index} campaign={project} index={index} />\n                  ))}\n              </TableBody>\n            </>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      {!showOnlyFirst && (\n        <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n          <Button\n            component={RouterLink}\n            size=\"small\"\n            to=\"#\"\n            endIcon={<NavigateNextIcon />}\n          >\n            See all\n          </Button>\n        </Box>\n      )}\n    </Card>\n  );\n};\n\nLatestProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProjects;\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpenOutlined';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { useSelector } from 'src/store';\nimport { Theme } from 'src/theme';\n\ninterface NewProjectsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst NewProjects: FC<NewProjectsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: 12,\n    difference: -10\n  };\n\n  const { campaignTitle } = useSelector(state => state.campaign.createCampaign);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          New Campaigns\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            {campaignTitle ? 3 : 2}\n          </Typography>\n          {/* <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}%\n          </Label> */}\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <FolderOpenIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nNewProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NewProjects;\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface RoiPerCustomerProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    color: theme.palette.secondary.main,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst RoiPerCustomer: FC<RoiPerCustomerProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '25.50',\n    currency: 'SEK'\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          color=\"inherit\"\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n        >\n          Roi per campaign\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography color=\"inherit\" variant=\"h3\">\n            {data.currency}\n            {data.value}\n          </Typography>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar} color=\"inherit\">\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nRoiPerCustomer.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RoiPerCustomer;\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport Label from 'src/components/Label';\nimport { Theme } from 'src/theme';\n\ninterface TodaysMoneyProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst TodaysMoney: FC<TodaysMoneyProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '650',\n    currency: 'SEK',\n    difference: 6\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          Todays money\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            {data.currency}\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}%\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nTodaysMoney.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TodaysMoney;\n","import { Container, Grid, makeStyles } from '@material-ui/core';\nimport React, { FC, useEffect } from 'react';\nimport Page from 'src/components/Page';\nimport { THEMES } from 'src/constants';\nimport useAuth from 'src/hooks/useAuth';\nimport useSettings from 'src/hooks/useSettings';\nimport { Theme } from 'src/theme';\nimport Header from './Header';\nimport LatestProjects from './LatestProjects';\nimport NewProjects from './NewProjects';\nimport RoiPerCustomer from './RoiPerCustomer';\nimport TodaysMoney from './TodaysMoney';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst DashboardView: FC = () => {\n  const classes = useStyles();\n\n  const { saveSettings } = useSettings();\n  const { user } = useAuth();\n\n  useEffect(() => {\n    if (user.tier === 'Company') {\n      saveSettings({ theme: THEMES.LIGHT_COMPANY });\n    } else {\n      saveSettings({ theme: THEMES.LIGHT });\n    }\n  }, []);\n\n  return (\n    <Page className={classes.root} title=\"Dashboard\">\n      <Container maxWidth={false}>\n        <Header />\n        <Grid container spacing={3}>\n          <Grid item lg={3} sm={6} xs={12}>\n            <TodaysMoney />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <NewProjects />\n          </Grid>\n          {/* <Grid\n            item\n            lg={3}\n            sm={6}\n            xs={12}\n          >\n            <SystemHealth />\n          </Grid> */}\n          <Grid item lg={3} sm={6} xs={12}>\n            <RoiPerCustomer />\n          </Grid>\n          {/* <Grid\n            item\n            lg={3}\n            xs={12}\n          >\n            <RealTime />\n          </Grid> */}\n          {/* <Grid item lg={9} xs={12}>\n            <PerformanceOverTime />\n          </Grid> */}\n          {/* <Grid\n            item\n            lg={5}\n            xl={4}\n            xs={12}\n          >\n            <TeamTasks />\n          </Grid> */}\n          <Grid item lg={9} xs={12}>\n            <LatestProjects showOnlyFirst />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default DashboardView;\n"],"sourceRoot":""}