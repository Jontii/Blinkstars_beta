{"version":3,"sources":["hooks/useIsMountedRef.ts","utils/getInitials.ts","components/Label.tsx","components/GenericMoreButton.tsx","views/reports/DashboardView/Header.tsx","views/reports/DashboardView/Campaigns.tsx","views/reports/DashboardView/LatestProjects.tsx","views/reports/DashboardView/NewProjects.tsx","views/reports/DashboardView/RoiPerCustomer.tsx","views/reports/DashboardView/TodaysMoney.tsx","views/reports/DashboardView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","timeRanges","value","text","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","Button","startIcon","SvgIcon","Menu","getContentAnchorEl","_timeRange","MenuItem","key","Campaigns","campaign","index","technology","marginLeft","row","enqueueSnackbar","useSnackbar","useSelector","state","approvedUser","companyAcceptedUser","userAccepted","accepted","setAccepted","useDispatch","TableRow","hover","TableCell","Box","Avatar","alt","src","author","avatar","ml","transitionDuration","matchScore","align","moment","createdAt","format","LatestProjects","showOnlyFirst","isMountedRef","projects","setProjects","useHistory","getProjects","useCallback","a","axios","get","response","temp","data","createCampaign","campaignTitle","push","id","process","companyCampaign","companyName","budget","parseInt","campaignBudget","Date","getTime","currency","technologies","console","Card","CardHeader","action","GenericMoreButton","Divider","Table","TableHead","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","project","p","size","endIcon","label","contrastText","NewProjects","gutterBottom","flexWrap","RoiPerCustomer","TodaysMoney","background","dark","minHeight","paddingTop","paddingBottom","DashboardView","saveSettings","useSettings","user","useAuth","tier","THEMES","LIGHT_COMPANY","LIGHT","Page","Container","lg","sm","xs"],"mappings":"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","file":"static/js/39.97e75019.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\r\n\r\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      isMounted.current = false;\r\n    },\r\n    []\r\n  );\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useIsMountedRef;\r\n","const getInitials = (name: string = '') => {\r\n  return name\r\n    .replace(/\\s+/, ' ')\r\n    .split(' ')\r\n    .slice(0, 2)\r\n    .map(v => v && v[0].toUpperCase())\r\n    .join('');\r\n};\r\n\r\nexport default getInitials;\r\n","import { fade, makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC, ReactNode } from 'react';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface LabelProps {\r\n  className?: string;\r\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\r\n  children?: ReactNode;\r\n  style?: {};\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    fontFamily: theme.typography.fontFamily,\r\n    alignItems: 'center',\r\n    borderRadius: 2,\r\n    display: 'inline-flex',\r\n    flexGrow: 0,\r\n    whiteSpace: 'nowrap',\r\n    cursor: 'default',\r\n    flexShrink: 0,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    height: 20,\r\n    justifyContent: 'center',\r\n    letterSpacing: 0.5,\r\n    minWidth: 20,\r\n    padding: theme.spacing(0.5, 1),\r\n    textTransform: 'uppercase'\r\n  },\r\n  primary: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\r\n  },\r\n  secondary: {\r\n    color: theme.palette.secondary.main,\r\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\r\n  },\r\n  error: {\r\n    color: theme.palette.error.main,\r\n    backgroundColor: fade(theme.palette.error.main, 0.08)\r\n  },\r\n  success: {\r\n    color: theme.palette.success.main,\r\n    backgroundColor: fade(theme.palette.success.main, 0.08)\r\n  },\r\n  warning: {\r\n    color: theme.palette.warning.main,\r\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\r\n  }\r\n}));\r\n\r\nconst Label: FC<LabelProps> = ({\r\n  className = '',\r\n  color = 'secondary',\r\n  children,\r\n  style,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span\r\n      className={clsx(\r\n        classes.root,\r\n        {\r\n          [classes[color]]: color\r\n        },\r\n        className\r\n      )}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'error',\r\n    'warning',\r\n    'success'\r\n  ])\r\n};\r\n\r\nexport default Label;\r\n","import {\r\n  IconButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport React, { FC, memo, useRef, useState } from 'react';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  menu: {\r\n    width: 256,\r\n    maxWidth: '100%'\r\n  }\r\n}));\r\n\r\nconst GenericMoreButton: FC = props => {\r\n  const classes = useStyles();\r\n  const moreRef = useRef<any>(null);\r\n  const [openMenu, setOpenMenu] = useState<boolean>(false);\r\n\r\n  const handleMenuOpen = (): void => {\r\n    setOpenMenu(true);\r\n  };\r\n\r\n  const handleMenuClose = (): void => {\r\n    setOpenMenu(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"More options\">\r\n        <IconButton onClick={handleMenuOpen} ref={moreRef} {...props}>\r\n          <MoreIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        anchorEl={moreRef.current}\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n        onClose={handleMenuClose}\r\n        open={openMenu}\r\n        PaperProps={{ className: classes.menu }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left'\r\n        }}\r\n      >\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <GetAppIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Import\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <FileCopyIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Copy\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <PictureAsPdfIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Export\" />\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <ListItemIcon>\r\n            <ArchiveIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Archive\" />\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(GenericMoreButton);\r\n","import {\r\n  Breadcrumbs,\r\n  Button,\r\n  Grid,\r\n  Link,\r\n  makeStyles,\r\n  Menu,\r\n  MenuItem,\r\n  SvgIcon,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC, useRef, useState } from 'react';\r\nimport { Calendar as CalendarIcon } from 'react-feather';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\ninterface HeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst timeRanges = [\r\n  {\r\n    value: 'today',\r\n    text: 'Today'\r\n  },\r\n  {\r\n    value: 'yesterday',\r\n    text: 'Yesterday'\r\n  },\r\n  {\r\n    value: 'last_30_days',\r\n    text: 'Last 30 days'\r\n  },\r\n  {\r\n    value: 'last_year',\r\n    text: 'Last year'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const actionRef = useRef<any>(null);\r\n  const [isMenuOpen, setMenuOpen] = useState<boolean>(false);\r\n  const [timeRange, setTimeRange] = useState<string>(timeRanges[2].text);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={3}\r\n      justify=\"space-between\"\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Grid item>\r\n        <Breadcrumbs\r\n          separator={<NavigateNextIcon fontSize=\"small\" />}\r\n          aria-label=\"breadcrumb\"\r\n        >\r\n          <Link\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            to=\"/app\"\r\n            component={RouterLink}\r\n          >\r\n            Dashboard\r\n          </Link>\r\n          <Typography variant=\"body1\" color=\"textPrimary\">\r\n            Reports\r\n          </Typography>\r\n        </Breadcrumbs>\r\n        <Typography variant=\"h3\" color=\"textPrimary\">\r\n          Here&apos;s what&apos;s happening\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          ref={actionRef}\r\n          onClick={() => setMenuOpen(true)}\r\n          startIcon={\r\n            <SvgIcon fontSize=\"small\">\r\n              <CalendarIcon />\r\n            </SvgIcon>\r\n          }\r\n        >\r\n          {timeRange}\r\n        </Button>\r\n        <Menu\r\n          anchorEl={actionRef.current}\r\n          onClose={() => setMenuOpen(false)}\r\n          open={isMenuOpen}\r\n          getContentAnchorEl={null}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center'\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center'\r\n          }}\r\n        >\r\n          {timeRanges.map(_timeRange => (\r\n            <MenuItem\r\n              key={_timeRange.value}\r\n              onClick={() => setTimeRange(_timeRange.text)}\r\n            >\r\n              {_timeRange.text}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Link,\r\n  makeStyles,\r\n  TableCell,\r\n  TableRow\r\n} from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport { useSnackbar } from 'notistack';\r\nimport React, { FC, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'src/store';\r\nimport { Project } from 'src/types/reports';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\ninterface IProps {\r\n  campaign: Project;\r\n  index: number;\r\n}\r\n\r\nconst Campaigns: FC<IProps> = ({ campaign, index }) => {\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    technology: {\r\n      height: 30,\r\n      '& + &': {\r\n        marginLeft: theme.spacing(1)\r\n      }\r\n    },\r\n    row: {\r\n      cursor: 'pointer'\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { companyAcceptedUser, userAccepted } = useSelector(\r\n    state => state.campaign.approvedUser\r\n  );\r\n\r\n  // let notDemoCampaign = false;\r\n  // if (campaign.author.name === 'Telia') {\r\n  //   notDemoCampaign = false;\r\n  //   console.log('Enter');\r\n  // } else if (campaign.author.name === 'Bring') {\r\n  //   notDemoCampaign = false;\r\n  //   console.log('Enter');\r\n  // } else {\r\n  //   notDemoCampaign = true;\r\n  // }\r\n  // console.log(notDemoCampaign);\r\n\r\n  const [accepted, setAccepted] = useState<boolean>(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setClickAccepted = (value: boolean) => {\r\n    if (!value) {\r\n      setAccepted(value);\r\n      // dispatch(userAcceptedCampaign(true));\r\n\r\n      enqueueSnackbar(\r\n        'Applied to campaign, congratulations! Click on the campaign title to view the campaign while your status is pending. 🎉',\r\n        {\r\n          variant: 'success',\r\n          anchorOrigin: {\r\n            horizontal: 'center',\r\n            vertical: 'bottom'\r\n          },\r\n          transitionDuration: 500\r\n        }\r\n      );\r\n    } else {\r\n      setAccepted(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow hover className={classes.row}>\r\n      <TableCell>\r\n        {/* onClick={() => history.push('/app/projects/1')} */}\r\n        <Link component={RouterLink} to={`/app/campaign/view/${index}`}>\r\n          {/* {campaign.createCampaign.campaignTitle} */}\r\n          {campaign.title}\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Avatar alt=\"Author\" src={campaign.author.avatar}>\r\n            {getInitials(campaign.author.name)}\r\n          </Avatar>\r\n          <Box ml={1}>{campaign.author.name}</Box>\r\n        </Box>\r\n      </TableCell>\r\n      {/* <TableCell>\r\n                        {numeral(campaign.createCampaign.campaignBudget).format(\r\n                          `SEK0,0.00`\r\n                        )}\r\n                      </TableCell> */}\r\n      <TableCell>\r\n        {accepted ? (\r\n          <Button onClick={() => setClickAccepted(!accepted)} color=\"secondary\">\r\n            Accept\r\n          </Button>\r\n        ) : (\r\n          <Button color=\"primary\">\r\n            Pending\r\n            {/* {companyAcceptedUser ? <>Company Accepted</> : <>Pending</>} */}\r\n          </Button>\r\n        )}\r\n      </TableCell>\r\n      <TableCell style={{ color: '#4caf50' }}>{campaign.matchScore}</TableCell>\r\n      <TableCell align=\"right\">\r\n        {moment(campaign.createdAt).format('DD MMM, YYYY')}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Campaigns;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { useHistory } from 'react-router';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport GenericMoreButton from 'src/components/GenericMoreButton';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport { useSelector } from 'src/store';\r\nimport { Theme } from 'src/theme';\r\nimport { Project } from 'src/types/reports';\r\nimport axios from 'src/utils/axios';\r\nimport Campaigns from './Campaigns';\r\n\r\ninterface LatestProjectsProps {\r\n  className?: string;\r\n  title?: string;\r\n  showOnlyFirst: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  technology: {\r\n    height: 30,\r\n    '& + &': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  row: {\r\n    cursor: 'pointer'\r\n  }\r\n}));\r\n\r\nconst LatestProjects: FC<LatestProjectsProps> = ({\r\n  className,\r\n  title,\r\n  showOnlyFirst,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const history = useHistory();\r\n\r\n  const campaign = useSelector(state => state.campaign);\r\n  const getProjects = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get<{ projects: Project[] }>(\r\n        '/api/reports/latest-projects'\r\n      );\r\n\r\n      if (isMountedRef.current) {\r\n        let tempProjects = [];\r\n\r\n        if (showOnlyFirst) {\r\n          let temp = [...response.data.projects];\r\n\r\n          if (campaign.createCampaign.campaignTitle) {\r\n            temp.push({\r\n              id: 'klarn',\r\n              author: {\r\n                avatar: `${process.env.PUBLIC_URL}/static/images/avatars/avatar_9.svg`,\r\n                name: campaign.companyCampaign.companyName\r\n              },\r\n              budget: parseInt(campaign.createCampaign.campaignBudget),\r\n              createdAt: new Date().getTime(),\r\n              currency: 'SEK',\r\n              technologies: [],\r\n              matchScore: '89%',\r\n              title: campaign.createCampaign.campaignTitle\r\n            });\r\n          }\r\n\r\n          // temp.splice(0, 1);\r\n          setProjects(temp);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [\r\n    isMountedRef,\r\n    campaign.createCampaign.campaignTitle,\r\n    campaign.createCampaign.campaignBudget,\r\n    campaign.companyCampaign.companyName,\r\n    showOnlyFirst\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    getProjects();\r\n  }, [getProjects]);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardHeader\r\n        action={<GenericMoreButton />}\r\n        title={title || 'My Matched Campaigns'}\r\n      />\r\n      <Divider />\r\n      <PerfectScrollbar>\r\n        <Box minWidth={900}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Title</TableCell>\r\n                <TableCell>Campaign Owner</TableCell>\r\n                {/* <TableCell>Budget</TableCell> */}\r\n                {showOnlyFirst && <TableCell>Campaign Status</TableCell>}\r\n                {showOnlyFirst && <TableCell>Network Match Score</TableCell>}\r\n                <TableCell align=\"right\" sortDirection=\"desc\">\r\n                  <Tooltip enterDelay={300} title=\"Sort\">\r\n                    <TableSortLabel active direction=\"desc\">\r\n                      Created\r\n                    </TableSortLabel>\r\n                  </Tooltip>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            {/* {!showOnlyFirst && (\r\n              <TableBody>\r\n                {projects.map(project => (\r\n                  <TableRow\r\n                    hover\r\n                    key={project.id}\r\n                    className={classes.row}\r\n                    // onClick={() => history.push('/app/projects/1')}\r\n                  >\r\n                    <TableCell>{project.title}</TableCell>\r\n                    <TableCell>\r\n                      <Box display=\"flex\" alignItems=\"center\">\r\n                        <Avatar alt=\"Author\" src={project.author.avatar}>\r\n                          {getInitials(project.author.name)}\r\n                        </Avatar>\r\n                        <Box ml={1}>{project.author.name}</Box>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {numeral(project.budget).format(\r\n                        `${project.currency}0,0.00`\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {moment(project.createdAt).format('DD MMM, YYYY')}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            )} */}\r\n            <>\r\n              <TableBody>\r\n                {projects &&\r\n                  showOnlyFirst &&\r\n                  projects.map((project, index) => (\r\n                    <Campaigns key={index} campaign={project} index={index} />\r\n                  ))}\r\n              </TableBody>\r\n            </>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      {!showOnlyFirst && (\r\n        <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button\r\n            component={RouterLink}\r\n            size=\"small\"\r\n            to=\"#\"\r\n            endIcon={<NavigateNextIcon />}\r\n          >\r\n            See all\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProjects.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestProjects;\r\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpenOutlined';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC } from 'react';\r\nimport { useSelector } from 'src/store';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface NewProjectsProps {\r\n  className?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  label: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: theme.palette.secondary.contrastText,\r\n    height: 48,\r\n    width: 48\r\n  }\r\n}));\r\n\r\nconst NewProjects: FC<NewProjectsProps> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const data = {\r\n    value: 12,\r\n    difference: -10\r\n  };\r\n\r\n  const { campaignTitle } = useSelector(state => state.campaign.createCampaign);\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <Box flexGrow={1}>\r\n        <Typography\r\n          component=\"h3\"\r\n          gutterBottom\r\n          variant=\"overline\"\r\n          color=\"textSecondary\"\r\n        >\r\n          New Campaigns\r\n        </Typography>\r\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\r\n          <Typography variant=\"h3\" color=\"textPrimary\">\r\n            {campaignTitle ? 3 : 2}\r\n          </Typography>\r\n          {/* <Label\r\n            className={classes.label}\r\n            color={data.difference > 0 ? 'success' : 'error'}\r\n          >\r\n            {data.difference > 0 ? '+' : ''}\r\n            {data.difference}%\r\n          </Label> */}\r\n        </Box>\r\n      </Box>\r\n      <Avatar className={classes.avatar}>\r\n        <FolderOpenIcon />\r\n      </Avatar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nNewProjects.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default NewProjects;\r\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC } from 'react';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface RoiPerCustomerProps {\r\n  className?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    color: theme.palette.secondary.contrastText,\r\n    backgroundColor: theme.palette.secondary.main,\r\n    padding: theme.spacing(3),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.contrastText,\r\n    color: theme.palette.secondary.main,\r\n    height: 48,\r\n    width: 48\r\n  }\r\n}));\r\n\r\nconst RoiPerCustomer: FC<RoiPerCustomerProps> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const data = {\r\n    value: '25.50',\r\n    currency: 'SEK'\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <Box flexGrow={1}>\r\n        <Typography\r\n          color=\"inherit\"\r\n          component=\"h3\"\r\n          gutterBottom\r\n          variant=\"overline\"\r\n        >\r\n          Roi per campaign\r\n        </Typography>\r\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\r\n          <Typography color=\"inherit\" variant=\"h3\">\r\n            {data.currency}\r\n            {data.value}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      <Avatar className={classes.avatar} color=\"inherit\">\r\n        <AttachMoneyIcon />\r\n      </Avatar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRoiPerCustomer.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default RoiPerCustomer;\r\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC } from 'react';\r\nimport Label from 'src/components/Label';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface TodaysMoneyProps {\r\n  className?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  label: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: theme.palette.secondary.contrastText,\r\n    height: 48,\r\n    width: 48\r\n  }\r\n}));\r\n\r\nconst TodaysMoney: FC<TodaysMoneyProps> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const data = {\r\n    value: '650',\r\n    currency: 'SEK',\r\n    difference: 6\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <Box flexGrow={1}>\r\n        <Typography\r\n          component=\"h3\"\r\n          gutterBottom\r\n          variant=\"overline\"\r\n          color=\"textSecondary\"\r\n        >\r\n          Todays money\r\n        </Typography>\r\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\r\n          <Typography variant=\"h3\" color=\"textPrimary\">\r\n            {data.currency}\r\n            {data.value}\r\n          </Typography>\r\n          <Label\r\n            className={classes.label}\r\n            color={data.difference > 0 ? 'success' : 'error'}\r\n          >\r\n            {data.difference > 0 ? '+' : ''}\r\n            {data.difference}%\r\n          </Label>\r\n        </Box>\r\n      </Box>\r\n      <Avatar className={classes.avatar}>\r\n        <AttachMoneyIcon />\r\n      </Avatar>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTodaysMoney.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TodaysMoney;\r\n","import { Container, Grid, makeStyles } from '@material-ui/core';\r\nimport React, { FC, useEffect } from 'react';\r\nimport Page from 'src/components/Page';\r\nimport { THEMES } from 'src/constants';\r\nimport useAuth from 'src/hooks/useAuth';\r\nimport useSettings from 'src/hooks/useSettings';\r\nimport { Theme } from 'src/theme';\r\nimport Header from './Header';\r\nimport LatestProjects from './LatestProjects';\r\nimport NewProjects from './NewProjects';\r\nimport RoiPerCustomer from './RoiPerCustomer';\r\nimport TodaysMoney from './TodaysMoney';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst DashboardView: FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const { saveSettings } = useSettings();\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (user.tier === 'Company') {\r\n      saveSettings({ theme: THEMES.LIGHT_COMPANY });\r\n    } else {\r\n      saveSettings({ theme: THEMES.LIGHT });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Dashboard\">\r\n      <Container maxWidth={false}>\r\n        <Header />\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={3} sm={6} xs={12}>\r\n            <TodaysMoney />\r\n          </Grid>\r\n          <Grid item lg={3} sm={6} xs={12}>\r\n            <NewProjects />\r\n          </Grid>\r\n          {/* <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xs={12}\r\n          >\r\n            <SystemHealth />\r\n          </Grid> */}\r\n          <Grid item lg={3} sm={6} xs={12}>\r\n            <RoiPerCustomer />\r\n          </Grid>\r\n          {/* <Grid\r\n            item\r\n            lg={3}\r\n            xs={12}\r\n          >\r\n            <RealTime />\r\n          </Grid> */}\r\n          {/* <Grid item lg={9} xs={12}>\r\n            <PerformanceOverTime />\r\n          </Grid> */}\r\n          {/* <Grid\r\n            item\r\n            lg={5}\r\n            xl={4}\r\n            xs={12}\r\n          >\r\n            <TeamTasks />\r\n          </Grid> */}\r\n          <Grid item lg={9} xs={12}>\r\n            <LatestProjects showOnlyFirst />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default DashboardView;\r\n"],"sourceRoot":""}