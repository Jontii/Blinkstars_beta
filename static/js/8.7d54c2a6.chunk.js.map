{"version":3,"sources":["hooks/useIsMountedRef.ts","../node_modules/deepmerge/dist/es.js","../node_modules/lodash-es/isPlainObject.js","../node_modules/lodash-es/clone.js","../node_modules/lodash-es/toPath.js","../node_modules/lodash-es/cloneDeep.js","../../src/utils.ts","../../src/FormikContext.tsx","../../src/Formik.tsx","../../src/connect.tsx","../../src/Form.tsx","../../src/FieldArray.tsx","../../src/ErrorMessage.tsx","../../src/FastField.tsx","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","views/auth/LoginView/Auth0Login.tsx","views/auth/LoginView/FirebaseAuthLogin.tsx","views/auth/LoginView/JWTLogin.tsx","views/auth/LoginView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","isMergeableObject","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","options","clone","deepmerge","val","Array","isArray","defaultArrayMerge","target","source","concat","map","element","arrayMerge","sourceIsArray","destination","keys","forEach","key","mergeObject","all","array","Error","reduce","prev","next","deepmerge_1","funcProto","Function","objectProto","funcToString","hasOwnProperty","objectCtorString","isPlainObject","isObjectLike","baseGetTag","proto","getPrototype","Ctor","constructor","baseClone","toPath","arrayMap","toKey","isSymbol","copyArray","stringToPath","cloneDeep","CLONE_DEEP_FLAG","isEmptyArray","isFunction","obj","isObject","isInteger","String","Math","Number","isString","isEmptyChildren","children","React","isPromise","getIn","def","p","path","setIn","res","resVal","i","pathArray","currentPath","currentObj","nextPath","setNestedObjectValues","object","visited","response","WeakMap","k","FormikContext","FormikProvider","FormikConsumer","useFormikContext","formik","formikReducer","msg","values","payload","touched","isEqual","state","errors","status","isSubmitting","isValidating","submitCount","emptyErrors","emptyTouched","useFormik","validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit","rest","props","initialValues","initialErrors","initialTouched","initialStatus","fieldRegistry","dispatch","runValidateHandler","Promise","maybePromisedErrors","resolve","actualException","reject","runValidationSchema","validationSchema","schema","promise","field","sync","context","validateData","prepareDataForValidation","data","abortEarly","validateYupSchema","err","yupError","yupToFormErrors","runSingleFieldLevelValidation","runFieldLevelValidations","fieldKeysWithValidation","f","fieldValidations","fieldErrorsList","curr","runAllValidations","fieldErrors","schemaErrors","validateErrors","validateFormWithLowPriority","useEventCallback","unstable_runWithPriority","combinedErrors","type","process","validateFormWithHighPriority","resetForm","nextState","dispatchFn","maybePromisedOnReset","validateField","maybePromise","error","name","registerField","validate","unregisterField","setTouched","shouldValidate","setErrors","setValues","setFieldError","setFieldValue","executeChange","eventOrTextValue","id","checked","multiple","maybePath","test","parsed","parseFloat","isNaN","currentValue","Boolean","currentArrayOfValues","isValueInArray","index","valueProp","getValueForCheckbox","el","getSelectedValues","handleChange","event","setFieldTouched","executeBlur","e","outerHTML","handleBlur","setFormikState","stateOrCb","setStatus","setSubmitting","submitForm","isInstanceOfError","promiseOrUndefined","executeSubmit","result","_errors","handleSubmit","reason","console","imperativeMethods","validateForm","handleReset","getFieldMeta","initialValue","initialError","getFieldHelpers","setValue","setError","getFieldProps","isAnObject","nameOrOptions","valueState","onChange","onBlur","is","dirty","isValid","Formik","formikbag","component","render","innerRef","shouldClone","useIsomorphicLayoutEffect","window","ref","args","connect","Comp","C","componentDisplayName","hoistNonReactStatics","action","_action","onReset","Form","insert","copy","copyArrayLike","arrayLike","maxIndex","parseInt","length","FieldArrayInner","updateArrayField","updateErrors","alterErrors","updateTouched","alterTouched","prevState","fn","fieldError","fieldTouched","push","handlePush","swap","a","indexA","handleSwap","move","from","handleMove","handleInsert","replace","handleReplace","unshift","arr","handleUnshift","handleRemove","handlePop","componentDidUpdate","prevProps","this","remove","pop","tmp","arrayHelpers","form","restOfFormik","module","exports","require","g","h","l","defineProperty","MessageChannel","q","t","unstable_now","b","setTimeout","u","Date","now","clearTimeout","unstable_forceFrameRate","w","performance","x","y","z","A","cancelAnimationFrame","requestAnimationFrame","B","D","E","F","G","floor","H","I","port2","port1","onmessage","postMessage","J","c","d","K","L","M","m","n","v","r","sortIndex","N","O","P","Q","R","S","T","U","V","callback","startTime","expirationTime","W","X","priorityLevel","Y","Z","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_IdlePriority","unstable_LowPriority","unstable_next","unstable_scheduleCallback","delay","timeout","unstable_cancelCallback","unstable_wrapCallback","apply","arguments","unstable_getCurrentPriorityLevel","unstable_shouldYield","unstable_requestPaint","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","unstable_Profiling","Card","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","CardContent","_props$component","Component","padding","paddingBottom","createSvgIcon","defaultIconMapping","success","SuccessOutlinedIcon","fontSize","warning","ReportProblemOutlinedIcon","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","Alert","_props$closeText","closeText","color","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","_props$variant","variant","square","capitalize","message","IconButton","size","title","onClick","theme","getColor","palette","darken","lighten","getBackgroundColor","typography","body2","borderRadius","shape","backgroundColor","display","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","alignItems","marginLeft","paddingLeft","useStyles","makeStyles","Auth0Login","loginWithPopup","useAuth","useState","isMountedRef","handleLogin","Box","my","FormHelperText","justifyContent","Button","googleButton","common","white","providerIcon","spacing","divider","flexGrow","dividerText","margin","FirebaseAuthLogin","signInWithEmailAndPassword","signInWithGoogle","handleGoogleClick","fullWidth","alt","src","mt","Divider","orientation","Typography","email","password","submit","Yup","max","required","noValidate","TextField","helperText","label","disabled","width","JWTLogin","login","handleFakeLinkedInLogin","autoFocus","background","dark","flexDirection","minHeight","banner","paper","paddingTop","borderBottom","bannerChip","methodIcon","height","cardContainer","cardContent","currentMethodIcon","maxHeight","LoginView","method","Page","Container","maxWidth","mb","to","Logo","gutterBottom","Link","RouterLink"],"mappings":"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","file":"static/js/8.7d54c2a6.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import arrayMap from './_arrayMap.js';\nimport copyArray from './_copyArray.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\nimport stringToPath from './_stringToPath.js';\nimport toKey from './_toKey.js';\nimport toString from './toString.js';\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nexport default toPath;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import clone from 'lodash/clone';\nimport toPath from 'lodash/toPath';\nimport * as React from 'react';\n\n// Assertions\n\n/** @private is the value an empty array? */\nexport const isEmptyArray = (value?: any) =>\n  Array.isArray(value) && value.length === 0;\n\n/** @private is the given object a Function? */\nexport const isFunction = (obj: any): obj is Function =>\n  typeof obj === 'function';\n\n/** @private is the given object an Object? */\nexport const isObject = (obj: any): obj is Object =>\n  obj !== null && typeof obj === 'object';\n\n/** @private is the given object an integer? */\nexport const isInteger = (obj: any): boolean =>\n  String(Math.floor(Number(obj))) === obj;\n\n/** @private is the given object a string? */\nexport const isString = (obj: any): obj is string =>\n  Object.prototype.toString.call(obj) === '[object String]';\n\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\nexport const isNaN = (obj: any): boolean => obj !== obj;\n\n/** @private Does a React component have exactly 0 children? */\nexport const isEmptyChildren = (children: any): boolean =>\n  React.Children.count(children) === 0;\n\n/** @private is the given object/value a promise? */\nexport const isPromise = (value: any): value is PromiseLike<any> =>\n  isObject(value) && isFunction(value.then);\n\n/** @private is the given object/value a type of synthetic event? */\nexport const isInputEvent = (value: any): value is React.SyntheticEvent<any> =>\n  value && isObject(value) && isObject(value.target);\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?Document} doc Defaults to current document.\n * @return {Element | null}\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\n */\nexport function getActiveElement(doc?: Document): Element | null {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\n/**\n * Deeply get a value from an object via its path.\n */\nexport function getIn(\n  obj: any,\n  key: string | string[],\n  def?: any,\n  p: number = 0\n) {\n  const path = toPath(key);\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  }\n  return obj === undefined ? def : obj;\n}\n\n/**\n * Deeply set a value from in object via it's path. If the value at `path`\n * has changed, return a shallow copy of obj with `value` set at `path`.\n * If `value` has not changed, return the original `obj`.\n *\n * Existing objects / arrays along `path` are also shallow copied. Sibling\n * objects along path retain the same internal js reference. Since new\n * objects / arrays are only created along `path`, we can test if anything\n * changed in a nested structure by comparing the object's reference in\n * the old and new object, similar to how russian doll cache invalidation\n * works.\n *\n * In earlier versions of this function, which used cloneDeep, there were\n * issues whereby settings a nested value would mutate the parent\n * instead of creating a new object. `clone` avoids that bug making a\n * shallow copy of the objects along the update path\n * so no object is mutated in place.\n *\n * Before changing this function, please read through the following\n * discussions.\n *\n * @see https://github.com/developit/linkstate\n * @see https://github.com/jaredpalmer/formik/pull/123\n */\nexport function setIn(obj: any, path: string, value: any): any {\n  let res: any = clone(obj); // this keeps inheritance when obj is a class\n  let resVal: any = res;\n  let i = 0;\n  let pathArray = toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    const currentPath: string = pathArray[i];\n    let currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = clone(currentObj);\n    } else {\n      const nextPath: string = pathArray[i + 1];\n      resVal = resVal[currentPath] =\n        isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  }\n\n  // Return original object if new value is the same as current\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  }\n\n  // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n\n/**\n * Recursively a set the same value for all keys and arrays nested object, cloning\n * @param object\n * @param value\n * @param visited\n * @param response\n */\nexport function setNestedObjectValues<T>(\n  object: any,\n  value: any,\n  visited: any = new WeakMap(),\n  response: any = {}\n): T {\n  for (let k of Object.keys(object)) {\n    const val = object[k];\n    if (isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true);\n        // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport invariant from 'tiny-warning';\n\nexport const FormikContext = React.createContext<FormikContextType<any>>(\n  undefined as any\n);\nexport const FormikProvider = FormikContext.Provider;\nexport const FormikConsumer = FormikContext.Consumer;\n\nexport function useFormikContext<Values>() {\n  const formik = React.useContext<FormikContextType<Values>>(FormikContext);\n\n  invariant(\n    !!formik,\n    `Formik context is undefined, please verify you are calling useFormikContext() as child of a <Formik> component.`\n  );\n\n  return formik;\n}\n","import * as React from 'react';\nimport isEqual from 'react-fast-compare';\nimport deepmerge from 'deepmerge';\nimport isPlainObject from 'lodash/isPlainObject';\nimport {\n  FormikConfig,\n  FormikErrors,\n  FormikState,\n  FormikTouched,\n  FormikValues,\n  FormikProps,\n  FieldMetaProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FormikHelpers, FormikHandlers,\n} from './types';\nimport {\n  isFunction,\n  isString,\n  setIn,\n  isEmptyChildren,\n  isPromise,\n  setNestedObjectValues,\n  getActiveElement,\n  getIn,\n  isObject,\n} from './utils';\nimport { FormikProvider } from './FormikContext';\nimport invariant from 'tiny-warning';\nimport { unstable_LowPriority, unstable_runWithPriority } from 'scheduler';\n\ntype FormikMessage<Values> =\n  | { type: 'SUBMIT_ATTEMPT' }\n  | { type: 'SUBMIT_FAILURE' }\n  | { type: 'SUBMIT_SUCCESS' }\n  | { type: 'SET_ISVALIDATING'; payload: boolean }\n  | { type: 'SET_ISSUBMITTING'; payload: boolean }\n  | { type: 'SET_VALUES'; payload: Values }\n  | { type: 'SET_FIELD_VALUE'; payload: { field: string; value?: any } }\n  | { type: 'SET_FIELD_TOUCHED'; payload: { field: string; value?: boolean } }\n  | { type: 'SET_FIELD_ERROR'; payload: { field: string; value?: string } }\n  | { type: 'SET_TOUCHED'; payload: FormikTouched<Values> }\n  | { type: 'SET_ERRORS'; payload: FormikErrors<Values> }\n  | { type: 'SET_STATUS'; payload: any }\n  | {\n      type: 'SET_FORMIK_STATE';\n      payload: (s: FormikState<Values>) => FormikState<Values>;\n    }\n  | {\n      type: 'RESET_FORM';\n      payload: FormikState<Values>;\n    };\n\n// State reducer\nfunction formikReducer<Values>(\n  state: FormikState<Values>,\n  msg: FormikMessage<Values>\n) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return { ...state, values: msg.payload };\n    case 'SET_TOUCHED':\n      return { ...state, touched: msg.payload };\n    case 'SET_ERRORS':\n      if (isEqual(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return { ...state, errors: msg.payload };\n    case 'SET_STATUS':\n      return { ...state, status: msg.payload };\n    case 'SET_ISSUBMITTING':\n      return { ...state, isSubmitting: msg.payload };\n    case 'SET_ISVALIDATING':\n      return { ...state, isValidating: msg.payload };\n    case 'SET_FIELD_VALUE':\n      return {\n        ...state,\n        values: setIn(state.values, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_TOUCHED':\n      return {\n        ...state,\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value),\n      };\n    case 'SET_FIELD_ERROR':\n      return {\n        ...state,\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value),\n      };\n    case 'RESET_FORM':\n      return { ...state, ...msg.payload };\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n    case 'SUBMIT_ATTEMPT':\n      return {\n        ...state,\n        touched: setNestedObjectValues<FormikTouched<Values>>(\n          state.values,\n          true\n        ),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1,\n      };\n    case 'SUBMIT_FAILURE':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    case 'SUBMIT_SUCCESS':\n      return {\n        ...state,\n        isSubmitting: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// Initial empty states // objects\nconst emptyErrors: FormikErrors<unknown> = {};\nconst emptyTouched: FormikTouched<unknown> = {};\n\n// This is an object that contains a map of all registered fields\n// and their validate functions\ninterface FieldRegistry {\n  [field: string]: {\n    validate: (value: any) => string | Promise<string> | undefined;\n  };\n}\n\nexport function useFormik<Values extends FormikValues = FormikValues>({\n  validateOnChange = true,\n  validateOnBlur = true,\n  validateOnMount = false,\n  isInitialValid,\n  enableReinitialize = false,\n  onSubmit,\n  ...rest\n}: FormikConfig<Values>) {\n  const props = {\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    onSubmit,\n    ...rest,\n  };\n  const initialValues = React.useRef(props.initialValues);\n  const initialErrors = React.useRef(props.initialErrors || emptyErrors);\n  const initialTouched = React.useRef(props.initialTouched || emptyTouched);\n  const initialStatus = React.useRef(props.initialStatus);\n  const isMounted = React.useRef<boolean>(false);\n  const fieldRegistry = React.useRef<FieldRegistry>({});\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        typeof isInitialValid === 'undefined',\n        'isInitialValid has been deprecated and will be removed in future versions of Formik. Please use initialErrors or validateOnMount instead.'\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n\n  React.useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  const [state, dispatch] = React.useReducer<\n    React.Reducer<FormikState<Values>, FormikMessage<Values>>\n  >(formikReducer, {\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0,\n  });\n\n  const runValidateHandler = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      return new Promise((resolve, reject) => {\n        const maybePromisedErrors = (props.validate as any)(values, field);\n        if (maybePromisedErrors == null) {\n          // use loose null check here on purpose\n          resolve(emptyErrors);\n        } else if (isPromise(maybePromisedErrors)) {\n          (maybePromisedErrors as Promise<any>).then(\n            errors => {\n              resolve(errors || emptyErrors);\n            },\n            actualException => {\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validate />`,\n                  actualException\n                );\n              }\n\n              reject(actualException);\n            }\n          );\n        } else {\n          resolve(maybePromisedErrors);\n        }\n      });\n    },\n    [props.validate]\n  );\n\n  /**\n   * Run validation against a Yup schema and optionally run a function if successful\n   */\n  const runValidationSchema = React.useCallback(\n    (values: Values, field?: string): Promise<FormikErrors<Values>> => {\n      const validationSchema = props.validationSchema;\n      const schema = isFunction(validationSchema)\n        ? validationSchema(field)\n        : validationSchema;\n      const promise =\n        field && schema.validateAt\n          ? schema.validateAt(field, values)\n          : validateYupSchema(values, schema);\n      return new Promise((resolve, reject) => {\n        promise.then(\n          () => {\n            resolve(emptyErrors);\n          },\n          (err: any) => {\n            // Yup will throw a validation error if validation fails. We catch those and\n            // resolve them into Formik errors. We can sniff if something is a Yup error\n            // by checking error.name.\n            // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n            if (err.name === 'ValidationError') {\n              resolve(yupToFormErrors(err));\n            } else {\n              // We throw any other errors\n              if (process.env.NODE_ENV !== 'production') {\n                console.warn(\n                  `Warning: An unhandled error was caught during validation in <Formik validationSchema />`,\n                  err\n                );\n              }\n\n              reject(err);\n            }\n          }\n        );\n      });\n    },\n    [props.validationSchema]\n  );\n\n  const runSingleFieldLevelValidation = React.useCallback(\n    (field: string, value: void | string): Promise<string> => {\n      return new Promise(resolve =>\n        resolve(fieldRegistry.current[field].validate(value))\n      );\n    },\n    []\n  );\n\n  const runFieldLevelValidations = React.useCallback(\n    (values: Values): Promise<FormikErrors<Values>> => {\n      const fieldKeysWithValidation: string[] = Object.keys(\n        fieldRegistry.current\n      ).filter(f => isFunction(fieldRegistry.current[f].validate));\n\n      // Construct an array with all of the field validation functions\n      const fieldValidations: Promise<string>[] =\n        fieldKeysWithValidation.length > 0\n          ? fieldKeysWithValidation.map(f =>\n              runSingleFieldLevelValidation(f, getIn(values, f))\n            )\n          : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n      return Promise.all(fieldValidations).then((fieldErrorsList: string[]) =>\n        fieldErrorsList.reduce((prev, curr, index) => {\n          if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n            return prev;\n          }\n          if (curr) {\n            prev = setIn(prev, fieldKeysWithValidation[index], curr);\n          }\n          return prev;\n        }, {})\n      );\n    },\n    [runSingleFieldLevelValidation]\n  );\n\n  // Run all validations and return the result\n  const runAllValidations = React.useCallback(\n    (values: Values) => {\n      return Promise.all([\n        runFieldLevelValidations(values),\n        props.validationSchema ? runValidationSchema(values) : {},\n        props.validate ? runValidateHandler(values) : {},\n      ]).then(([fieldErrors, schemaErrors, validateErrors]) => {\n        const combinedErrors = deepmerge.all<FormikErrors<Values>>(\n          [fieldErrors, schemaErrors, validateErrors],\n          { arrayMerge }\n        );\n        return combinedErrors;\n      });\n    },\n    [\n      props.validate,\n      props.validationSchema,\n      runFieldLevelValidations,\n      runValidateHandler,\n      runValidationSchema,\n    ]\n  );\n\n  // Run validations and dispatching the result as low-priority via rAF.\n  //\n  // The thinking is that validation as a result of onChange and onBlur\n  // should never block user input. Note: This method should never be called\n  // during the submission phase because validation prior to submission\n  // is actaully high-priority since we absolutely need to guarantee the\n  // form is valid before executing props.onSubmit.\n  const validateFormWithLowPriority = useEventCallback(\n    (values: Values = state.values) => {\n      return unstable_runWithPriority(unstable_LowPriority, () => {\n        return runAllValidations(values)\n          .then(combinedErrors => {\n            if (!!isMounted.current) {\n              dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n            }\n            return combinedErrors;\n          })\n          .catch(actualException => {\n            if (process.env.NODE_ENV !== 'production') {\n              // Users can throw during validate, however they have no way of handling their error on touch / blur. In low priority, we need to handle it\n              console.warn(\n                `Warning: An unhandled error was caught during low priority validation in <Formik validate />`,\n                actualException\n              );\n            }\n          });\n      });\n    }\n  );\n\n  // Run all validations methods and update state accordingly\n  const validateFormWithHighPriority = useEventCallback(\n    (values: Values = state.values) => {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runAllValidations(values).then(combinedErrors => {\n        if (!!isMounted.current) {\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          if (!isEqual(state.errors, combinedErrors)) {\n            dispatch({ type: 'SET_ERRORS', payload: combinedErrors });\n          }\n        }\n        return combinedErrors;\n      });\n    }\n  );\n\n  const resetForm = React.useCallback(\n    (nextState?: Partial<FormikState<Values>>) => {\n      const values =\n        nextState && nextState.values\n          ? nextState.values\n          : initialValues.current;\n      const errors =\n        nextState && nextState.errors\n          ? nextState.errors\n          : initialErrors.current\n          ? initialErrors.current\n          : props.initialErrors || {};\n      const touched =\n        nextState && nextState.touched\n          ? nextState.touched\n          : initialTouched.current\n          ? initialTouched.current\n          : props.initialTouched || {};\n      const status =\n        nextState && nextState.status\n          ? nextState.status\n          : initialStatus.current\n          ? initialStatus.current\n          : props.initialStatus;\n      initialValues.current = values;\n      initialErrors.current = errors;\n      initialTouched.current = touched;\n      initialStatus.current = status;\n\n      const dispatchFn = () => {\n        dispatch({\n          type: 'RESET_FORM',\n          payload: {\n            isSubmitting: !!nextState && !!nextState.isSubmitting,\n            errors,\n            touched,\n            status,\n            values,\n            isValidating: !!nextState && !!nextState.isValidating,\n            submitCount:\n              !!nextState &&\n              !!nextState.submitCount &&\n              typeof nextState.submitCount === 'number'\n                ? nextState.submitCount\n                : 0,\n          },\n        });\n      };\n\n      if (props.onReset) {\n        const maybePromisedOnReset = (props.onReset as any)(\n          state.values,\n          imperativeMethods\n        );\n\n        if (isPromise(maybePromisedOnReset)) {\n          (maybePromisedOnReset as Promise<any>).then(dispatchFn);\n        } else {\n          dispatchFn();\n        }\n      } else {\n        dispatchFn();\n      }\n    },\n    [props.initialErrors, props.initialStatus, props.initialTouched]\n  );\n\n  React.useEffect(() => {\n    if (\n      isMounted.current === true &&\n      !isEqual(initialValues.current, props.initialValues)\n    ) {\n      initialValues.current = props.initialValues;\n\n      if (enableReinitialize) {\n        resetForm();\n      }\n\n      if (validateOnMount) {\n        validateFormWithLowPriority(initialValues.current);\n      }\n    }\n  }, [enableReinitialize, props.initialValues, resetForm, validateOnMount, validateFormWithLowPriority]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialErrors.current, props.initialErrors)\n    ) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors,\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialTouched.current, props.initialTouched)\n    ) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched,\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n\n  React.useEffect(() => {\n    if (\n      enableReinitialize &&\n      isMounted.current === true &&\n      !isEqual(initialStatus.current, props.initialStatus)\n    ) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus,\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n\n  const validateField = useEventCallback((name: string) => {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n\n    if (isFunction(fieldRegistry.current[name].validate)) {\n      const value = getIn(state.values, name);\n      const maybePromise = fieldRegistry.current[name].validate(value);\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({ type: 'SET_ISVALIDATING', payload: true });\n        return maybePromise\n          .then((x: any) => x)\n          .then((error: string) => {\n            dispatch({\n              type: 'SET_FIELD_ERROR',\n              payload: { field: name, value: error },\n            });\n            dispatch({ type: 'SET_ISVALIDATING', payload: false });\n          });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise as string | undefined,\n          },\n        });\n        return Promise.resolve(maybePromise as string | undefined);\n      }\n    } else if (props.validationSchema) {\n      dispatch({ type: 'SET_ISVALIDATING', payload: true });\n      return runValidationSchema(state.values, name)\n        .then((x: any) => x)\n        .then((error: any) => {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: { field: name, value: error[name] },\n          });\n          dispatch({ type: 'SET_ISVALIDATING', payload: false });\n        });\n    }\n\n    return Promise.resolve();\n  });\n\n  const registerField = React.useCallback((name: string, { validate }: any) => {\n    fieldRegistry.current[name] = {\n      validate,\n    };\n  }, []);\n\n  const unregisterField = React.useCallback((name: string) => {\n    delete fieldRegistry.current[name];\n  }, []);\n\n  const setTouched = useEventCallback(\n    (touched: FormikTouched<Values>, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_TOUCHED', payload: touched });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithLowPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const setErrors = React.useCallback((errors: FormikErrors<Values>) => {\n    dispatch({ type: 'SET_ERRORS', payload: errors });\n  }, []);\n\n  const setValues = useEventCallback(\n    (values: Values, shouldValidate?: boolean) => {\n      dispatch({ type: 'SET_VALUES', payload: values });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithLowPriority(values)\n        : Promise.resolve();\n    }\n  );\n\n  const setFieldError = React.useCallback(\n    (field: string, value: string | undefined) => {\n      dispatch({\n        type: 'SET_FIELD_ERROR',\n        payload: { field, value },\n      });\n    },\n    []\n  );\n\n  const setFieldValue = useEventCallback(\n    (field: string, value: any, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_VALUE',\n        payload: {\n          field,\n          value,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnChange : shouldValidate;\n      return willValidate\n        ? validateFormWithLowPriority(setIn(state.values, field, value))\n        : Promise.resolve();\n    }\n  );\n\n  const executeChange = React.useCallback(\n    (eventOrTextValue: string | React.ChangeEvent<any>, maybePath?: string) => {\n      // By default, assume that the first argument is a string. This allows us to use\n      // handleChange with React Native and React Native Web's onChangeText prop which\n      // provides just the value of the input.\n      let field = maybePath;\n      let val = eventOrTextValue;\n      let parsed;\n      // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n      // so we handle like we would a normal HTML change event.\n      if (!isString(eventOrTextValue)) {\n        // If we can, persist the event\n        // @see https://reactjs.org/docs/events.html#event-pooling\n        if ((eventOrTextValue as React.ChangeEvent<any>).persist) {\n          (eventOrTextValue as React.ChangeEvent<any>).persist();\n        }\n        const target = eventOrTextValue.target\n          ? (eventOrTextValue as React.ChangeEvent<any>).target\n          : (eventOrTextValue as React.ChangeEvent<any>).currentTarget;\n\n        const {\n          type,\n          name,\n          id,\n          value,\n          checked,\n          outerHTML,\n          options,\n          multiple,\n        } = target;\n\n        field = maybePath ? maybePath : name ? name : id;\n        if (!field && __DEV__) {\n          warnAboutMissingIdentifier({\n            htmlContent: outerHTML,\n            documentationAnchorLink: 'handlechange-e-reactchangeeventany--void',\n            handlerName: 'handleChange',\n          });\n        }\n        val = /number|range/.test(type)\n          ? ((parsed = parseFloat(value)), isNaN(parsed) ? '' : parsed)\n          : /checkbox/.test(type) // checkboxes\n          ? getValueForCheckbox(getIn(state.values, field!), checked, value)\n          : !!multiple // <select multiple>\n          ? getSelectedValues(options)\n          : value;\n      }\n\n      if (field) {\n        // Set form fields by name\n        setFieldValue(field, val);\n      }\n    },\n    [setFieldValue, state.values]\n  );\n\n  const handleChange = useEventCallback<FormikHandlers['handleChange']>(\n    (\n      eventOrPath: string | React.ChangeEvent<any>\n    ): void | ((eventOrTextValue: string | React.ChangeEvent<any>) => void) => {\n      if (isString(eventOrPath)) {\n        return event => executeChange(event, eventOrPath);\n      } else {\n        executeChange(eventOrPath);\n      }\n    }\n  );\n\n  const setFieldTouched = useEventCallback(\n    (field: string, touched: boolean = true, shouldValidate?: boolean) => {\n      dispatch({\n        type: 'SET_FIELD_TOUCHED',\n        payload: {\n          field,\n          value: touched,\n        },\n      });\n      const willValidate =\n        shouldValidate === undefined ? validateOnBlur : shouldValidate;\n      return willValidate\n        ? validateFormWithLowPriority(state.values)\n        : Promise.resolve();\n    }\n  );\n\n  const executeBlur = React.useCallback(\n    (e: any, path?: string) => {\n      if (e.persist) {\n        e.persist();\n      }\n      const { name, id, outerHTML } = e.target;\n      const field = path ? path : name ? name : id;\n\n      if (!field && __DEV__) {\n        warnAboutMissingIdentifier({\n          htmlContent: outerHTML,\n          documentationAnchorLink: 'handleblur-e-any--void',\n          handlerName: 'handleBlur',\n        });\n      }\n\n      setFieldTouched(field, true);\n    },\n    [setFieldTouched]\n  );\n\n  const handleBlur = useEventCallback<FormikHandlers['handleBlur']>(\n    (eventOrString: any): void | ((e: any) => void) => {\n      if (isString(eventOrString)) {\n        return event => executeBlur(event, eventOrString);\n      } else {\n        executeBlur(eventOrString);\n      }\n    }\n  );\n\n  const setFormikState = React.useCallback(\n    (\n      stateOrCb:\n        | FormikState<Values>\n        | ((state: FormikState<Values>) => FormikState<Values>)\n    ): void => {\n      if (isFunction(stateOrCb)) {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: stateOrCb });\n      } else {\n        dispatch({ type: 'SET_FORMIK_STATE', payload: () => stateOrCb });\n      }\n    },\n    []\n  );\n\n  const setStatus = React.useCallback((status: any) => {\n    dispatch({ type: 'SET_STATUS', payload: status });\n  }, []);\n\n  const setSubmitting = React.useCallback((isSubmitting: boolean) => {\n    dispatch({ type: 'SET_ISSUBMITTING', payload: isSubmitting });\n  }, []);\n\n  const submitForm = useEventCallback(() => {\n    dispatch({ type: 'SUBMIT_ATTEMPT' });\n    return validateFormWithHighPriority().then(\n      (combinedErrors: FormikErrors<Values>) => {\n        // In case an error was thrown and passed to the resolved Promise,\n        // `combinedErrors` can be an instance of an Error. We need to check\n        // that and abort the submit.\n        // If we don't do that, calling `Object.keys(new Error())` yields an\n        // empty array, which causes the validation to pass and the form\n        // to be submitted.\n\n        const isInstanceOfError = combinedErrors instanceof Error;\n        const isActuallyValid =\n          !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n        if (isActuallyValid) {\n          // Proceed with submit...\n          //\n          // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n          // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n          // This would be fine in simple cases, but make it impossible to disable submit\n          // buttons where people use callbacks or promises as side effects (which is basically\n          // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n          //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n          // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n          // cleanup of isSubmitting on behalf of the consumer.\n          let promiseOrUndefined;\n          try {\n            promiseOrUndefined = executeSubmit();\n            // Bail if it's sync, consumer is responsible for cleaning up\n            // via setSubmitting(false)\n            if (promiseOrUndefined === undefined) {\n              return;\n            }\n          } catch (error) {\n            throw error;\n          }\n\n          return Promise.resolve(promiseOrUndefined)\n            .then(result => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_SUCCESS' });\n              }\n              return result;\n            })\n            .catch(_errors => {\n              if (!!isMounted.current) {\n                dispatch({ type: 'SUBMIT_FAILURE' });\n                // This is a legit error rejected by the onSubmit fn\n                // so we don't want to break the promise chain\n                throw _errors;\n              }\n            });\n        } else if (!!isMounted.current) {\n          // ^^^ Make sure Formik is still mounted before updating state\n          dispatch({ type: 'SUBMIT_FAILURE' });\n          // throw combinedErrors;\n          if (isInstanceOfError) {\n            throw combinedErrors;\n          }\n        }\n        return;\n      }\n    );\n  });\n\n  const handleSubmit = useEventCallback(\n    (e?: React.FormEvent<HTMLFormElement>) => {\n      if (e && e.preventDefault && isFunction(e.preventDefault)) {\n        e.preventDefault();\n      }\n\n      if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n        e.stopPropagation();\n      }\n\n      // Warn if form submission is triggered by a <button> without a\n      // specified `type` attribute during development. This mitigates\n      // a common gotcha in forms with both reset and submit buttons,\n      // where the dev forgets to add type=\"button\" to the reset button.\n      if (__DEV__ && typeof document !== 'undefined') {\n        // Safely get the active element (works with IE)\n        const activeElement = getActiveElement();\n        if (\n          activeElement !== null &&\n          activeElement instanceof HTMLButtonElement\n        ) {\n          invariant(\n            activeElement.attributes &&\n              activeElement.attributes.getNamedItem('type'),\n            'You submitted a Formik form using a button with an unspecified `type` attribute.  Most browsers default button elements to `type=\"submit\"`. If this is not a submit button, please add `type=\"button\"`.'\n          );\n        }\n      }\n\n      submitForm().catch(reason => {\n        console.warn(\n          `Warning: An unhandled error was caught from submitForm()`,\n          reason\n        );\n      });\n    }\n  );\n\n  const imperativeMethods: FormikHelpers<Values> = {\n    resetForm,\n\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    setErrors,\n    setFieldError,\n    setFieldTouched,\n    setFieldValue,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    setFormikState,\n    submitForm,\n  };\n\n  const executeSubmit = useEventCallback(() => {\n    return onSubmit(state.values, imperativeMethods);\n  });\n\n  const handleReset = useEventCallback(e => {\n    if (e && e.preventDefault && isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n\n  const getFieldMeta = React.useCallback(\n    (name: string): FieldMetaProps<any> => {\n      return {\n        value: getIn(state.values, name),\n        error: getIn(state.errors, name),\n        touched: !!getIn(state.touched, name),\n        initialValue: getIn(initialValues.current, name),\n        initialTouched: !!getIn(initialTouched.current, name),\n        initialError: getIn(initialErrors.current, name),\n      };\n    },\n    [state.errors, state.touched, state.values]\n  );\n\n  const getFieldHelpers = React.useCallback(\n    (name: string): FieldHelperProps<any> => {\n      return {\n        setValue: (value: any, shouldValidate?: boolean) =>\n          setFieldValue(name, value, shouldValidate),\n        setTouched: (value: boolean, shouldValidate?: boolean) =>\n          setFieldTouched(name, value, shouldValidate),\n        setError: (value: any) => setFieldError(name, value),\n      };\n    },\n    [setFieldValue, setFieldTouched, setFieldError]\n  );\n\n  const getFieldProps = React.useCallback(\n    (nameOrOptions): FieldInputProps<any> => {\n      const isAnObject = isObject(nameOrOptions);\n      const name = isAnObject ? nameOrOptions.name : nameOrOptions;\n      const valueState = getIn(state.values, name);\n\n      const field: FieldInputProps<any> = {\n        name,\n        value: valueState,\n        onChange: handleChange,\n        onBlur: handleBlur,\n      };\n      if (isAnObject) {\n        const {\n          type,\n          value: valueProp, // value is special for checkboxes\n          as: is,\n          multiple,\n        } = nameOrOptions;\n\n        if (type === 'checkbox') {\n          if (valueProp === undefined) {\n            field.checked = !!valueState;\n          } else {\n            field.checked = !!(\n              Array.isArray(valueState) && ~valueState.indexOf(valueProp)\n            );\n            field.value = valueProp;\n          }\n        } else if (type === 'radio') {\n          field.checked = valueState === valueProp;\n          field.value = valueProp;\n        } else if (is === 'select' && multiple) {\n          field.value = field.value || [];\n          field.multiple = true;\n        }\n      }\n      return field;\n    },\n    [handleBlur, handleChange, state.values]\n  );\n\n  const dirty = React.useMemo(\n    () => !isEqual(initialValues.current, state.values),\n    [initialValues.current, state.values]\n  );\n\n  const isValid = React.useMemo(\n    () =>\n      typeof isInitialValid !== 'undefined'\n        ? dirty\n          ? state.errors && Object.keys(state.errors).length === 0\n          : isInitialValid !== false && isFunction(isInitialValid)\n          ? (isInitialValid as (props: FormikConfig<Values>) => boolean)(props)\n          : (isInitialValid as boolean)\n        : state.errors && Object.keys(state.errors).length === 0,\n    [isInitialValid, dirty, state.errors, props]\n  );\n\n  const ctx = {\n    ...state,\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur,\n    handleChange,\n    handleReset,\n    handleSubmit,\n    resetForm,\n    setErrors,\n    setFormikState,\n    setFieldTouched,\n    setFieldValue,\n    setFieldError,\n    setStatus,\n    setSubmitting,\n    setTouched,\n    setValues,\n    submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField,\n    isValid,\n    dirty,\n    unregisterField,\n    registerField,\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    validateOnBlur,\n    validateOnChange,\n    validateOnMount,\n  };\n\n  return ctx;\n}\n\nexport function Formik<\n  Values extends FormikValues = FormikValues,\n  ExtraProps = {}\n>(props: FormikConfig<Values> & ExtraProps) {\n  const formikbag = useFormik<Values>(props);\n  const { component, children, render, innerRef } = props;\n\n  // This allows folks to pass a ref to <Formik />\n  React.useImperativeHandle(innerRef, () => formikbag);\n\n  if (__DEV__) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      invariant(\n        !props.render,\n        `<Formik render> has been deprecated and will be removed in future versions of Formik. Please use a child callback function instead. To get rid of this warning, replace <Formik render={(props) => ...} /> with <Formik>{(props) => ...}</Formik>`\n      );\n      // eslint-disable-next-line\n    }, []);\n  }\n  return (\n    <FormikProvider value={formikbag}>\n      {component\n        ? React.createElement(component as any, formikbag)\n        : render\n        ? render(formikbag)\n        : children // children come last, always called\n        ? isFunction(children)\n          ? (children as (bag: FormikProps<Values>) => React.ReactNode)(\n              formikbag as FormikProps<Values>\n            )\n          : !isEmptyChildren(children)\n          ? React.Children.only(children)\n          : null\n        : null}\n    </FormikProvider>\n  );\n}\n\nfunction warnAboutMissingIdentifier({\n  htmlContent,\n  documentationAnchorLink,\n  handlerName,\n}: {\n  htmlContent: string;\n  documentationAnchorLink: string;\n  handlerName: string;\n}) {\n  console.warn(\n    `Warning: Formik called \\`${handlerName}\\`, but you forgot to pass an \\`id\\` or \\`name\\` attribute to your input:\n    ${htmlContent}\n    Formik cannot determine which value to update. For more info see https://github.com/jaredpalmer/formik#${documentationAnchorLink}\n  `\n  );\n}\n\n/**\n * Transform Yup ValidationError to a more usable object\n */\nexport function yupToFormErrors<Values>(yupError: any): FormikErrors<Values> {\n  let errors: FormikErrors<Values> = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n    for (let err of yupError.inner) {\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n}\n\n/**\n * Validate a yup schema.\n */\nexport function validateYupSchema<T extends FormikValues>(\n  values: T,\n  schema: any,\n  sync: boolean = false,\n  context: any = {}\n): Promise<Partial<T>> {\n  const validateData: FormikValues = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](validateData, {\n    abortEarly: false,\n    context: context,\n  });\n}\n\n/**\n * Recursively prepare values.\n */\nexport function prepareDataForValidation<T extends FormikValues>(\n  values: T\n): FormikValues {\n  let data: FormikValues = Array.isArray(values) ? [] : {};\n  for (let k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      const key = String(k);\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map((value: any) => {\n          if (Array.isArray(value) === true || isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n  return data;\n}\n\n/**\n * deepmerge array merging algorithm\n * https://github.com/KyleAMathews/deepmerge#combine-array\n */\nfunction arrayMerge(target: any[], source: any[], options: any): any[] {\n  const destination = target.slice();\n\n  source.forEach(function(e: any, i: number) {\n    if (typeof destination[i] === 'undefined') {\n      const cloneRequested = options.clone !== false;\n      const shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone\n        ? deepmerge(Array.isArray(e) ? [] : {}, e, options)\n        : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = deepmerge(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n\n/** Return multi select values based on an array of options */\nfunction getSelectedValues(options: any[]) {\n  return Array.from(options)\n    .filter(el => el.selected)\n    .map(el => el.value);\n}\n\n/** Return the next value for a checkbox */\nfunction getValueForCheckbox(\n  currentValue: string | any[],\n  checked: boolean,\n  valueProp: any\n) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  }\n\n  // If the currentValue was not a boolean we want to return an array\n  let currentArrayOfValues = [];\n  let isValueInArray = false;\n  let index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  }\n\n  // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  }\n\n  // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  }\n\n  // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n  return currentArrayOfValues\n    .slice(0, index)\n    .concat(currentArrayOfValues.slice(index + 1));\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? React.useLayoutEffect\n    : React.useEffect;\n\nfunction useEventCallback<T extends (...args: any[]) => any>(fn: T): T {\n  const ref: any = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(() => {\n    ref.current = fn;\n  });\n\n  return React.useCallback(\n    (...args: any[]) => ref.current.apply(void 0, args),\n    []\n  ) as T;\n}\n","import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { FormikContextType } from './types';\nimport { FormikConsumer } from './FormikContext';\nimport invariant from 'tiny-warning';\n\n/**\n * Connect any component to Formik context, and inject as a prop called `formik`;\n * @param Comp React Component\n */\nexport function connect<OuterProps, Values = {}>(\n  Comp: React.ComponentType<OuterProps & { formik: FormikContextType<Values> }>\n) {\n  const C: React.SFC<OuterProps> = (props: OuterProps) => (\n    <FormikConsumer>\n      {formik => {\n        invariant(\n          !!formik,\n          `Formik context is undefined, please verify you are rendering <Form>, <Field>, <FastField>, <FieldArray>, or your custom context-using component as a child of a <Formik> component. Component name: ${Comp.name}`\n        );\n        return <Comp {...props} formik={formik} />;\n      }}\n    </FormikConsumer>\n  );\n  const componentDisplayName =\n    Comp.displayName ||\n    Comp.name ||\n    (Comp.constructor && Comp.constructor.name) ||\n    'Component';\n\n  // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n  (C as React.SFC<OuterProps> & {\n    WrappedComponent: React.ReactNode;\n  }).WrappedComponent = Comp;\n\n  C.displayName = `FormikConnect(${componentDisplayName})`;\n\n  return hoistNonReactStatics(\n    C,\n    Comp as React.ComponentClass<\n      OuterProps & { formik: FormikContextType<Values> }\n    > // cast type to ComponentClass (even if SFC)\n  ) as React.ComponentType<OuterProps>;\n}\n","import * as React from 'react';\nimport { useFormikContext } from './FormikContext';\n\nexport type FormikFormProps = Pick<\n  React.FormHTMLAttributes<HTMLFormElement>,\n  Exclude<\n    keyof React.FormHTMLAttributes<HTMLFormElement>,\n    'onReset' | 'onSubmit'\n  >\n>;\n\ntype FormProps = React.ComponentPropsWithoutRef<'form'>;\n\n// @todo tests\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props: FormikFormProps, ref) => {\n    // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n    // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n    const { action, ...rest } = props;\n    const _action = action || '#';\n    const { handleReset, handleSubmit } = useFormikContext();\n    return (\n      <form\n        onSubmit={handleSubmit}\n        ref={ref}\n        onReset={handleReset}\n        action={_action}\n        {...rest}\n      />\n    );\n  }\n);\n\nForm.displayName = 'Form';\n","import * as React from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { connect } from './connect';\nimport {\n  FormikContextType,\n  FormikState,\n  SharedRenderProps,\n  FormikProps,\n} from './types';\nimport {\n  getIn,\n  isEmptyChildren,\n  isFunction,\n  setIn,\n  isEmptyArray,\n} from './utils';\nimport isEqual from 'react-fast-compare';\n\nexport type FieldArrayRenderProps = ArrayHelpers & {\n  form: FormikProps<any>;\n  name: string;\n};\n\nexport type FieldArrayConfig = {\n  /** Really the path to the array field to be updated */\n  name: string;\n  /** Should field array validate the form AFTER array updates/changes? */\n  validateOnChange?: boolean;\n} & SharedRenderProps<FieldArrayRenderProps>;\nexport interface ArrayHelpers {\n  /** Imperatively add a value to the end of an array */\n  push: (obj: any) => void;\n  /** Curried fn to add a value to the end of an array */\n  handlePush: (obj: any) => () => void;\n  /** Imperatively swap two values in an array */\n  swap: (indexA: number, indexB: number) => void;\n  /** Curried fn to swap two values in an array */\n  handleSwap: (indexA: number, indexB: number) => () => void;\n  /** Imperatively move an element in an array to another index */\n  move: (from: number, to: number) => void;\n  /** Imperatively move an element in an array to another index */\n  handleMove: (from: number, to: number) => () => void;\n  /** Imperatively insert an element at a given index into the array */\n  insert: (index: number, value: any) => void;\n  /** Curried fn to insert an element at a given index into the array */\n  handleInsert: (index: number, value: any) => () => void;\n  /** Imperatively replace a value at an index of an array  */\n  replace: (index: number, value: any) => void;\n  /** Curried fn to replace an element at a given index into the array */\n  handleReplace: (index: number, value: any) => () => void;\n  /** Imperatively add an element to the beginning of an array and return its length */\n  unshift: (value: any) => number;\n  /** Curried fn to add an element to the beginning of an array */\n  handleUnshift: (value: any) => () => void;\n  /** Curried fn to remove an element at an index of an array */\n  handleRemove: (index: number) => () => void;\n  /** Curried fn to remove a value from the end of the array */\n  handlePop: () => () => void;\n  /** Imperatively remove and element at an index of an array */\n  remove<T>(index: number): T | undefined;\n  /** Imperatively remove and return value from the end of the array */\n  pop<T>(): T | undefined;\n}\n\n/**\n * Some array helpers!\n */\nexport const move = (array: any[], from: number, to: number) => {\n  const copy = copyArrayLike(array);\n  const value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\n\nexport const swap = (\n  arrayLike: ArrayLike<any>,\n  indexA: number,\n  indexB: number\n) => {\n  const copy = copyArrayLike(arrayLike);\n  const a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\n\nexport const insert = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\n\nexport const replace = (\n  arrayLike: ArrayLike<any>,\n  index: number,\n  value: any\n) => {\n  const copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nconst copyArrayLike = (arrayLike: ArrayLike<any>) => {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [...arrayLike];\n  } else {\n    const maxIndex = Object.keys(arrayLike)\n      .map(key => parseInt(key))\n      .reduce((max, el) => (el > max ? el : max), 0);\n    return Array.from({ ...arrayLike, length: maxIndex + 1 });\n  }\n};\n\nclass FieldArrayInner<Values = {}> extends React.Component<\n  FieldArrayConfig & { formik: FormikContextType<Values> },\n  {}\n> {\n  static defaultProps = {\n    validateOnChange: true,\n  };\n\n  constructor(props: FieldArrayConfig & { formik: FormikContextType<Values> }) {\n    super(props);\n    // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n    this.remove = this.remove.bind(this) as any;\n    this.pop = this.pop.bind(this) as any;\n  }\n\n  componentDidUpdate(\n    prevProps: FieldArrayConfig & { formik: FormikContextType<Values> }\n  ) {\n    if (\n      !isEqual(\n        getIn(prevProps.formik.values, prevProps.name),\n        getIn(this.props.formik.values, this.props.name)\n      ) &&\n      this.props.formik.validateOnChange\n    ) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  }\n\n  updateArrayField = (\n    fn: Function,\n    alterTouched: boolean | Function,\n    alterErrors: boolean | Function\n  ) => {\n    const {\n      name,\n\n      formik: { setFormikState },\n    } = this.props;\n    setFormikState((prevState: FormikState<any>) => {\n      let updateErrors = typeof alterErrors === 'function' ? alterErrors : fn;\n      let updateTouched =\n        typeof alterTouched === 'function' ? alterTouched : fn;\n\n      // values fn should be executed before updateErrors and updateTouched,\n      // otherwise it causes an error with unshift.\n      let values = setIn(\n        prevState.values,\n        name,\n        fn(getIn(prevState.values, name))\n      );\n\n      let fieldError = alterErrors\n        ? updateErrors(getIn(prevState.errors, name))\n        : undefined;\n      let fieldTouched = alterTouched\n        ? updateTouched(getIn(prevState.touched, name))\n        : undefined;\n\n      if (isEmptyArray(fieldError)) {\n        fieldError = undefined;\n      }\n      if (isEmptyArray(fieldTouched)) {\n        fieldTouched = undefined;\n      }\n\n      return {\n        ...prevState,\n        values,\n        errors: alterErrors\n          ? setIn(prevState.errors, name, fieldError)\n          : prevState.errors,\n        touched: alterTouched\n          ? setIn(prevState.touched, name, fieldTouched)\n          : prevState.touched,\n      };\n    });\n  };\n\n  push = (value: any) =>\n    this.updateArrayField(\n      (arrayLike: ArrayLike<any>) => [\n        ...copyArrayLike(arrayLike),\n        cloneDeep(value),\n      ],\n      false,\n      false\n    );\n\n  handlePush = (value: any) => () => this.push(value);\n\n  swap = (indexA: number, indexB: number) =>\n    this.updateArrayField(\n      (array: any[]) => swap(array, indexA, indexB),\n      true,\n      true\n    );\n\n  handleSwap = (indexA: number, indexB: number) => () =>\n    this.swap(indexA, indexB);\n\n  move = (from: number, to: number) =>\n    this.updateArrayField((array: any[]) => move(array, from, to), true, true);\n\n  handleMove = (from: number, to: number) => () => this.move(from, to);\n\n  insert = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => insert(array, index, value),\n      (array: any[]) => insert(array, index, null),\n      (array: any[]) => insert(array, index, null)\n    );\n\n  handleInsert = (index: number, value: any) => () => this.insert(index, value);\n\n  replace = (index: number, value: any) =>\n    this.updateArrayField(\n      (array: any[]) => replace(array, index, value),\n      false,\n      false\n    );\n\n  handleReplace = (index: number, value: any) => () =>\n    this.replace(index, value);\n\n  unshift = (value: any) => {\n    let length = -1;\n    this.updateArrayField(\n      (array: any[]) => {\n        const arr = array ? [value, ...array] : [value];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      },\n      (array: any[]) => {\n        const arr = array ? [null, ...array] : [null];\n        if (length < 0) {\n          length = arr.length;\n        }\n        return arr;\n      }\n    );\n    return length;\n  };\n\n  handleUnshift = (value: any) => () => this.unshift(value);\n\n  remove<T>(index: number): T {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array?: any[]) => {\n        const copy = array ? copyArrayLike(array) : [];\n        if (!result) {\n          result = copy[index];\n        }\n        if (isFunction(copy.splice)) {\n          copy.splice(index, 1);\n        }\n        return copy;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handleRemove = (index: number) => () => this.remove<any>(index);\n\n  pop<T>(): T {\n    // Remove relevant pieces of `touched` and `errors` too!\n    let result: any;\n    this.updateArrayField(\n      // so this gets call 3 times\n      (array: any[]) => {\n        const tmp = array;\n        if (!result) {\n          result = tmp && tmp.pop && tmp.pop();\n        }\n        return tmp;\n      },\n      true,\n      true\n    );\n\n    return result as T;\n  }\n\n  handlePop = () => () => this.pop<any>();\n\n  render() {\n    const arrayHelpers: ArrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove,\n    };\n\n    const {\n      component,\n      render,\n      children,\n      name,\n      formik: {\n        validate: _validate,\n        validationSchema: _validationSchema,\n        ...restOfFormik\n      },\n    } = this.props;\n\n    const props: FieldArrayRenderProps = {\n      ...arrayHelpers,\n      form: restOfFormik,\n      name,\n    };\n\n    return component\n      ? React.createElement(component as any, props)\n      : render\n      ? (render as any)(props)\n      : children // children come last, always called\n      ? typeof children === 'function'\n        ? (children as any)(props)\n        : !isEmptyChildren(children)\n        ? React.Children.only(children)\n        : null\n      : null;\n  }\n}\n\nexport const FieldArray = connect<FieldArrayConfig, any>(FieldArrayInner);\n","import * as React from 'react';\nimport { FormikContextType } from './types';\nimport { getIn, isFunction } from './utils';\nimport { connect } from './connect';\n\nexport interface ErrorMessageProps {\n  name: string;\n  className?: string;\n  component?: string | React.ComponentType;\n  children?: (errorMessage: string) => React.ReactNode;\n  render?: (errorMessage: string) => React.ReactNode;\n}\n\nclass ErrorMessageImpl extends React.Component<\n  ErrorMessageProps & { formik: FormikContextType<any> }\n> {\n  shouldComponentUpdate(\n    props: ErrorMessageProps & { formik: FormikContextType<any> }\n  ) {\n    if (\n      getIn(this.props.formik.errors, this.props.name) !==\n        getIn(props.formik.errors, this.props.name) ||\n      getIn(this.props.formik.touched, this.props.name) !==\n        getIn(props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    let { component, formik, render, children, name, ...rest } = this.props;\n\n    const touch = getIn(formik.touched, name);\n    const error = getIn(formik.errors, name);\n\n    return !!touch && !!error\n      ? render\n        ? isFunction(render)\n          ? render(error)\n          : null\n        : children\n        ? isFunction(children)\n          ? children(error)\n          : null\n        : component\n        ? React.createElement(component, rest as any, error)\n        : error\n      : null;\n  }\n}\n\nexport const ErrorMessage = connect<\n  ErrorMessageProps,\n  ErrorMessageProps & { formik: FormikContextType<any> }\n>(ErrorMessageImpl);\n","import * as React from 'react';\n\nimport {\n  FormikProps,\n  GenericFieldHTMLAttributes,\n  FormikContextType,\n  FieldMetaProps,\n  FieldInputProps,\n} from './types';\nimport invariant from 'tiny-warning';\nimport { getIn, isEmptyChildren, isFunction } from './utils';\nimport { FieldConfig } from './Field';\nimport { connect } from './connect';\n\ntype $FixMe = any;\n\nexport interface FastFieldProps<V = any> {\n  field: FieldInputProps<V>;\n  meta: FieldMetaProps<V>;\n  form: FormikProps<V>; // if ppl want to restrict this for a given form, let them.\n}\n\nexport type FastFieldConfig<T> = FieldConfig & {\n  /** Override FastField's default shouldComponentUpdate */\n  shouldUpdate?: (\n    nextProps: T & GenericFieldHTMLAttributes,\n    props: {}\n  ) => boolean;\n};\n\nexport type FastFieldAttributes<T> = GenericFieldHTMLAttributes &\n  FastFieldConfig<T> &\n  T;\n\ntype FastFieldInnerProps<Values = {}, Props = {}> = FastFieldAttributes<\n  Props\n> & { formik: FormikContextType<Values> };\n\n/**\n * Custom Field component for quickly hooking into Formik\n * context and wiring up forms.\n */\nclass FastFieldInner<Values = {}, Props = {}> extends React.Component<\n  FastFieldInnerProps<Values, Props>,\n  {}\n> {\n  constructor(props: FastFieldInnerProps<Values, Props>) {\n    super(props);\n    const { render, children, component, as: is, name } = props;\n    invariant(\n      !render,\n      `<FastField render> has been deprecated. Please use a child callback function instead: <FastField name={${name}}>{props => ...}</FastField> instead.`\n    );\n    invariant(\n      !(component && render),\n      'You should not use <FastField component> and <FastField render> in the same <FastField> component; <FastField component> will be ignored'\n    );\n\n    invariant(\n      !(is && children && isFunction(children)),\n      'You should not use <FastField as> and <FastField children> as a function in the same <FastField> component; <FastField as> will be ignored.'\n    );\n\n    invariant(\n      !(component && children && isFunction(children)),\n      'You should not use <FastField component> and <FastField children> as a function in the same <FastField> component; <FastField component> will be ignored.'\n    );\n\n    invariant(\n      !(render && children && !isEmptyChildren(children)),\n      'You should not use <FastField render> and <FastField children> in the same <FastField> component; <FastField children> will be ignored'\n    );\n  }\n\n  shouldComponentUpdate(props: FastFieldInnerProps<Values, Props>) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (\n      props.name !== this.props.name ||\n      getIn(props.formik.values, this.props.name) !==\n        getIn(this.props.formik.values, this.props.name) ||\n      getIn(props.formik.errors, this.props.name) !==\n        getIn(this.props.formik.errors, this.props.name) ||\n      getIn(props.formik.touched, this.props.name) !==\n        getIn(this.props.formik.touched, this.props.name) ||\n      Object.keys(this.props).length !== Object.keys(props).length ||\n      props.formik.isSubmitting !== this.props.formik.isSubmitting\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate,\n    });\n  }\n\n  componentDidUpdate(prevProps: FastFieldAttributes<Props>) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  }\n\n  render() {\n    const {\n      validate,\n      name,\n      render,\n      as: is,\n      children,\n      component,\n      shouldUpdate,\n      formik,\n      ...props\n    } = this.props as FastFieldInnerProps<Values, Props>;\n\n    const {\n      validate: _validate,\n      validationSchema: _validationSchema,\n      ...restOfFormik\n    } = formik;\n    const field = {\n      value:\n        props.type === 'radio' || props.type === 'checkbox'\n          ? props.value // React uses checked={} for these inputs\n          : getIn(formik.values, name),\n      name,\n      onChange: formik.handleChange,\n      onBlur: formik.handleBlur,\n    };\n    const meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name),\n    };\n\n    const bag = { field, meta, form: restOfFormik };\n\n    if (render) {\n      return (render as any)(bag);\n    }\n\n    if (isFunction(children)) {\n      return (children as (props: FastFieldProps<any>) => React.ReactNode)(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        const { innerRef, ...rest } = props;\n        return React.createElement(\n          component,\n          { ref: innerRef, ...field, ...(rest as $FixMe) },\n          children\n        );\n      }\n      // We don't pass `meta` for backwards compat\n      return React.createElement(\n        component as React.ComponentClass<$FixMe>,\n        { field, form: formik, ...props },\n        children\n      );\n    }\n\n    // default to input here so we can check for both `as` and `children` above\n    const asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      const { innerRef, ...rest } = props;\n      return React.createElement(\n        asElement,\n        { ref: innerRef, ...field, ...(rest as $FixMe) },\n        children\n      );\n    }\n\n    return React.createElement(\n      asElement as React.ComponentClass,\n      { ...field, ...props },\n      children\n    );\n  }\n}\n\nexport const FastField = connect<FastFieldAttributes<any>, any>(FastFieldInner);\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/** @license React v0.18.0\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var f,g,h,k,l;\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var p=null,q=null,t=function(){if(null!==p)try{var a=exports.unstable_now();p(!0,a);p=null}catch(b){throw setTimeout(t,0),b;}},u=Date.now();exports.unstable_now=function(){return Date.now()-u};f=function(a){null!==p?setTimeout(f,0,a):(p=a,setTimeout(t,0))};g=function(a,b){q=setTimeout(a,b)};h=function(){clearTimeout(q)};k=function(){return!1};l=exports.unstable_forceFrameRate=function(){}}else{var w=window.performance,x=window.Date,\ny=window.setTimeout,z=window.clearTimeout;if(\"undefined\"!==typeof console){var A=window.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\");\"function\"!==typeof A&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\")}if(\"object\"===\ntypeof w&&\"function\"===typeof w.now)exports.unstable_now=function(){return w.now()};else{var B=x.now();exports.unstable_now=function(){return x.now()-B}}var C=!1,D=null,E=-1,F=5,G=0;k=function(){return exports.unstable_now()>=G};l=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported\"):F=0<a?Math.floor(1E3/a):5};var H=new MessageChannel,I=H.port2;H.port1.onmessage=\nfunction(){if(null!==D){var a=exports.unstable_now();G=a+F;try{D(!0,a)?I.postMessage(null):(C=!1,D=null)}catch(b){throw I.postMessage(null),b;}}else C=!1};f=function(a){D=a;C||(C=!0,I.postMessage(null))};g=function(a,b){E=y(function(){a(exports.unstable_now())},b)};h=function(){z(E);E=-1}}function J(a,b){var c=a.length;a.push(b);a:for(;;){var d=Math.floor((c-1)/2),e=a[d];if(void 0!==e&&0<K(e,b))a[d]=b,a[c]=e,c=d;else break a}}function L(a){a=a[0];return void 0===a?null:a}\nfunction M(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>K(n,c))void 0!==r&&0>K(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>K(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function K(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var N=[],O=[],P=1,Q=null,R=3,S=!1,T=!1,U=!1;\nfunction V(a){for(var b=L(O);null!==b;){if(null===b.callback)M(O);else if(b.startTime<=a)M(O),b.sortIndex=b.expirationTime,J(N,b);else break;b=L(O)}}function W(a){U=!1;V(a);if(!T)if(null!==L(N))T=!0,f(X);else{var b=L(O);null!==b&&g(W,b.startTime-a)}}\nfunction X(a,b){T=!1;U&&(U=!1,h());S=!0;var c=R;try{V(b);for(Q=L(N);null!==Q&&(!(Q.expirationTime>b)||a&&!k());){var d=Q.callback;if(null!==d){Q.callback=null;R=Q.priorityLevel;var e=d(Q.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?Q.callback=e:Q===L(N)&&M(N);V(b)}else M(N);Q=L(N)}if(null!==Q)var m=!0;else{var n=L(O);null!==n&&g(W,n.startTime-b);m=!1}return m}finally{Q=null,R=c,S=!1}}\nfunction Y(a){switch(a){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1E4;default:return 5E3}}var Z=l;exports.unstable_ImmediatePriority=1;exports.unstable_UserBlockingPriority=2;exports.unstable_NormalPriority=3;exports.unstable_IdlePriority=5;exports.unstable_LowPriority=4;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=R;R=a;try{return b()}finally{R=c}};\nexports.unstable_next=function(a){switch(R){case 1:case 2:case 3:var b=3;break;default:b=R}var c=R;R=b;try{return a()}finally{R=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();if(\"object\"===typeof c&&null!==c){var e=c.delay;e=\"number\"===typeof e&&0<e?d+e:d;c=\"number\"===typeof c.timeout?c.timeout:Y(a)}else c=Y(a),e=d;c=e+c;a={id:P++,callback:b,priorityLevel:a,startTime:e,expirationTime:c,sortIndex:-1};e>d?(a.sortIndex=e,J(O,a),null===L(N)&&a===L(O)&&(U?h():U=!0,g(W,e-d))):(a.sortIndex=c,J(N,a),T||S||(T=!0,f(X)));return a};exports.unstable_cancelCallback=function(a){a.callback=null};\nexports.unstable_wrapCallback=function(a){var b=R;return function(){var c=R;R=b;try{return a.apply(this,arguments)}finally{R=c}}};exports.unstable_getCurrentPriorityLevel=function(){return R};exports.unstable_shouldYield=function(){var a=exports.unstable_now();V(a);var b=L(N);return b!==Q&&null!==Q&&null!==b&&null!==b.callback&&b.startTime<=a&&b.expirationTime<Q.expirationTime||k()};exports.unstable_requestPaint=Z;exports.unstable_continueExecution=function(){T||S||(T=!0,f(X))};\nexports.unstable_pauseExecution=function(){};exports.unstable_getFirstCallbackNode=function(){return L(N)};exports.unstable_Profiling=null;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import { Box, Button, FormHelperText, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useState } from 'react';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\ninterface Auth0LoginProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Auth0Login: FC<Auth0LoginProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  // @ts-ignore\n  const { loginWithPopup } = useAuth() as any;\n  const [error, setError] = useState<string | null>(null);\n  const isMountedRef = useIsMountedRef();\n\n  const handleLogin = async (): Promise<void> => {\n    try {\n      await loginWithPopup();\n    } catch (err) {\n      console.error(err);\n      if (isMountedRef.current) {\n        setError(err.message);\n      }\n    }\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {error && (\n        <Box my={3}>\n          <FormHelperText error>{error}</FormHelperText>\n        </Box>\n      )}\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Button onClick={handleLogin} variant=\"contained\" color=\"secondary\">\n          Log in with Auth0\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nAuth0Login.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Auth0Login;\n","import {\n  Box,\n  Button,\n  Divider,\n  FormHelperText,\n  makeStyles,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport * as Yup from 'yup';\n\ninterface FirebaseAuthLoginProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  googleButton: {\n    backgroundColor: theme.palette.common.white\n  },\n  providerIcon: {\n    marginRight: theme.spacing(2)\n  },\n  divider: {\n    flexGrow: 1\n  },\n  dividerText: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst FirebaseAuthLogin: FC<FirebaseAuthLoginProps> = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  // @ts-ignore\n  const { signInWithEmailAndPassword, signInWithGoogle } = useAuth() as any;\n  const isMountedRef = useIsMountedRef();\n\n  const handleGoogleClick = async () => {\n    try {\n      await signInWithGoogle();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        className={classes.googleButton}\n        fullWidth\n        onClick={handleGoogleClick}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        <img\n          alt=\"Google\"\n          className={classes.providerIcon}\n          src={`${process.env.PUBLIC_URL}/static/images/google.svg`}\n        />\n        Sign in with Google\n      </Button>\n      <Box alignItems=\"center\" display=\"flex\" mt={2}>\n        <Divider className={classes.divider} orientation=\"horizontal\" />\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n          className={classes.dividerText}\n        >\n          OR\n        </Typography>\n        <Divider className={classes.divider} orientation=\"horizontal\" />\n      </Box>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email('Must be a valid email')\n            .max(255)\n            .required('Email is required'),\n          password: Yup.string().max(255).required('Password is required')\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await signInWithEmailAndPassword(values.email, values.password);\n\n            if (isMountedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (isMountedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => (\n          <form\n            noValidate\n            onSubmit={handleSubmit}\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n            <Box mt={2}>\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Log In\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nFirebaseAuthLogin.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FirebaseAuthLogin;\n","import {\n  Box,\n  Button,\n  Divider,\n  FormHelperText,\n  makeStyles,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport clsx from 'clsx';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport * as Yup from 'yup';\n\ninterface JWTLoginProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  googleButton: {\n    backgroundColor: theme.palette.common.white\n  },\n  providerIcon: {\n    marginRight: theme.spacing(2),\n    width: '20px'\n  },\n  divider: {\n    flexGrow: 1\n  },\n  dividerText: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst JWTLogin: FC<JWTLoginProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  // @ts-ignore\n  const { login } = useAuth() as any;\n  const isMountedRef = useIsMountedRef();\n\n  const handleFakeLinkedInLogin = async () => {\n    try {\n      await login('influencer@influencer.io', 'Password123');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        className={classes.googleButton}\n        fullWidth\n        onClick={handleFakeLinkedInLogin}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        <img\n          alt=\"Google\"\n          className={classes.providerIcon}\n          src={`${process.env.PUBLIC_URL}/static/images/linkedin.svg`}\n        />\n        Sign in as a influencer with LinkedIn\n      </Button>\n      <Box alignItems=\"center\" display=\"flex\" mt={2}>\n        <Divider className={classes.divider} orientation=\"horizontal\" />\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n          className={classes.dividerText}\n        >\n          OR\n        </Typography>\n        <Divider className={classes.divider} orientation=\"horizontal\" />\n      </Box>\n      <Formik\n        initialValues={{\n          email: 'influencer@influencer.io',\n          password: 'Password123',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email('Must be a valid email')\n            .max(255)\n            .required('Email is required'),\n          password: Yup.string().max(255).required('Password is required')\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await login(values.email, values.password);\n\n            if (isMountedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (isMountedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => (\n          <form\n            noValidate\n            onSubmit={handleSubmit}\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              autoFocus\n              helperText={touched.email && errors.email}\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n            <Box mt={2}>\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Log In\n              </Button>\n            </Box>\n            <Box mt={2}>\n              <Alert severity=\"info\">\n                <div>\n                  Use{' '}\n                  <b>\n                    influencer@influencer.io for influencer or company@klarna.io\n                    for company\n                  </b>{' '}\n                  and password <b>Password123</b>\n                </div>\n              </Alert>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nJWTLogin.propTypes = {\n  className: PropTypes.string\n};\n\nexport default JWTLogin;\n","import {\n  Box,\n  Card,\n  CardContent,\n  Container,\n  Divider,\n  Link,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Logo from 'src/components/Logo';\nimport Page from 'src/components/Page';\nimport useAuth from 'src/hooks/useAuth';\nimport { Theme } from 'src/theme';\nimport Auth0Login from './Auth0Login';\nimport FirebaseAuthLogin from './FirebaseAuthLogin';\nimport JWTLogin from './JWTLogin';\n\nconst methodIcons = {\n  Auth0: `${process.env.PUBLIC_URL}/static/images/auth0.svg`,\n  FirebaseAuth: `${process.env.PUBLIC_URL}/static/images/firebase.svg`,\n  JWT: `${process.env.PUBLIC_URL}/static/images/jwt.svg`\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n  banner: {\n    backgroundColor: theme.palette.background.paper,\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  bannerChip: {\n    marginRight: theme.spacing(2)\n  },\n  methodIcon: {\n    height: 30,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n  cardContainer: {\n    paddingBottom: 80,\n    paddingTop: 80\n  },\n  cardContent: {\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 400\n  },\n  currentMethodIcon: {\n    height: 40,\n    '& > img': {\n      width: 'auto',\n      maxHeight: '100%'\n    }\n  }\n}));\n\nconst LoginView: FC = () => {\n  const classes = useStyles();\n\n  const { method } = useAuth() as any;\n\n  return (\n    <Page className={classes.root} title=\"Login\">\n      {/* <div className={classes.banner}>\n        <Container maxWidth=\"md\">\n          <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\">\n            <Chip\n              color=\"secondary\"\n              label=\"NEW\"\n              size=\"small\"\n              className={classes.bannerChip}\n            />\n            <Box alignItems=\"center\" display=\"flex\">\n              <Typography color=\"textPrimary\" variant=\"h6\">\n                Visit our{' '}\n                <Link component={RouterLink} to=\"/docs\">\n                  docs\n                </Link>{' '}\n                and find out how to switch between\n              </Typography>\n              <Tooltip title=\"Auth0\">\n                <img\n                  alt=\"Auth0\"\n                  className={classes.methodIcon}\n                  src={methodIcons['Auth0']}\n                />\n              </Tooltip>\n              <Tooltip title=\"Firebase\">\n                <img\n                  alt=\"Firebase\"\n                  className={classes.methodIcon}\n                  src={methodIcons['FirebaseAuth']}\n                />\n              </Tooltip>\n              <Tooltip title=\"JSON Web Token\">\n                <img\n                  alt=\"JWT\"\n                  className={classes.methodIcon}\n                  src={methodIcons['JWT']}\n                />\n              </Tooltip>\n            </Box>\n          </Box>\n        </Container>\n      </div> */}\n      <Container className={classes.cardContainer} maxWidth=\"sm\">\n        <Box mb={8} display=\"flex\" justifyContent=\"center\">\n          <RouterLink to=\"/\">\n            <Logo />\n          </RouterLink>\n        </Box>\n        <Card>\n          <CardContent className={classes.cardContent}>\n            <Box\n              alignItems=\"center\"\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              mb={3}\n            >\n              <div>\n                <Typography color=\"textPrimary\" gutterBottom variant=\"h2\">\n                  Sign in\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Sign in on the internal platform\n                </Typography>\n              </div>\n              {/* <div className={classes.currentMethodIcon}>\n                <img alt=\"Auth method\" src={methodIcons[method]} />\n              </div> */}\n            </Box>\n            <Box flexGrow={1} mt={3}>\n              {method === 'Auth0' && <Auth0Login />}\n              {method === 'FirebaseAuth' && <FirebaseAuthLogin />}\n              {method === 'JWT' && <JWTLogin />}\n            </Box>\n            <Box my={3}>\n              <Divider />\n            </Box>\n            <Link\n              component={RouterLink}\n              to=\"/register\"\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Create new account\n            </Link>\n          </CardContent>\n        </Card>\n      </Container>\n    </Page>\n  );\n};\n\nexport default LoginView;\n"],"sourceRoot":""}