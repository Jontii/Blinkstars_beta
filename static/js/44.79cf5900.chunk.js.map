{"version":3,"sources":["hooks/useIsMountedRef.ts","components/Label.tsx","views/product/ProductListView/Header.tsx","../node_modules/react-feather/dist/icons/image.js","views/product/ProductListView/Results.tsx","views/product/ProductListView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","action","marginBottom","marginLeft","Header","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","component","RouterLink","Typography","Box","mt","Button","startIcon","SvgIcon","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Image","forwardRef","_ref","ref","_ref$color","_ref$size","size","React","createElement","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","cx","cy","r","points","propTypes","PropTypes","string","oneOfType","number","displayName","categoryOptions","id","name","avalabilityOptions","sortOptions","value","label","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","background","default","bulkAction","queryField","categoryField","flexBasis","availabilityField","stockField","shippableField","imageCell","image","Results","products","useState","selectedProducts","setSelectedProducts","page","setPage","limit","setLimit","query","setQuery","sort","setSort","category","availability","inStock","isShippable","filters","setFilters","handleSelectAllProducts","event","checked","map","product","filteredProducts","filter","matches","toLowerCase","includes","isAvailable","inventoryType","applyFilters","paginatedProducts","slice","applyPagination","enableBulkOperations","selectedSomeProducts","selectedAllProducts","Card","p","TextField","InputProps","startAdornment","InputAdornment","onChange","persist","placeholder","select","SelectProps","native","option","prevFilters","categoryOption","avalabilityOption","FormControlLabel","control","Checkbox","indeterminate","Table","TableHead","TableRow","TableCell","align","TableBody","isProductSelected","hover","selected","productId","prevSelected","alt","src","bgcolor","underline","in_stock","text","limited","out_of_stock","getInventoryLabel","quantity","variants","attributes","attr","numeral","price","format","currency","IconButton","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","dark","minHeight","paddingTop","paddingBottom","ProductListView","isMountedRef","setProducts","getProducts","useCallback","a","axios","get","response","data","console","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/44.79cf5900.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import { fade, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, ReactNode } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={clsx(\n        classes.root,\n        {\n          [classes[color]]: color\n        },\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import {\n  Box,\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  makeStyles,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport {\n  Download as DownloadIcon,\n  PlusCircle as PlusCircleIcon,\n  Upload as UploadIcon\n} from 'react-feather';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Theme } from 'src/theme';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app/management\"\n            component={RouterLink}\n          >\n            Management\n          </Link>\n          <Typography variant=\"body1\" color=\"textPrimary\">\n            Products\n          </Typography>\n        </Breadcrumbs>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          All Products\n        </Typography>\n        <Box mt={2}>\n          <Button\n            className={classes.action}\n            startIcon={\n              <SvgIcon fontSize=\"small\">\n                <UploadIcon />\n              </SvgIcon>\n            }\n          >\n            Import\n          </Button>\n          <Button\n            className={classes.action}\n            startIcon={\n              <SvgIcon fontSize=\"small\">\n                <DownloadIcon />\n              </SvgIcon>\n            }\n          >\n            Export\n          </Button>\n        </Box>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          className={classes.action}\n          component={RouterLink}\n          to=\"/app/management/products/create\"\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <PlusCircleIcon />\n            </SvgIcon>\n          }\n        >\n          New Product\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Image = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"3\",\n    width: \"18\",\n    height: \"18\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"8.5\",\n    cy: \"8.5\",\n    r: \"1.5\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"21 15 16 10 5 21\"\n  }));\n});\nImage.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nImage.displayName = 'Image';\nexport default Image;","import {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  FormControlLabel,\n  IconButton,\n  InputAdornment,\n  Link,\n  makeStyles,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport React, { ChangeEvent, FC, useState } from 'react';\nimport {\n  ArrowRight as ArrowRightIcon,\n  Edit as EditIcon,\n  Image as ImageIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Label from 'src/components/Label';\nimport { Theme } from 'src/theme';\nimport { InventoryType, Product } from 'src/types/product';\n\ninterface ResultsProps {\n  className?: string;\n  products: Product[];\n}\n\ninterface Filters {\n  availability?: 'available' | 'unavailable';\n  category?: string;\n  inStock?: boolean;\n  isShippable?: boolean;\n}\n\nconst categoryOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'dress',\n    name: 'Dress'\n  },\n  {\n    id: 'jewelry',\n    name: 'Jewelry'\n  },\n  {\n    id: 'blouse',\n    name: 'Blouse'\n  },\n  {\n    id: 'beauty',\n    name: 'Beauty'\n  }\n];\n\nconst avalabilityOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'available',\n    name: 'Available'\n  },\n  {\n    id: 'unavailable',\n    name: 'Unavailable'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'updatedAt|desc',\n    label: 'Last update (newest first)'\n  },\n  {\n    value: 'updatedAt|asc',\n    label: 'Last update (oldest first)'\n  },\n  {\n    value: 'createdAt|desc',\n    label: 'Creation date (newest first)'\n  },\n  {\n    value: 'createdAt|asc',\n    label: 'Creation date (oldest first)'\n  }\n];\n\nconst getInventoryLabel = (inventoryType: InventoryType): JSX.Element => {\n  const map = {\n    in_stock: {\n      text: 'In Stock',\n      color: 'success'\n    },\n    limited: {\n      text: 'Limited',\n      color: 'warning'\n    },\n    out_of_stock: {\n      text: 'Out of Stock',\n      color: 'error'\n    }\n  };\n\n  const { text, color }: any = map[inventoryType];\n\n  return <Label color={color}>{text}</Label>;\n};\n\nconst applyFilters = (\n  products: Product[],\n  query: string,\n  filters: Filters\n): Product[] => {\n  return products.filter(product => {\n    let matches = true;\n\n    if (query && !product.name.toLowerCase().includes(query.toLowerCase())) {\n      matches = false;\n    }\n\n    if (filters.category && product.category !== filters.category) {\n      matches = false;\n    }\n\n    if (filters.availability) {\n      if (filters.availability === 'available' && !product.isAvailable) {\n        matches = false;\n      }\n\n      if (filters.availability === 'unavailable' && product.isAvailable) {\n        matches = false;\n      }\n    }\n\n    if (\n      filters.inStock &&\n      !['in_stock', 'limited'].includes(product.inventoryType)\n    ) {\n      matches = false;\n    }\n\n    if (filters.isShippable && !product.isShippable) {\n      matches = false;\n    }\n\n    return matches;\n  });\n};\n\nconst applyPagination = (\n  products: Product[],\n  page: number,\n  limit: number\n): Product[] => {\n  return products.slice(page * limit, page * limit + limit);\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  queryField: {\n    width: 500\n  },\n  categoryField: {\n    flexBasis: 200\n  },\n  availabilityField: {\n    marginLeft: theme.spacing(2),\n    flexBasis: 200\n  },\n  stockField: {\n    marginLeft: theme.spacing(2)\n  },\n  shippableField: {\n    marginLeft: theme.spacing(2)\n  },\n  imageCell: {\n    fontSize: 0,\n    width: 68,\n    flexBasis: 68,\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  image: {\n    height: 68,\n    width: 68\n  }\n}));\n\nconst Results: FC<ResultsProps> = ({ className, products, ...rest }) => {\n  const classes = useStyles();\n  const [selectedProducts, setSelectedProducts] = useState<string[]>([]);\n  const [page, setPage] = useState<number>(0);\n  const [limit, setLimit] = useState<number>(10);\n  const [query, setQuery] = useState<string>('');\n  const [sort, setSort] = useState<string>(sortOptions[0].value);\n  const [filters, setFilters] = useState<Filters>({\n    category: null,\n    availability: null,\n    inStock: null,\n    isShippable: null\n  });\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleCategoryChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      category: value\n    }));\n  };\n\n  const handleAvailabilityChange = (\n    event: ChangeEvent<HTMLInputElement>\n  ): void => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      availability: value\n    }));\n  };\n\n  const handleStockChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      inStock: value\n    }));\n  };\n\n  const handleShippableChange = (\n    event: ChangeEvent<HTMLInputElement>\n  ): void => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      isShippable: value\n    }));\n  };\n\n  const handleSortChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllProducts = (\n    event: ChangeEvent<HTMLInputElement>\n  ): void => {\n    setSelectedProducts(\n      event.target.checked ? products.map(product => product.id) : []\n    );\n  };\n\n  const handleSelectOneProduct = (\n    event: ChangeEvent<HTMLInputElement>,\n    productId: string\n  ): void => {\n    if (!selectedProducts.includes(productId)) {\n      setSelectedProducts(prevSelected => [...prevSelected, productId]);\n    } else {\n      setSelectedProducts(prevSelected =>\n        prevSelected.filter(id => id !== productId)\n      );\n    }\n  };\n\n  const handlePageChange = (event: any, newPage: number): void => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredProducts = applyFilters(products, query, filters);\n  const paginatedProducts = applyPagination(filteredProducts, page, limit);\n  const enableBulkOperations = selectedProducts.length > 0;\n  const selectedSomeProducts =\n    selectedProducts.length > 0 && selectedProducts.length < products.length;\n  const selectedAllProducts = selectedProducts.length === products.length;\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box p={2}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <TextField\n            className={classes.queryField}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SvgIcon fontSize=\"small\" color=\"action\">\n                    <SearchIcon />\n                  </SvgIcon>\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search products\"\n            value={query}\n            variant=\"outlined\"\n          />\n          <Box flexGrow={1} />\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box mt={3} display=\"flex\" alignItems=\"center\">\n          <TextField\n            className={classes.categoryField}\n            label=\"Category\"\n            name=\"category\"\n            onChange={handleCategoryChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.category || 'all'}\n            variant=\"outlined\"\n          >\n            {categoryOptions.map(categoryOption => (\n              <option key={categoryOption.id} value={categoryOption.id}>\n                {categoryOption.name}\n              </option>\n            ))}\n          </TextField>\n          <TextField\n            className={classes.availabilityField}\n            label=\"Availability\"\n            name=\"availability\"\n            onChange={handleAvailabilityChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.availability || 'all'}\n            variant=\"outlined\"\n          >\n            {avalabilityOptions.map(avalabilityOption => (\n              <option key={avalabilityOption.id} value={avalabilityOption.id}>\n                {avalabilityOption.name}\n              </option>\n            ))}\n          </TextField>\n          <FormControlLabel\n            className={classes.stockField}\n            control={\n              <Checkbox\n                checked={!!filters.inStock}\n                onChange={handleStockChange}\n                name=\"inStock\"\n              />\n            }\n            label=\"In Stock\"\n          />\n          <FormControlLabel\n            className={classes.shippableField}\n            control={\n              <Checkbox\n                checked={!!filters.isShippable}\n                onChange={handleShippableChange}\n                name=\"Shippable\"\n              />\n            }\n            label=\"Shippable\"\n          />\n        </Box>\n      </Box>\n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllProducts}\n              indeterminate={selectedSomeProducts}\n              onChange={handleSelectAllProducts}\n            />\n            <Button variant=\"outlined\" className={classes.bulkAction}>\n              Delete\n            </Button>\n            <Button variant=\"outlined\" className={classes.bulkAction}>\n              Edit\n            </Button>\n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={1200}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllProducts}\n                    indeterminate={selectedSomeProducts}\n                    onChange={handleSelectAllProducts}\n                  />\n                </TableCell>\n                <TableCell />\n                <TableCell>Name</TableCell>\n                <TableCell>Inventory</TableCell>\n                <TableCell>Details</TableCell>\n                <TableCell>Attributes</TableCell>\n                <TableCell>Price</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedProducts.map(product => {\n                const isProductSelected = selectedProducts.includes(product.id);\n\n                return (\n                  <TableRow hover key={product.id} selected={isProductSelected}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isProductSelected}\n                        onChange={event =>\n                          handleSelectOneProduct(event, product.id)\n                        }\n                        value={isProductSelected}\n                      />\n                    </TableCell>\n                    <TableCell className={classes.imageCell}>\n                      {product.image ? (\n                        <img\n                          alt=\"Product\"\n                          src={product.image}\n                          className={classes.image}\n                        />\n                      ) : (\n                        <Box p={2} bgcolor=\"background.dark\">\n                          <SvgIcon>\n                            <ImageIcon />\n                          </SvgIcon>\n                        </Box>\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      <Link\n                        variant=\"subtitle2\"\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        underline=\"none\"\n                        to=\"#\"\n                      >\n                        {product.name}\n                      </Link>\n                    </TableCell>\n                    <TableCell>\n                      {getInventoryLabel(product.inventoryType)}\n                    </TableCell>\n                    <TableCell>\n                      {product.quantity} in stock\n                      {product.variants > 1 &&\n                        ` in ${product.variants} variants`}\n                    </TableCell>\n                    <TableCell>\n                      {product.attributes.map(attr => attr)}\n                    </TableCell>\n                    <TableCell>\n                      {numeral(product.price).format(\n                        `${product.currency}0,0.00`\n                      )}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton>\n                        <SvgIcon fontSize=\"small\">\n                          <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton>\n                        <SvgIcon fontSize=\"small\">\n                          <ArrowRightIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n          <TablePagination\n            component=\"div\"\n            count={filteredProducts.length}\n            onChangePage={handlePageChange}\n            onChangeRowsPerPage={handleLimitChange}\n            page={page}\n            rowsPerPage={limit}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  products: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  products: []\n};\n\nexport default Results;\n","import { Box, Container, makeStyles } from '@material-ui/core';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport { Product } from 'src/types/product';\nimport axios from 'src/utils/axios';\nimport Header from './Header';\nimport Results from './Results';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: 100\n  }\n}));\n\nconst ProductListView: FC = () => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [products, setProducts] = useState<Product[]>([]);\n\n  const getProducts = useCallback(async () => {\n    try {\n      const response = await axios.get<{ products: Product[] }>(\n        '/api/products'\n      );\n\n      if (isMountedRef.current) {\n        setProducts(response.data.products);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  return (\n    <Page className={classes.root} title=\"Product List\">\n      <Container maxWidth={false}>\n        <Header />\n        {products && (\n          <Box mt={3}>\n            <Results products={products} />\n          </Box>\n        )}\n      </Container>\n    </Page>\n  );\n};\n\nexport default ProductListView;\n"],"sourceRoot":""}