{"version":3,"sources":["hooks/useIsMountedRef.ts","views/auth/LoginView/Auth0Login.tsx","views/auth/LoginView/FirebaseAuthLogin.tsx","views/auth/LoginView/JWTLogin.tsx","views/auth/LoginView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","root","Auth0Login","className","rest","classes","loginWithPopup","useAuth","useState","error","setError","isMountedRef","handleLogin","a","console","message","clsx","Box","my","FormHelperText","display","justifyContent","Button","onClick","variant","color","theme","googleButton","backgroundColor","palette","common","white","providerIcon","marginRight","spacing","divider","flexGrow","dividerText","margin","FirebaseAuthLogin","signInWithEmailAndPassword","signInWithGoogle","handleGoogleClick","fullWidth","size","alt","src","alignItems","mt","Divider","orientation","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","Boolean","helperText","label","name","onBlur","onChange","type","value","disabled","JWTLogin","login","autoFocus","Alert","severity","methodIcons","background","dark","flexDirection","minHeight","banner","paper","paddingBottom","paddingTop","borderBottom","bannerChip","methodIcon","height","marginLeft","cardContainer","cardContent","padding","currentMethodIcon","width","maxHeight","LoginView","method","Page","title","Container","maxWidth","Chip","Link","component","RouterLink","to","Tooltip","mb","Logo","Card","CardContent","gutterBottom"],"mappings":"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","file":"static/js/13.bc6a6a99.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\nimport type { MutableRefObject } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import React, { useState } from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  makeStyles\n} from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\ninterface Auth0LoginProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Auth0Login: FC<Auth0LoginProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { loginWithPopup } = useAuth() as any;\n  const [error, setError] = useState<string | null>(null);\n  const isMountedRef = useIsMountedRef();\n\n  const handleLogin = async (): Promise<void> => {\n    try {\n      await loginWithPopup();\n    } catch (err) {\n      console.error(err);\n      if (isMountedRef.current) {\n        setError(err.message);\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {error && (\n        <Box my={3}>\n          <FormHelperText error>\n            {error}\n          </FormHelperText>\n        </Box>\n      )}\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <Button\n          onClick={handleLogin}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Log in with Auth0\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nAuth0Login.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Auth0Login;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Divider,\n  FormHelperText,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\ninterface FirebaseAuthLoginProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  googleButton: {\n    backgroundColor: theme.palette.common.white\n  },\n  providerIcon: {\n    marginRight: theme.spacing(2)\n  },\n  divider: {\n    flexGrow: 1\n  },\n  dividerText: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst FirebaseAuthLogin: FC<FirebaseAuthLoginProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { signInWithEmailAndPassword, signInWithGoogle } = useAuth() as any;\n  const isMountedRef = useIsMountedRef();\n\n  const handleGoogleClick = async () => {\n    try {\n      await signInWithGoogle();\n    } catch(err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        className={classes.googleButton}\n        fullWidth\n        onClick={handleGoogleClick}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        <img\n          alt=\"Google\"\n          className={classes.providerIcon}\n          src=\"/static/images/google.svg\"\n        />\n        Sign in with Google\n      </Button>\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        mt={2}\n      >\n        <Divider\n          className={classes.divider}\n          orientation=\"horizontal\"\n        />\n        <Typography \n          color=\"textSecondary\"\n          variant=\"body1\"\n          className={classes.dividerText}\n        >\n          OR\n        </Typography>\n        <Divider\n          className={classes.divider}\n          orientation=\"horizontal\"\n        />\n      </Box>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n          password: Yup.string().max(255).required('Password is required')\n        })}\n        onSubmit={async (values, {\n          setErrors,\n          setStatus,\n          setSubmitting\n        }) => {\n          try {\n            await signInWithEmailAndPassword(values.email, values.password);\n\n            if (isMountedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (isMountedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => (\n          <form\n            noValidate\n            onSubmit={handleSubmit}\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>\n                  {errors.submit}\n                </FormHelperText>\n              </Box>\n            )}\n            <Box mt={2}>\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Log In\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nFirebaseAuthLogin.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default FirebaseAuthLogin;\n","import React from 'react';\nimport type { FC } from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\ninterface JWTLoginProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst JWTLogin: FC<JWTLoginProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { login } = useAuth() as any;\n  const isMountedRef = useIsMountedRef();\n\n  return (\n    <Formik\n      initialValues={{\n        email: 'influencer@influencer.io',\n        password: 'Password123',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().max(255).required('Password is required')\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await login(values.email, values.password);\n\n          if (isMountedRef.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n          if (isMountedRef.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            autoFocus\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          {errors.submit && (\n            <Box mt={3}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Log In\n            </Button>\n          </Box>\n          <Box mt={2}>\n            <Alert\n              severity=\"info\"\n            >\n              <div>\n                Use\n                {' '}\n                <b>influencer@influencer.io for influencer or company@amd.io for business</b>\n                {' '}\n                and password\n                {' '}\n                <b>Password123</b>\n              </div>\n            </Alert>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nJWTLogin.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default JWTLogin;\n","import React from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Chip,\n  Container,\n  Divider,\n  Link,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport type { Theme } from 'src/theme';\nimport Page from 'src/components/Page';\nimport Logo from 'src/components/Logo';\nimport useAuth from 'src/hooks/useAuth';\nimport Auth0Login from './Auth0Login';\nimport FirebaseAuthLogin from './FirebaseAuthLogin';\nimport JWTLogin from './JWTLogin';\n\nconst methodIcons = {\n  'Auth0': '/static/images/auth0.svg',\n  'FirebaseAuth': '/static/images/firebase.svg',\n  'JWT': '/static/images/jwt.svg'\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n  banner: {\n    backgroundColor: theme.palette.background.paper,\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  bannerChip: {\n    marginRight: theme.spacing(2)\n  },\n  methodIcon: {\n    height: 30,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n  cardContainer: {\n    paddingBottom: 80,\n    paddingTop: 80,\n  },\n  cardContent: {\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 400\n  },\n  currentMethodIcon: {\n    height: 40,\n    '& > img': {\n      width: 'auto',\n      maxHeight: '100%'\n    }\n  }\n}));\n\nconst LoginView: FC = () => {\n  const classes = useStyles();\n  const { method } = useAuth() as any;\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <div className={classes.banner}>\n        <Container maxWidth=\"md\">\n          <Box\n            alignItems=\"center\"\n            display=\"flex\"\n            justifyContent=\"center\"\n          >\n            <Chip\n              color=\"secondary\"\n              label=\"NEW\"\n              size=\"small\"\n              className={classes.bannerChip}\n            />\n            <Box\n              alignItems=\"center\"\n              display=\"flex\"\n            >\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h6\"\n              >\n                Visit our\n                {' '}\n                <Link\n                  component={RouterLink}\n                  to=\"/docs\"\n                >\n                  docs\n                </Link>\n                {' '}\n                and find out how to switch between\n              </Typography>\n              <Tooltip title=\"Auth0\">\n                <img\n                  alt=\"Auth0\"\n                  className={classes.methodIcon}\n                  src={methodIcons['Auth0']}\n                />\n              </Tooltip>\n              <Tooltip title=\"Firebase\">\n                <img\n                  alt=\"Firebase\"\n                  className={classes.methodIcon}\n                  src={methodIcons['FirebaseAuth']}\n                />\n              </Tooltip>\n              <Tooltip title=\"JSON Web Token\">\n                <img\n                  alt=\"JWT\"\n                  className={classes.methodIcon}\n                  src={methodIcons['JWT']}\n                />\n              </Tooltip>\n            </Box>\n          </Box>\n        </Container>\n      </div>\n      <Container\n        className={classes.cardContainer}\n        maxWidth=\"sm\"\n      >\n        <Box\n          mb={8}\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <RouterLink to=\"/\">\n            <Logo />\n          </RouterLink>\n        </Box>\n        <Card>\n          <CardContent className={classes.cardContent}>\n            <Box\n              alignItems=\"center\"\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              mb={3}\n            >\n              <div>\n                <Typography\n                  color=\"textPrimary\"\n                  gutterBottom\n                  variant=\"h2\"\n                >\n                  Sign in\n                </Typography>\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  Sign in on the internal platform\n                </Typography>\n              </div>\n              <div className={classes.currentMethodIcon}>\n                <img\n                  alt=\"Auth method\"\n                  src={methodIcons[method]}\n                />\n              </div>\n            </Box>\n            <Box\n              flexGrow={1}\n              mt={3}\n            >\n              {method === 'Auth0' && <Auth0Login /> }\n              {method === 'FirebaseAuth' && <FirebaseAuthLogin /> }\n              {method === 'JWT' && <JWTLogin /> }\n            </Box>\n            <Box my={3}>\n              <Divider />\n            </Box>\n            <Link\n              component={RouterLink}\n              to=\"/register\"\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Create new account\n            </Link>\n          </CardContent>\n        </Card>\n      </Container>\n    </Page>\n  );\n};\n\nexport default LoginView;\n"],"sourceRoot":""}