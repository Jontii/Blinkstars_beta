{"version":3,"sources":["utils/getInitials.ts","components/QuillEditor.tsx","views/mail/MailView/Compose.tsx","views/mail/MailView/MailDetails/MailReply.tsx","views/mail/MailView/MailDetails/Toolbar.tsx","views/mail/MailView/MailDetails/index.tsx","views/mail/MailView/MailList/MailItem.tsx","views/mail/MailView/MailList/Toolbar.tsx","views/mail/MailView/MailList/index.tsx","views/mail/MailView/Sidebar/LabelItem.tsx","views/mail/MailView/Sidebar/index.tsx","views/mail/MailView/index.tsx"],"names":["getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","borderLeft","borderTop","borderRight","borderBottom","palette","divider","color","secondary","main","stroke","text","primary","padding","spacing","backgroundColor","background","default","border","boxShadow","shadows","borderRadius","shape","fontFamily","typography","fontSize","QuillEditor","className","rest","classes","clsx","maxWidth","maxHeight","width","position","bottom","right","margin","outline","zIndex","display","flexDirection","minHeight","fullScreen","height","input","editor","flexGrow","action","marginRight","Compose","dispatch","useDispatch","isComposeOpen","useSelector","state","mail","useState","setFullScreen","messageBody","setMessageBody","Portal","Backdrop","open","Paper","elevation","Box","bgcolor","alignItems","py","px","Typography","variant","IconButton","onClick","SvgIcon","closeCompose","p","Input","disableUnderline","placeholder","Divider","onChange","value","Button","Tooltip","title","size","avatar","textareaContainer","textarea","body1","resize","fileInput","MailReply","user","useAuth","fileInputRef","useRef","setValue","handleAttach","current","click","Avatar","alt","src","TextareaAutosize","event","persist","target","rows","mt","ref","type","flexShrink","searchContainer","marginLeft","paddingBottom","paddingLeft","paddingRight","paddingTop","searchInput","Toolbar","history","useHistory","useParams","systemLabel","customLabel","push","Hidden","mdDown","overflowY","date","whiteSpace","message","marginBottom","MailDetails","mailId","mails","byId","useEffect","getMail","justifyContent","from","ml","Link","email","to","person","key","moment","createdAt","format","smDown","subject","source","hover","unread","content","left","top","error","fontWeight","fontWeightBold","selected","filterActive","colors","amber","cursor","textDecoration","details","breakpoints","up","minWidth","flexBasis","overflow","textOverflow","label","pxToRem","common","white","MailItem","onDeselect","onSelect","params","labels","getTo","id","isUnread","mr","Checkbox","checked","isStarred","isImportant","component","RouterLink","labelIds","length","mx","labelId","find","_label","style","defaultProps","onDeselectAll","onSelectAll","selectedMails","selectedAllMails","selectedSomeMails","mdUp","openSidebar","indeterminate","noWrap","dark","MailList","setSelectedMails","getMails","allIds","prevSelectedMails","filter","handleDeselectOneMail","includes","handleSelectOneMail","systemLabelIcons","all","MailIcon","inbox","InboxIcon","trash","DeleteIcon","drafts","DraftsIcon","spam","ReportIcon","sent","SendIcon","starred","StarIcon","important","LabelImportantIcon","borderTopRightRadius","borderBottomRightRadius","fontWeightRegular","active","fontWeightMedium","labelRoot","icon","LabelItem","Icon","LabelIcon","getIcon","getColor","displayUnreadCount","Boolean","unreadCount","ListItem","ButtonBase","activeClassName","drawerDesktopRoot","drawerDesktopPaper","drawerMobilePaper","drawerMobileBackdrop","Sidebar","containerRef","location","useLocation","isSidebarOpen","closeSidebar","pathname","fullWidth","openCompose","pr","List","Drawer","paper","onClose","BackdropProps","ModalProps","container","MailView","pageRef","getLabels","Page"],"mappings":"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","file":"static/js/44.57299f01.chunk.js","sourcesContent":["const getInitials = (name: string = '') => {\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n};\n\nexport default getInitials;\n","import { makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport ReactQuill from 'react-quill';\nimport { Theme } from 'src/theme';\n\n// NOTE: At this moment, this ReactQuill does not export\n// the types for props and we cannot extend them\ninterface QuillEditorProps {\n  className?: string;\n  [key: string]: any;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    '& .ql-toolbar': {\n      borderLeft: 'none',\n      borderTop: 'none',\n      borderRight: 'none',\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      '& .ql-picker-label:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-label.ql-active': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item:hover': {\n        color: theme.palette.secondary.main\n      },\n      '& .ql-picker-item.ql-selected': {\n        color: theme.palette.secondary.main\n      },\n      '& button:hover': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button:focus': {\n        color: theme.palette.secondary.main,\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& button.ql-active': {\n        '& .ql-stroke': {\n          stroke: theme.palette.secondary.main\n        }\n      },\n      '& .ql-stroke': {\n        stroke: theme.palette.text.primary\n      },\n      '& .ql-picker': {\n        color: theme.palette.text.primary\n      },\n      '& .ql-picker-options': {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.default,\n        border: 'none',\n        boxShadow: theme.shadows[10],\n        borderRadius: theme.shape.borderRadius\n      }\n    },\n    '& .ql-container': {\n      border: 'none',\n      '& .ql-editor': {\n        fontFamily: theme.typography.fontFamily,\n        fontSize: 16,\n        color: theme.palette.text.primary,\n        '&.ql-blank::before': {\n          color: theme.palette.text.secondary\n        }\n      }\n    }\n  }\n}));\n\nconst QuillEditor: FC<QuillEditorProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    // @ts-ignore\n    <ReactQuill className={clsx(classes.root, className)} {...rest} />\n  );\n};\n\nQuillEditor.propTypes = {\n  className: PropTypes.string\n};\n\nexport default QuillEditor;\n","import {\n  Backdrop,\n  Box,\n  Button,\n  Divider,\n  IconButton,\n  Input,\n  makeStyles,\n  Paper,\n  Portal,\n  SvgIcon,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport clsx from 'clsx';\nimport React, { FC, useState } from 'react';\nimport {\n  Maximize as MaximizeIcon,\n  Minimize as MinimizeIcon,\n  X as XIcon\n} from 'react-feather';\nimport QuillEditor from 'src/components/QuillEditor';\nimport { closeCompose } from 'src/slices/mail';\nimport { useDispatch, useSelector } from 'src/store';\nimport { Theme } from 'src/theme';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    maxWidth: `calc(100% - ${theme.spacing(6)}px)`,\n    maxHeight: `calc(100% - ${theme.spacing(6)}px)`,\n    width: 600,\n    position: 'fixed',\n    bottom: 0,\n    right: 0,\n    margin: theme.spacing(3),\n    outline: 'none',\n    zIndex: 2000,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 500\n  },\n  fullScreen: {\n    height: '100%',\n    width: '100%'\n  },\n  input: {\n    width: '100%'\n  },\n  editor: {\n    flexGrow: 1,\n    '& .ql-editor': {\n      minHeight: 300\n    }\n  },\n  action: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Compose: FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { isComposeOpen } = useSelector(state => state.mail);\n  const [fullScreen, setFullScreen] = useState<boolean>(false);\n  const [messageBody, setMessageBody] = useState<string>('');\n\n  const handleChange = (value: string): void => {\n    setMessageBody(value);\n  };\n\n  const handleExitFullScreen = (): void => {\n    setFullScreen(false);\n  };\n\n  const handleEnterFullScreen = (): void => {\n    setFullScreen(true);\n  };\n\n  const handleClose = (): void => {\n    dispatch(closeCompose());\n  };\n\n  if (!isComposeOpen) {\n    return null;\n  }\n\n  return (\n    <Portal>\n      <Backdrop open={fullScreen} />\n      <Paper\n        className={clsx(classes.root, { [classes.fullScreen]: fullScreen })}\n        elevation={12}\n      >\n        <Box\n          bgcolor=\"background.dark\"\n          display=\"flex\"\n          alignItems=\"center\"\n          py={1}\n          px={2}\n        >\n          <Typography variant=\"h5\" color=\"textPrimary\">\n            New Message\n          </Typography>\n          <Box flexGrow={1} />\n          {fullScreen ? (\n            <IconButton onClick={handleExitFullScreen}>\n              <SvgIcon fontSize=\"small\">\n                <MinimizeIcon />\n              </SvgIcon>\n            </IconButton>\n          ) : (\n            <IconButton onClick={handleEnterFullScreen}>\n              <SvgIcon fontSize=\"small\">\n                <MaximizeIcon />\n              </SvgIcon>\n            </IconButton>\n          )}\n          <IconButton onClick={handleClose}>\n            <SvgIcon fontSize=\"small\">\n              <XIcon />\n            </SvgIcon>\n          </IconButton>\n        </Box>\n        <Box p={2}>\n          <Input className={classes.input} disableUnderline placeholder=\"To\" />\n          <Input\n            className={classes.input}\n            disableUnderline\n            placeholder=\"Subject\"\n          />\n        </Box>\n        <Divider />\n        <QuillEditor\n          className={classes.editor}\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n          value={messageBody}\n        />\n        <Divider />\n        <Box display=\"flex\" alignItems=\"center\" py={1} px={2}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.action}\n          >\n            Send\n          </Button>\n          <Tooltip title=\"Attach image\">\n            <IconButton size=\"small\" className={classes.action}>\n              <AddPhotoIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton size=\"small\" className={classes.action}>\n              <AttachFileIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Paper>\n    </Portal>\n  );\n};\n\nexport default Compose;\n","import {\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  makeStyles,\n  Paper,\n  TextareaAutosize,\n  Tooltip\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { ChangeEvent, FC, useRef, useState } from 'react';\nimport useAuth from 'src/hooks/useAuth';\nimport { Theme } from 'src/theme';\n\ninterface MailReplyProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  textareaContainer: {\n    flexGrow: 1,\n    padding: theme.spacing(2)\n  },\n  textarea: {\n    ...theme.typography.body1,\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary,\n    border: 'none',\n    outline: 'none',\n    resize: 'none',\n    width: '100%'\n  },\n  action: {\n    marginRight: theme.spacing(1)\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nconst MailReply: FC<MailReplyProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const [value, setValue] = useState<string>('');\n\n  const handleChange = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = (): void => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Avatar alt=\"Person\" className={classes.avatar} src={user.avatar} />\n      <Paper className={classes.textareaContainer} variant=\"outlined\">\n        <TextareaAutosize\n          className={classes.textarea}\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n          rows={3}\n          value={value}\n        />\n        <Box display=\"flex\" alignItems=\"center\" mt={2}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            className={classes.action}\n          >\n            Send\n          </Button>\n          <Tooltip title=\"Attach image\">\n            <IconButton\n              size=\"small\"\n              className={classes.action}\n              onClick={handleAttach}\n            >\n              <AddPhotoIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton\n              size=\"small\"\n              className={classes.action}\n              onClick={handleAttach}\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Paper>\n      <input className={classes.fileInput} ref={fileInputRef} type=\"file\" />\n    </div>\n  );\n};\n\nMailReply.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MailReply;\n","import {\n  Box,\n  Hidden,\n  IconButton,\n  Input,\n  makeStyles,\n  Paper,\n  Tooltip\n} from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Theme } from 'src/theme';\n\ninterface ToolbarProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    flexShrink: 0,\n    height: 68,\n    padding: theme.spacing(2)\n  },\n  searchContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    marginLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5)\n  },\n  searchInput: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst Toolbar: FC<ToolbarProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { systemLabel, customLabel } = useParams();\n\n  const handleBack = (): void => {\n    if (systemLabel) {\n      return history.push(`/app/mail/${systemLabel}`);\n    }\n\n    if (customLabel) {\n      return history.push(`/app/mail/label/${customLabel}`);\n    }\n\n    return history.push('/app/mail/inbox');\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Tooltip title=\"Back\">\n        <IconButton onClick={handleBack}>\n          <ArrowBackIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Box flexGrow={1} />\n      <Hidden mdDown>\n        <Paper className={classes.searchContainer} variant=\"outlined\">\n          <SearchIcon color=\"action\" />\n          <Input\n            className={classes.searchInput}\n            disableUnderline\n            placeholder=\"Search message\"\n          />\n        </Paper>\n      </Hidden>\n      <Tooltip title=\"Previous mail\">\n        <IconButton>\n          <KeyboardArrowLeftIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Next mail\">\n        <IconButton>\n          <KeyboardArrowRightIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import {\n  Avatar,\n  Box,\n  Divider,\n  Hidden,\n  IconButton,\n  Link,\n  makeStyles,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport ReplyAllIcon from '@material-ui/icons/ReplyAllOutlined';\nimport ReplyIcon from '@material-ui/icons/ReplyOutlined';\nimport moment from 'moment';\nimport React, { FC, useEffect } from 'react';\nimport Markdown from 'react-markdown/with-html';\nimport { useParams } from 'react-router-dom';\nimport { getMail } from 'src/slices/mail';\nimport { useDispatch, useSelector } from 'src/store';\nimport { Theme } from 'src/theme';\nimport getInitials from 'src/utils/getInitials';\nimport MailReply from './MailReply';\nimport Toolbar from './Toolbar';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    flexDirection: 'column',\n    overflowY: 'auto'\n  },\n  avatar: {\n    height: 56,\n    width: 56\n  },\n  date: {\n    whiteSpace: 'nowrap'\n  },\n  message: {\n    color: theme.palette.text.secondary,\n    '& > p': {\n      ...theme.typography.body1,\n      marginBottom: theme.spacing(2)\n    }\n  }\n}));\n\nconst MailDetails: FC = () => {\n  const classes = useStyles();\n  const { mailId } = useParams();\n  const dispatch = useDispatch();\n  const mail = useSelector(state => state.mail.mails.byId[mailId]);\n\n  useEffect(() => {\n    dispatch(getMail(mailId));\n  }, [dispatch, mailId]);\n\n  if (!mail) {\n    return null;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Toolbar />\n      <Divider />\n      <Box p={3} display=\"flex\" justifyContent=\"space-between\" flexShrink={0}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Avatar className={classes.avatar} src={mail.from.avatar}>\n            {getInitials(mail.from.name)}\n          </Avatar>\n          <Box ml={2}>\n            <Typography display=\"inline\" variant=\"h5\" color=\"textPrimary\">\n              {mail.from.name}\n            </Typography>{' '}\n            <Link color=\"textSecondary\" display=\"inline\" variant=\"body2\">\n              {mail.from.email}\n            </Link>\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              To:{' '}\n              {mail.to.map(person => (\n                <Link color=\"inherit\" key={person.email}>\n                  {person.email}\n                </Link>\n              ))}\n            </Typography>\n            <Typography\n              className={classes.date}\n              color=\"textSecondary\"\n              variant=\"caption\"\n            >\n              {moment(mail.createdAt).format('MMMM Do YYYY, h:mm:ss a')}\n            </Typography>\n          </Box>\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Hidden smDown>\n            <Tooltip title=\"Reply\">\n              <IconButton>\n                <ReplyIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Reply all\">\n              <IconButton>\n                <ReplyAllIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Delete\">\n              <IconButton>\n                <DeleteIcon fontSize=\"small\" />\n              </IconButton>\n            </Tooltip>\n          </Hidden>\n          <Tooltip title=\"More options\">\n            <IconButton>\n              <MoreIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n      <Divider />\n      <Box flexGrow={1} py={6} px={3} bgcolor=\"background.dark\">\n        <Typography variant=\"h1\" color=\"textPrimary\">\n          {mail.subject}\n        </Typography>\n        <Box mt={2}>\n          <Markdown source={mail.message} className={classes.message} />\n        </Box>\n      </Box>\n      <Divider />\n      <MailReply />\n    </div>\n  );\n};\n\nexport default MailDetails;\n","import {\n  Avatar,\n  Box,\n  Checkbox,\n  colors,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { ChangeEvent, FC } from 'react';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\nimport { useSelector } from 'src/store';\nimport { Theme } from 'src/theme';\nimport { Mail } from 'src/types/mail';\nimport getInitials from 'src/utils/getInitials';\n\ninterface MailItemProps {\n  className?: string;\n  mail: Mail;\n  onDeselect?: () => void;\n  onSelect?: () => void;\n  selected: boolean;\n}\n\nconst getTo = (params: any, mailId: string): string => {\n  const { systemLabel, customLabel } = params;\n  const baseUrl = '/app/mail';\n\n  if (systemLabel) {\n    return `${baseUrl}/${systemLabel}/${mailId}`;\n  }\n\n  if (customLabel) {\n    return `${baseUrl}/label/${customLabel}/${mailId}`;\n  }\n\n  return baseUrl;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'center',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover\n    }\n  },\n  unread: {\n    position: 'relative',\n    '&:before': {\n      content: '\" \"',\n      height: '100%',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: 4,\n      backgroundColor: theme.palette.error.main\n    },\n    '& $name, & $subject': {\n      fontWeight: theme.typography.fontWeightBold\n    }\n  },\n  selected: {\n    backgroundColor: theme.palette.action.selected\n  },\n  filterActive: {\n    color: colors.amber[400]\n  },\n  content: {\n    cursor: 'pointer',\n    textDecoration: 'none'\n  },\n  details: {\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n      alignItems: 'center',\n      flexGrow: 1\n    }\n  },\n  name: {\n    [theme.breakpoints.up('md')]: {\n      minWidth: 180,\n      flexBasis: 180\n    }\n  },\n  subject: {\n    maxWidth: 400,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  },\n  message: {\n    maxWidth: 800,\n    flexGrow: 1,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    marginRight: 'auto'\n  },\n  label: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(12),\n    color: theme.palette.common.white,\n    paddingLeft: 4,\n    paddingRight: 4,\n    paddingTop: 2,\n    paddingBottom: 2,\n    borderRadius: 2,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  date: {\n    whiteSpace: 'nowrap'\n  }\n}));\n\nconst MailItem: FC<MailItemProps> = ({\n  className,\n  mail,\n  onDeselect,\n  onSelect,\n  selected,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const params = useParams();\n  const { labels } = useSelector(state => state.mail);\n\n  const handleCheckboxChange = (event: ChangeEvent<HTMLInputElement>): void =>\n    event.target.checked ? onSelect() : onDeselect();\n\n  const handleStarToggle = (): void => {\n    // dispatch action\n  };\n\n  const handleImportantToggle = (): void => {\n    // dispatch action\n  };\n\n  const to = getTo(params, mail.id);\n\n  return (\n    <div\n      className={clsx(\n        classes.root,\n        {\n          [classes.unread]: !mail.isUnread,\n          [classes.selected]: selected\n        },\n        className\n      )}\n      {...rest}\n    >\n      <Hidden smDown>\n        <Box mr={1} display=\"flex\" alignItems=\"center\">\n          <Checkbox checked={selected} onChange={handleCheckboxChange} />\n          <Tooltip title=\"Starred\">\n            <IconButton onClick={handleStarToggle}>\n              {mail.isStarred ? (\n                <StarIcon className={classes.filterActive} />\n              ) : (\n                <StarBorderIcon />\n              )}\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Important\">\n            <IconButton onClick={handleImportantToggle}>\n              {mail.isImportant ? (\n                <LabelImportantIcon className={classes.filterActive} />\n              ) : (\n                <LabelImportantOutlinedIcon />\n              )}\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Hidden>\n      <Box\n        minWidth=\"1px\"\n        display=\"flex\"\n        flexGrow={1}\n        component={RouterLink}\n        // @ts-ignore\n        to={to}\n        className={classes.content}\n      >\n        <Avatar src={mail.from.avatar}>{getInitials(mail.from.name)}</Avatar>\n        <Box minWidth=\"1px\" ml={1} className={classes.details}>\n          <Typography\n            variant=\"body2\"\n            color=\"textPrimary\"\n            className={classes.name}\n          >\n            {mail.from.name}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            className={classes.subject}\n          >\n            {mail.subject}\n          </Typography>\n          <Hidden smDown>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              className={classes.message}\n            >\n              <Box component=\"span\" ml={2}>\n                -\n              </Box>\n              {mail.message}\n            </Typography>\n            {mail.labelIds.length > 0 && (\n              <Box display=\"flex\" mx={2}>\n                {mail.labelIds.map((labelId: string) => {\n                  const label = labels.find(_label => _label.id === labelId);\n\n                  if (!label) return null;\n\n                  return (\n                    <span\n                      style={{ backgroundColor: label.color }}\n                      key={label.id}\n                      className={classes.label}\n                    >\n                      {label.name}\n                    </span>\n                  );\n                })}\n              </Box>\n            )}\n          </Hidden>\n          <Typography\n            className={classes.date}\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            {moment(mail.createdAt).format('DD MMM YYYY')}\n          </Typography>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nMailItem.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  mail: PropTypes.object.isRequired,\n  onDeselect: PropTypes.func,\n  onSelect: PropTypes.func,\n  selected: PropTypes.bool.isRequired\n};\n\nMailItem.defaultProps = {\n  onDeselect: () => {},\n  onSelect: () => {}\n};\n\nexport default MailItem;\n","import {\n  Box,\n  Checkbox,\n  Hidden,\n  IconButton,\n  Input,\n  makeStyles,\n  Paper,\n  SvgIcon,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { ChangeEvent, FC } from 'react';\nimport { Menu as MenuIcon, Search as SearchIcon } from 'react-feather';\nimport { openSidebar } from 'src/slices/mail';\nimport { useDispatch } from 'src/store';\nimport { Theme } from 'src/theme';\n\ninterface ToolbarProps {\n  className?: string;\n  mails: number;\n  onDeselectAll?: () => void;\n  onSelectAll?: () => void;\n  selectedMails: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(2),\n    height: 68,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchContainer: {\n    alignItems: 'center',\n    display: 'flex',\n    marginLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5)\n  },\n  searchInput: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1\n  }\n}));\n\nconst Toolbar: FC<ToolbarProps> = ({\n  className,\n  mails,\n  onDeselectAll,\n  onSelectAll,\n  selectedMails,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleOpenSidebar = (): void => {\n    dispatch(openSidebar());\n  };\n\n  const handleCheckboxChange = (event: ChangeEvent<HTMLInputElement>) =>\n    event.target.checked ? onSelectAll() : onDeselectAll();\n\n  const selectedAllMails = selectedMails === mails && mails > 0;\n  const selectedSomeMails = selectedMails > 0 && selectedMails < mails;\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Hidden mdUp>\n        <IconButton onClick={handleOpenSidebar}>\n          <SvgIcon fontSize=\"small\">\n            <MenuIcon />\n          </SvgIcon>\n        </IconButton>\n      </Hidden>\n      <Hidden smDown>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Checkbox\n            checked={selectedAllMails}\n            indeterminate={selectedSomeMails}\n            onChange={handleCheckboxChange}\n          />\n          <Typography variant=\"h6\" color=\"textPrimary\">\n            Select all\n          </Typography>\n        </Box>\n        <Box flexGrow={1} />\n        <Paper className={classes.searchContainer} variant=\"outlined\">\n          <SvgIcon color=\"action\" fontSize=\"small\">\n            <SearchIcon />\n          </SvgIcon>\n          <Input\n            className={classes.searchInput}\n            disableUnderline\n            placeholder=\"Search mail\"\n          />\n        </Paper>\n        <Tooltip title=\"Refresh\">\n          <IconButton>\n            <RefreshIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"More options\">\n          <IconButton>\n            <MoreIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Tooltip title=\"Next page\">\n            <IconButton>\n              <KeyboardArrowLeftIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n          {mails > 0 && (\n            <>\n              <Typography noWrap variant=\"body2\" color=\"textSecondary\">\n                1 - {mails} of {mails}\n              </Typography>\n              <Tooltip title=\"Previous page\">\n                <IconButton>\n                  <KeyboardArrowRightIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            </>\n          )}\n        </Box>\n      </Hidden>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n  mails: PropTypes.number.isRequired,\n  onDeselectAll: PropTypes.func,\n  onSelectAll: PropTypes.func,\n  selectedMails: PropTypes.number.isRequired\n};\n\nToolbar.defaultProps = {\n  onDeselectAll: () => {},\n  onSelectAll: () => {}\n};\n\nexport default Toolbar;\n","import { Divider, makeStyles } from '@material-ui/core';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMails } from 'src/slices/mail';\nimport { useDispatch, useSelector } from 'src/store';\nimport { Theme } from 'src/theme';\nimport MailItem from './MailItem';\nimport Toolbar from './Toolbar';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.dark\n  }\n}));\n\nconst MailList: FC = () => {\n  const classes = useStyles();\n  const params = useParams();\n  const dispatch = useDispatch();\n  const { mails } = useSelector(state => state.mail);\n  const [selectedMails, setSelectedMails] = useState<string[]>([]);\n\n  const handleSelectAllMails = (): void => {\n    setSelectedMails(mails.allIds.map(mailId => mailId));\n  };\n\n  const handleDeselectAllMails = (): void => {\n    setSelectedMails([]);\n  };\n\n  const handleSelectOneMail = (mailId: string): void => {\n    setSelectedMails(prevSelectedMails => {\n      if (!prevSelectedMails.includes(mailId)) {\n        return [...prevSelectedMails, mailId];\n      }\n\n      return prevSelectedMails;\n    });\n  };\n\n  const handleDeselectOneMail = (mailId: string): void => {\n    setSelectedMails(prevSelectedMails =>\n      prevSelectedMails.filter(id => id !== mailId)\n    );\n  };\n\n  useEffect(() => {\n    dispatch(getMails(params));\n  }, [dispatch, params]);\n\n  return (\n    <div className={classes.root}>\n      <Toolbar\n        onDeselectAll={handleDeselectAllMails}\n        onSelectAll={handleSelectAllMails}\n        selectedMails={selectedMails.length}\n        mails={mails.allIds.length}\n      />\n      <Divider />\n      {mails.allIds.map((mailId: string) => (\n        <MailItem\n          mail={mails.byId[mailId]}\n          key={mailId}\n          onDeselect={() => handleDeselectOneMail(mailId)}\n          onSelect={() => handleSelectOneMail(mailId)}\n          selected={selectedMails.includes(mailId)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default MailList;\n","import {\n  ButtonBase,\n  ListItem,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport LabelIcon from '@material-ui/icons/Label';\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\nimport MailIcon from '@material-ui/icons/Mail';\nimport ReportIcon from '@material-ui/icons/Report';\nimport SendIcon from '@material-ui/icons/Send';\nimport StarIcon from '@material-ui/icons/Star';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport { Theme } from 'src/theme';\nimport { Label } from 'src/types/mail';\n\ninterface LabelItemProps {\n  label: Label;\n}\n\nconst systemLabelIcons = {\n  all: MailIcon,\n  inbox: InboxIcon,\n  trash: DeleteIcon,\n  drafts: DraftsIcon,\n  spam: ReportIcon,\n  sent: SendIcon,\n  starred: StarIcon,\n  important: LabelImportantIcon\n};\n\nconst getIcon = (label: any) => {\n  if (label.type === 'system_label') {\n    return systemLabelIcons[label.id];\n  }\n\n  return LabelIcon;\n};\n\nconst getTo = (label: any): string => {\n  const baseUrl = '/app/mail';\n\n  if (label.type === 'system_label') {\n    return `${baseUrl}/${label.id}`;\n  }\n\n  if (label.type === 'custom_label') {\n    return `${baseUrl}/label/${label.name}`;\n  }\n\n  return baseUrl;\n};\n\nconst getColor = (label: any): string => {\n  if (label.type === 'custom_label') {\n    return label.color;\n  }\n\n  return null;\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: 0\n  },\n  content: {\n    flexGrow: 1,\n    height: 36,\n    color: theme.palette.text.secondary,\n    borderTopRightRadius: 18,\n    borderBottomRightRadius: 18,\n    paddingRight: 18,\n    paddingLeft: 32,\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover\n    }\n  },\n  active: {\n    fontWeight: theme.typography.fontWeightMedium,\n    backgroundColor: theme.palette.action.selected\n  },\n  label: {\n    fontWeight: 'inherit',\n    color: 'inherit'\n  },\n  labelRoot: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1, 0)\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  text: {\n    fontWeight: 'inherit',\n    flexGrow: 1\n  }\n}));\n\nconst LabelItem: FC<LabelItemProps> = ({ label, ...rest }) => {\n  const classes = useStyles();\n\n  const Icon = getIcon(label);\n  const to = getTo(label);\n  const color = getColor(label);\n  const displayUnreadCount = Boolean(\n    label.unreadCount && label.unreadCount > 0\n  );\n\n  return (\n    <ListItem className={classes.root} {...rest}>\n      <ButtonBase\n        activeClassName={classes.active}\n        component={RouterLink}\n        to={to}\n        className={classes.content}\n      >\n        <Icon className={classes.icon} color=\"inherit\" style={{ color }} />\n        <Typography className={classes.text} variant=\"body2\">\n          {label.name}\n        </Typography>\n        {displayUnreadCount && (\n          <Typography color=\"inherit\" variant=\"caption\">\n            {label.unreadCount}\n          </Typography>\n        )}\n      </ButtonBase>\n    </ListItem>\n  );\n};\n\nLabelItem.propTypes = {\n  // @ts-ignore\n  label: PropTypes.object.isRequired\n};\n\nexport default LabelItem;\n","import {\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  makeStyles\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React, { FC, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { closeSidebar, openCompose } from 'src/slices/mail';\nimport { useDispatch, useSelector } from 'src/store';\nimport LabelItem from './LabelItem';\n\ninterface SidebarProps {\n  containerRef: any;\n}\n\nconst useStyles = makeStyles(() => ({\n  drawerDesktopRoot: {\n    width: 280,\n    flexShrink: 0\n  },\n  drawerDesktopPaper: {\n    position: 'relative'\n  },\n  drawerMobilePaper: {\n    position: 'relative',\n    width: 280\n  },\n  drawerMobileBackdrop: {\n    position: 'absolute'\n  }\n}));\n\nconst Sidebar: FC<SidebarProps> = ({ containerRef }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { labels, isSidebarOpen } = useSelector(state => state.mail);\n\n  const handleCloseSidebar = (): void => {\n    dispatch(closeSidebar());\n  };\n\n  const handleComposeClick = (): void => {\n    dispatch(openCompose());\n  };\n\n  useEffect(() => {\n    if (isSidebarOpen) {\n      dispatch(closeSidebar());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <div>\n      <Box px={3} py={2}>\n        <Button\n          color=\"secondary\"\n          fullWidth\n          variant=\"contained\"\n          onClick={handleComposeClick}\n        >\n          Compose\n        </Button>\n      </Box>\n      <Divider />\n      <Box py={2} pr={2}>\n        <List>\n          {labels.map(label => (\n            <LabelItem key={label.id} label={label} />\n          ))}\n        </List>\n      </Box>\n    </div>\n  );\n\n  return (\n    <>\n      <Hidden smDown>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            root: classes.drawerDesktopRoot,\n            paper: classes.drawerDesktopPaper\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdUp>\n        <Drawer\n          variant=\"temporary\"\n          open={isSidebarOpen}\n          onClose={handleCloseSidebar}\n          classes={{\n            paper: classes.drawerMobilePaper\n          }}\n          style={{ position: 'absolute', zIndex: 1200 }}\n          BackdropProps={{ classes: { root: classes.drawerMobileBackdrop } }}\n          ModalProps={{ container: () => containerRef.current }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nSidebar.propTypes = {\n  containerRef: PropTypes.any.isRequired\n};\n\nexport default Sidebar;\n","import { makeStyles } from '@material-ui/core';\nimport React, { FC, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Page from 'src/components/Page';\nimport { getLabels } from 'src/slices/mail';\nimport { useDispatch } from 'src/store';\nimport Compose from './Compose';\nimport MailDetails from './MailDetails';\nimport MailList from './MailList';\nimport Sidebar from './Sidebar';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    overflow: 'hidden',\n    position: 'relative'\n  }\n}));\n\nconst MailView: FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { mailId } = useParams();\n  const pageRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    dispatch(getLabels());\n  }, [dispatch]);\n\n  return (\n    <Page className={classes.root} title=\"Mail\" ref={pageRef}>\n      <Sidebar containerRef={pageRef} />\n      {mailId ? <MailDetails /> : <MailList />}\n      <Compose />\n    </Page>\n  );\n};\n\nexport default MailView;\n"],"sourceRoot":""}