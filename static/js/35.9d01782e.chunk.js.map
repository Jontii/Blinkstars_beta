{"version":3,"sources":["hooks/useIsMountedRef.ts","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","views/customer/CustomerEditView/CustomerEditForm.tsx","views/customer/CustomerEditView/Header.tsx","views/customer/CustomerEditView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","createSvgIcon","React","withStyles","theme","root","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","width","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","className","focusRipple","MoreHorizIcon","Breadcrumbs","ref","children","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","Typography","clsx","ol","items","reduce","acc","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","Card","_props$raised","raised","Paper","elevation","overflow","CardContent","paddingBottom","useStyles","makeStyles","CustomerEditForm","customer","rest","enqueueSnackbar","useSnackbar","initialValues","address1","address2","country","email","hasDiscountedPrices","isVerified","phone","state","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","wait","success","variant","action","Button","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Grid","container","item","md","xs","TextField","Boolean","fullWidth","helperText","label","onBlur","onChange","Switch","checked","edge","Box","mt","type","disabled","Header","fontSize","aria-label","Link","to","RouterLink","background","dark","minHeight","paddingTop","CustomerEditView","isMountedRef","useState","setCustomer","getCustomer","useCallback","axios","get","response","data","Page","title","Container","maxWidth"],"mappings":"gKAAA,WAeeA,IAbS,WACtB,IAAMC,EAAYC,kBAAO,GASzB,OAPAC,qBACE,kBAAM,WACJF,EAAUG,SAAU,KAEtB,IAGKH,I,kCCVT,IAAII,EAAyBC,EAAQ,KAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAASP,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,MAElBK,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,mDACD,gBAEJN,EAAQE,QAAUE,G,yHCXHG,cAA4BC,gBAAoB,OAAQ,CACrEF,EAAG,wJACD,a,SCiDWG,mBAhDF,SAAgBC,GAC3B,MAAO,CACLC,KAAM,CACJC,QAAS,OACTC,WAAYH,EAAMI,QAAQ,IAC1BC,YAAaL,EAAMI,QAAQ,IAC3BE,gBAAiBN,EAAMO,QAAQC,KAAK,KACpCC,MAAOT,EAAMO,QAAQC,KAAK,KAC1BE,aAAc,EACdC,OAAQ,UACR,mBAAoB,CAClBL,gBAAiBN,EAAMO,QAAQC,KAAK,MAEtC,WAAY,CACVI,UAAWZ,EAAMa,QAAQ,GACzBP,gBAAiBQ,YAAUd,EAAMO,QAAQC,KAAK,KAAM,OAGxDO,KAAM,CACJC,MAAO,GACPC,OAAQ,OA4BoB,CAChCC,KAAM,8BADOnB,EAnBf,SAA6BoB,GAC3B,IAAIC,EAAUD,EAAMC,QAChBC,EAAQC,YAAyBH,EAAO,CAAC,YAE7C,OAAoBrB,gBAAoByB,IAAYC,YAAS,CAC3DC,UAAW,KACXC,UAAWN,EAAQnB,KACnB0B,aAAa,GACZN,GAAqBvB,gBAAoB8B,EAAe,CACzDF,UAAWN,EAAQL,WCKvB,IAAIc,EAA2B/B,cAAiB,SAAqBqB,EAAOW,GAC1E,IAAIC,EAAWZ,EAAMY,SACjBX,EAAUD,EAAMC,QAChBM,EAAYP,EAAMO,UAClBM,EAAmBb,EAAMM,UACzBQ,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAoBf,EAAMgB,WAC1BA,OAAmC,IAAtBD,EAA+B,YAAcA,EAC1DE,EAAwBjB,EAAMkB,mBAC9BA,OAA+C,IAA1BD,EAAmC,EAAIA,EAC5DE,EAAwBnB,EAAMoB,oBAC9BA,OAAgD,IAA1BD,EAAmC,EAAIA,EAC7DE,EAAkBrB,EAAMsB,SACxBA,OAA+B,IAApBD,EAA6B,EAAIA,EAC5CE,EAAmBvB,EAAMwB,UACzBA,OAAiC,IAArBD,EAA8B,IAAMA,EAChDrB,EAAQC,YAAyBH,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,aAAc,qBAAsB,sBAAuB,WAAY,cAEjKyB,EAAkB9C,YAAe,GACjC+C,EAAWD,EAAgB,GAC3BE,EAAcF,EAAgB,GA+B9BG,EAAWjD,WAAekD,QAAQjB,GAAUkB,QAAO,SAAUC,GAO/D,OAAoBpD,iBAAqBoD,MACxCC,KAAI,SAAUD,EAAOE,GACtB,OAAoBtD,gBAAoB,KAAM,CAC5C4B,UAAWN,EAAQiC,GACnBC,IAAK,SAASC,OAAOH,IACpBF,MAEL,OAAoBpD,gBAAoB0D,IAAYhC,YAAS,CAC3DM,IAAKA,EACLL,UAAWQ,EACXxB,MAAO,gBACPiB,UAAW+B,YAAKrC,EAAQnB,KAAMyB,IAC7BL,GAAqBvB,gBAAoB,KAAM,CAChD4B,UAAWN,EAAQsC,IAvFvB,SAA0BC,EAAOjC,EAAWiB,GAC1C,OAAOgB,EAAMC,QAAO,SAAUC,EAAK5E,EAASmE,GAW1C,OAVIA,EAAQO,EAAMG,OAAS,EACzBD,EAAMA,EAAIN,OAAOtE,EAAsBa,gBAAoB,KAAM,CAC/D,eAAe,EACfwD,IAAK,aAAaC,OAAOH,GACzB1B,UAAWA,GACViB,IAEHkB,EAAIE,KAAK9E,GAGJ4E,IACN,IA2EAG,CAAiBnB,GAAYJ,GAAYM,EAASe,QAAUrB,EAAWM,EAlD1C,SAAmCA,GAcjE,OAAIR,EAAsBF,GAAsBU,EAASe,OAKhDf,EAGF,GAAGQ,OAAOU,YAAmBlB,EAASmB,MAAM,EAAG3B,IAAuB,CAAczC,gBAAoBqE,EAAqB,CAClI,aAAchC,EACdmB,IAAK,WACLc,QAxBsB,SAA2BC,GACjDvB,GAAY,GAGZ,IAAIwB,EAAYD,EAAME,cAAcC,WAAWC,cAAc,6BAEzDH,GACFA,EAAUI,YAkBTT,YAAmBlB,EAASmB,MAAMnB,EAASe,OAASzB,EAAoBU,EAASe,UAwBHa,CAA0B5B,GAAW3B,EAAQuB,UAAWA,QA6DhI5C,gBA/KK,CAElBE,KAAM,GAGNyD,GAAI,CACFxD,QAAS,OACT0E,SAAU,OACVC,WAAY,SACZC,QAAS,EACTC,OAAQ,EACRC,UAAW,QAIb3B,GAAI,GAGJV,UAAW,CACTzC,QAAS,OACT+E,WAAY,OACZ9E,WAAY,EACZE,YAAa,IAyJiB,CAChCa,KAAM,kBADOnB,CAEZ8B,I,kCC3LH,uDAaIqD,EAAoBpF,cAAiB,SAAcqB,EAAOW,GAC5D,IAAIV,EAAUD,EAAMC,QAChBM,EAAYP,EAAMO,UAClByD,EAAgBhE,EAAMiE,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5C9D,EAAQC,YAAyBH,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBrB,gBAAoBuF,IAAO7D,YAAS,CACtDE,UAAW+B,YAAKrC,EAAQnB,KAAMyB,GAC9B4D,UAAWF,EAAS,EAAI,EACxBtD,IAAKA,GACJT,OA6BUtB,gBA9CK,CAElBE,KAAM,CACJsF,SAAU,WA2CoB,CAChCrE,KAAM,WADOnB,CAEZmF,I,kCCvDH,8CAeIM,EAA2B1F,cAAiB,SAAqBqB,EAAOW,GAC1E,IAAIV,EAAUD,EAAMC,QAChBM,EAAYP,EAAMO,UAClBM,EAAmBb,EAAMM,UACzBQ,OAAiC,IAArBD,EAA8B,MAAQA,EAClDX,EAAQC,YAAyBH,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBrB,gBAAoBmC,EAAWT,YAAS,CAC1DE,UAAW+B,YAAKrC,EAAQnB,KAAMyB,GAC9BI,IAAKA,GACJT,OAgCUtB,gBAnDK,CAElBE,KAAM,CACJ6E,QAAS,GACT,eAAgB,CACdW,cAAe,MA8Ca,CAChCvE,KAAM,kBADOnB,CAEZyF,I,gRClCGE,EAAYC,aAAW,iBAAO,CAClC1F,KAAM,OAsOO2F,EAnOqC,SAAC,GAI9C,IAHLlE,EAGI,EAHJA,UACAmE,EAEI,EAFJA,SACGC,EACC,wCACE1E,EAAUsE,IACRK,EAAoBC,cAApBD,gBAER,OACE,kBAAC,IAAD,CACEE,cAAe,CACbC,SAAUL,EAASK,UAAY,GAC/BC,SAAUN,EAASM,UAAY,GAC/BC,QAASP,EAASO,SAAW,GAC7BC,MAAOR,EAASQ,OAAS,GACzBC,oBAAqBT,EAASS,sBAAuB,EACrDC,WAAYV,EAASU,aAAc,EACnCrF,KAAM2E,EAAS3E,MAAQ,GACvBsF,MAAOX,EAASW,OAAS,GACzBC,MAAOZ,EAASY,OAAS,GACzBC,OAAQ,MAEVC,iBAAkBC,MAAaC,MAAM,CACnCX,SAAUU,MAAaE,IAAI,KAC3BX,SAAUS,MAAaE,IAAI,KAC3BV,QAASQ,MAAaE,IAAI,KAC1BT,MAAOO,MACJP,MAAM,yBACNS,IAAI,KACJC,SAAS,qBACZT,oBAAqBM,MACrBL,WAAYK,MACZ1F,KAAM0F,MAAaE,IAAI,KAAKC,SAAS,oBACrCP,MAAOI,MAAaE,IAAI,IACxBL,MAAOG,MAAaE,IAAI,OAE1BE,SAAQ,uCAAE,WACRC,EADQ,wBAAAC,EAAA,6DAENC,EAFM,EAENA,UAAWC,EAFL,EAEKA,UAAWC,EAFhB,EAEgBA,UAAWC,EAF3B,EAE2BA,cAF3B,kBAMAC,YAAK,KANL,OAONJ,IACAE,EAAU,CAAEG,SAAS,IACrBF,GAAc,GACdvB,EAAgB,mBAAoB,CAClC0B,QAAS,UACTC,OAAQ,kBAACC,EAAA,EAAD,kBAZJ,kDAeNC,QAAQC,MAAR,MACAR,EAAU,CAAEG,SAAS,IACrBJ,EAAU,CAAEV,OAAQ,KAAIoB,UACxBR,GAAc,GAlBR,0DAAF,0DAsBP,gBACCS,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAnB,EAPD,EAOCA,OAPD,OASC,wCACEvF,UAAW+B,YAAKrC,EAAQnB,KAAMyB,GAC9BsF,SAAUkB,GACNpC,GAEJ,kBAACZ,EAAA,EAAD,KACE,kBAACM,EAAA,EAAD,KACE,kBAAC6C,EAAA,EAAD,CAAMC,WAAS,EAAClI,QAAS,GACvB,kBAACiI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEb,MAAOc,QAAQP,EAAQlH,MAAQ6G,EAAO7G,MACtC0H,WAAS,EACTC,WAAYT,EAAQlH,MAAQ6G,EAAO7G,KACnC4H,MAAM,YACN5H,KAAK,OACL6H,OAAQf,EACRgB,SAAUf,EACVlB,UAAQ,EACRxH,MAAO0H,EAAO/F,KACduG,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEb,MAAOc,QAAQP,EAAQ/B,OAAS0B,EAAO1B,OACvCuC,WAAS,EACTC,WAAYT,EAAQ/B,OAAS0B,EAAO1B,MACpCyC,MAAM,gBACN5H,KAAK,QACL6H,OAAQf,EACRgB,SAAUf,EACVlB,UAAQ,EACRxH,MAAO0H,EAAOZ,MACdoB,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEb,MAAOc,QAAQP,EAAQhC,SAAW2B,EAAO3B,SACzCwC,WAAS,EACTC,WAAYT,EAAQhC,SAAW2B,EAAO3B,QACtC0C,MAAM,UACN5H,KAAK,UACL6H,OAAQf,EACRgB,SAAUf,EACV1I,MAAO0H,EAAOb,QACdqB,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEb,MAAOc,QAAQP,EAAQ3B,OAASsB,EAAOtB,OACvCmC,WAAS,EACTC,WAAYT,EAAQ3B,OAASsB,EAAOtB,MACpCqC,MAAM,eACN5H,KAAK,QACL6H,OAAQf,EACRgB,SAAUf,EACV1I,MAAO0H,EAAOR,MACdgB,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEb,MAAOc,QAAQP,EAAQlC,UAAY6B,EAAO7B,UAC1C0C,WAAS,EACTC,WAAYT,EAAQlC,UAAY6B,EAAO7B,SACvC4C,MAAM,YACN5H,KAAK,WACL6H,OAAQf,EACRgB,SAAUf,EACV1I,MAAO0H,EAAOf,SACduB,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEb,MAAOc,QAAQP,EAAQjC,UAAY4B,EAAO5B,UAC1CyC,WAAS,EACTC,WAAYT,EAAQjC,UAAY4B,EAAO5B,SACvC2C,MAAM,YACN5H,KAAK,WACL6H,OAAQf,EACRgB,SAAUf,EACV1I,MAAO0H,EAAOd,SACdsB,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEb,MAAOc,QAAQP,EAAQ5B,OAASuB,EAAOvB,OACvCoC,WAAS,EACTC,WAAYT,EAAQ5B,OAASuB,EAAOvB,MACpCsC,MAAM,eACN5H,KAAK,QACL6H,OAAQf,EACRgB,SAAUf,EACV1I,MAAO0H,EAAOT,MACdiB,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CAAME,MAAI,IACV,kBAACF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACjF,EAAA,EAAD,CAAYiE,QAAQ,KAAKhH,MAAM,eAA/B,kBAGA,kBAAC+C,EAAA,EAAD,CAAYiE,QAAQ,QAAQhH,MAAM,iBAAlC,wEAIA,kBAACwI,EAAA,EAAD,CACEC,QAASjC,EAAOV,WAChB9F,MAAM,YACN0I,KAAK,QACLjI,KAAK,aACL8H,SAAUf,EACV1I,MAAO0H,EAAOV,cAGlB,kBAAC8B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACjF,EAAA,EAAD,CAAYiE,QAAQ,KAAKhH,MAAM,eAA/B,qBAGA,kBAAC+C,EAAA,EAAD,CAAYiE,QAAQ,QAAQhH,MAAM,iBAAlC,8DAGA,kBAACwI,EAAA,EAAD,CACEC,QAASjC,EAAOX,oBAChB7F,MAAM,YACN0I,KAAK,QACLjI,KAAK,sBACL8H,SAAUf,EACV1I,MAAO0H,EAAOX,wBAIpB,kBAAC8C,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC1B,EAAA,EAAD,CACEF,QAAQ,YACRhH,MAAM,YACN6I,KAAK,SACLC,SAAUpB,GAJZ,2B,+CC9NVzC,EAAYC,aAAW,iBAAO,CAClC1F,KAAM,OAsCOuJ,EAnCiB,SAAC,GAA4B,IAA1B9H,EAAyB,EAAzBA,UAAcoE,EAAW,6BACpD1E,EAAUsE,IAEhB,OACE,uCAAKhE,UAAW+B,YAAKrC,EAAQnB,KAAMyB,IAAgBoE,GACjD,kBAACjE,EAAA,EAAD,CACEc,UAAW,kBAAC,IAAD,CAAkB8G,SAAS,UACtCC,aAAW,cAEX,kBAACC,EAAA,EAAD,CAAMlC,QAAQ,QAAQhH,MAAM,UAAUmJ,GAAG,OAAOnI,UAAWoI,KAA3D,aAGA,kBAACF,EAAA,EAAD,CACElC,QAAQ,QACRhH,MAAM,UACNmJ,GAAG,kBACHnI,UAAWoI,KAJb,cAQA,kBAACrG,EAAA,EAAD,CAAYiE,QAAQ,QAAQhH,MAAM,eAAlC,cAIF,kBAAC+C,EAAA,EAAD,CAAYiE,QAAQ,KAAKhH,MAAM,eAA/B,mBC7BAiF,EAAYC,aAAW,SAAC3F,GAAD,MAAmB,CAC9CC,KAAM,CACJK,gBAAiBN,EAAMO,QAAQuJ,WAAWC,KAC1CC,UAAW,OACXC,WAAYjK,EAAMI,QAAQ,GAC1BqF,cAAezF,EAAMI,QAAQ,QA6ClB8J,UAzCc,WAC3B,IAAM9I,EAAUsE,IACVyE,EAAetL,cAFY,EAGDuL,mBAA0B,MAHzB,mBAG1BvE,EAH0B,KAGhBwE,EAHgB,KAK3BC,EAAcC,sBAAW,sBAAC,4BAAArD,EAAA,+EAELsD,IAAMC,IAC3B,oBAH0B,OAEtBC,EAFsB,OAMxBP,EAAalL,SACfoL,EAAYK,EAASC,KAAK9E,UAPA,gDAU5B+B,QAAQC,MAAR,MAV4B,yDAY7B,CAACsC,IAMJ,OAJAnL,qBAAU,WACRsL,MACC,CAACA,IAECzE,EAKH,kBAAC+E,EAAA,EAAD,CAAMlJ,UAAWN,EAAQnB,KAAM4K,MAAM,iBACnC,kBAACC,EAAA,EAAD,CAAWC,UAAU,GACnB,kBAAC,EAAD,OAEF,kBAAC3B,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACyB,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,EAAD,CAAkBlF,SAAUA,OAV3B","file":"static/js/35.9d01782e.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  Switch,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Customer } from 'src/types/customer';\nimport wait from 'src/utils/wait';\nimport * as Yup from 'yup';\n\ninterface CustomerEditFormProps {\n  className?: string;\n  customer: Customer;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst CustomerEditForm: FC<CustomerEditFormProps> = ({\n  className,\n  customer,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        address1: customer.address1 || '',\n        address2: customer.address2 || '',\n        country: customer.country || '',\n        email: customer.email || '',\n        hasDiscountedPrices: customer.hasDiscountedPrices || false,\n        isVerified: customer.isVerified || false,\n        name: customer.name || '',\n        phone: customer.phone || '',\n        state: customer.state || '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        address1: Yup.string().max(255),\n        address2: Yup.string().max(255),\n        country: Yup.string().max(255),\n        email: Yup.string()\n          .email('Must be a valid email')\n          .max(255)\n          .required('Email is required'),\n        hasDiscountedPrices: Yup.bool(),\n        isVerified: Yup.bool(),\n        name: Yup.string().max(255).required('Name is required'),\n        phone: Yup.string().max(15),\n        state: Yup.string().max(255)\n      })}\n      onSubmit={async (\n        values,\n        { resetForm, setErrors, setStatus, setSubmitting }\n      ) => {\n        try {\n          // NOTE: Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Customer updated', {\n            variant: 'success',\n            action: <Button>See all</Button>\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <Card>\n            <CardContent>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Full name\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.country && errors.country)}\n                    fullWidth\n                    helperText={touched.country && errors.country}\n                    label=\"Country\"\n                    name=\"country\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.country}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.state && errors.state)}\n                    fullWidth\n                    helperText={touched.state && errors.state}\n                    label=\"State/Region\"\n                    name=\"state\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.state}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.address1 && errors.address1)}\n                    fullWidth\n                    helperText={touched.address1 && errors.address1}\n                    label=\"Address 1\"\n                    name=\"address1\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address1}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.address2 && errors.address2)}\n                    fullWidth\n                    helperText={touched.address2 && errors.address2}\n                    label=\"Address 2\"\n                    name=\"address2\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address2}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Phone number\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item />\n                <Grid item md={6} xs={12}>\n                  <Typography variant=\"h5\" color=\"textPrimary\">\n                    Email Verified\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Disabling this will automatically send the user a\n                    verification email\n                  </Typography>\n                  <Switch\n                    checked={values.isVerified}\n                    color=\"secondary\"\n                    edge=\"start\"\n                    name=\"isVerified\"\n                    onChange={handleChange}\n                    value={values.isVerified}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <Typography variant=\"h5\" color=\"textPrimary\">\n                    Discounted Prices\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    This will give the user discounted prices for all products\n                  </Typography>\n                  <Switch\n                    checked={values.hasDiscountedPrices}\n                    color=\"secondary\"\n                    edge=\"start\"\n                    name=\"hasDiscountedPrices\"\n                    onChange={handleChange}\n                    value={values.hasDiscountedPrices}\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Update Customer\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nCustomerEditForm.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerEditForm;\n","import { Breadcrumbs, Link, makeStyles, Typography } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link variant=\"body1\" color=\"inherit\" to=\"/app\" component={RouterLink}>\n          Dashboard\n        </Link>\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/app/management\"\n          component={RouterLink}\n        >\n          Management\n        </Link>\n        <Typography variant=\"body1\" color=\"textPrimary\">\n          Customers\n        </Typography>\n      </Breadcrumbs>\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Edit Customer\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import { Box, Container, makeStyles } from '@material-ui/core';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport { Customer } from 'src/types/customer';\nimport axios from 'src/utils/axios';\nimport CustomerEditForm from './CustomerEditForm';\nimport Header from './Header';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst CustomerEditView: FC = () => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [customer, setCustomer] = useState<Customer | null>(null);\n\n  const getCustomer = useCallback(async () => {\n    try {\n      const response = await axios.get<{ customer: Customer }>(\n        '/api/customers/1'\n      );\n\n      if (isMountedRef.current) {\n        setCustomer(response.data.customer);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getCustomer();\n  }, [getCustomer]);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Customer Edit\">\n      <Container maxWidth={false}>\n        <Header />\n      </Container>\n      <Box mt={3}>\n        <Container maxWidth=\"lg\">\n          <CustomerEditForm customer={customer} />\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default CustomerEditView;\n"],"sourceRoot":""}