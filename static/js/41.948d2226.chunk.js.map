{"version":3,"sources":["hooks/useIsMountedRef.ts","components/PostAdd.tsx","components/PostCard/Comment.tsx","components/PostCard/CommentAdd.tsx","components/PostCard/Reactions.tsx","components/PostCard/index.tsx","views/social/FeedView/Header.tsx","views/social/FeedView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","inputContainer","flexGrow","paddingBottom","spacing","paddingLeft","paddingRight","paddingTop","divider","height","width","fileInput","display","PostAdd","className","rest","classes","fileInputRef","useState","value","setValue","user","useAuth","handleAttach","click","clsx","alignItems","variant","disableUnderline","fullWidth","onChange","event","persist","target","placeholder","name","title","color","length","edge","onClick","ref","type","marginBottom","bubble","borderRadius","shape","Comment","comment","Avatar","alt","component","RouterLink","src","author","avatar","to","Box","p","ml","bgcolor","mb","Link","Typography","moment","createdAt","fromNow","message","marginLeft","CommentAdd","Paper","Input","Tooltip","IconButton","Divider","likedButton","colors","red","Reactions","post","isLiked","setLiked","likes","setLikes","prevLikes","fontSize","date","media","backgroundPosition","PostCard","undefined","selectedImage","setSelectedImage","Card","CardHeader","disableTypography","subheader","px","pb","mt","CardActionArea","CardMedia","image","my","comments","map","key","id","large","onClose","Header","backgroundColor","palette","background","dark","minHeight","SocialFeedView","isMountedRef","posts","setPosts","getPosts","useCallback","a","axios","get","response","data","console","error","Page","Container","maxWidth"],"mappings":"4GAAA,WAeeA,IAbS,WACtB,IAAMC,EAAYC,kBAAO,GASzB,OAPAC,qBACE,kBAAM,WACJF,EAAUG,SAAU,KAEtB,IAGKH,I,oOCYHI,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,GACNC,eAAgB,CACdC,SAAU,EACVC,cAAeJ,EAAMK,QAAQ,IAC7BC,YAAaN,EAAMK,QAAQ,GAC3BE,aAAcP,EAAMK,QAAQ,GAC5BG,WAAYR,EAAMK,QAAQ,KAE5BI,QAAS,CACPC,OAAQ,GACRC,MAAO,GAETC,UAAW,CACTC,QAAS,YA2DEC,IAvDmB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAcC,EAAW,6BACtDC,EAAUnB,IACVoB,EAAevB,iBAAgC,MAFO,EAGlCwB,mBAAiB,IAHiB,mBAGrDC,EAHqD,KAG9CC,EAH8C,KAIpDC,EAASC,cAATD,KAOFE,EAAe,WAChBN,GAAgBA,EAAarB,SAC9BqB,EAAarB,QAAQ4B,SAGzB,OACE,kBAAC,IAAD,eAAMV,UAAWW,YAAKT,EAAQhB,KAAMc,IAAgBC,GAClD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKH,QAAQ,OAAOc,WAAW,UAC7B,kBAAC,IAAD,CAAOZ,UAAWE,EAAQf,eAAgB0B,QAAQ,YAChD,kBAAC,IAAD,CACEC,kBAAgB,EAChBC,WAAS,EACTC,SAlBS,SAACC,GACpBA,EAAMC,UACNZ,EAASW,EAAME,OAAOd,QAiBZe,YAAW,sCAA0Bb,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAMc,SAG/C,kBAAC,IAAD,CAASC,MAAM,QACb,kBAAC,IAAD,CAAYC,MAAOlB,EAAMmB,OAAS,EAAI,UAAY,WAChD,kBAAC,IAAD,QAGJ,kBAAC,IAAD,CAASxB,UAAWE,EAAQR,UAC5B,kBAAC,IAAD,CAAS4B,MAAM,gBACb,kBAAC,IAAD,CAAYG,KAAK,MAAMC,QAASjB,GAC9B,kBAAC,IAAD,QAGJ,kBAAC,IAAD,CAASa,MAAM,eACb,kBAAC,IAAD,CAAYG,KAAK,MAAMC,QAASjB,GAC9B,kBAAC,IAAD,QAGJ,2BAAOT,UAAWE,EAAQL,UAAW8B,IAAKxB,EAAcyB,KAAK,c,gOCxEjE7C,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJY,QAAS,OACT+B,aAAc5C,EAAMK,QAAQ,IAE9BwC,OAAQ,CACNC,aAAc9C,EAAM+C,MAAMD,kBA6CfE,EAzCmB,SAAC,GAAqC,IAAnCjC,EAAkC,EAAlCA,UAAWkC,EAAuB,EAAvBA,QAAYjC,EAAW,uCAC/DC,EAAUnB,IAEhB,OACE,uCAAKiB,UAAWW,YAAKT,EAAQhB,KAAMc,IAAgBC,GACjD,kBAACkC,EAAA,EAAD,CACEC,IAAI,SACJC,UAAWC,IACXC,IAAKL,EAAQM,OAAOC,OACpBC,GAAG,MAEL,kBAACC,EAAA,EAAD,CACEvD,SAAU,EACVwD,EAAG,EACHC,GAAI,EACJC,QAAQ,kBACR9C,UAAWE,EAAQ4B,QAEnB,kBAACa,EAAA,EAAD,CAAK7C,QAAQ,OAAOc,WAAW,SAASmC,GAAI,GAC1C,kBAACC,EAAA,EAAD,CAAMzB,MAAM,cAAcc,UAAWC,IAAYI,GAAG,IAAI7B,QAAQ,MAC7DqB,EAAQM,OAAOnB,MAElB,kBAACsB,EAAA,EAAD,CAAKvD,SAAU,IACf,kBAAC6D,EAAA,EAAD,CAAY1B,MAAM,gBAAgBV,QAAQ,WACvCqC,IAAOhB,EAAQiB,WAAWC,YAG/B,kBAACH,EAAA,EAAD,CAAYpC,QAAQ,QAAQU,MAAM,eAC/BW,EAAQmB,Y,wGC9BbtE,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJ0B,WAAY,SACZd,QAAS,QAEXX,eAAgB,CACdC,SAAU,EACVkE,WAAYrE,EAAMK,QAAQ,GAC1BD,cAAeJ,EAAMK,QAAQ,IAC7BC,YAAaN,EAAMK,QAAQ,IAC3BE,aAAcP,EAAMK,QAAQ,IAC5BG,WAAYR,EAAMK,QAAQ,KAE5BI,QAAS,CACPC,OAAQ,GACRC,MAAO,GAETC,UAAW,CACTC,QAAS,YAwDEyD,EApDyB,SAAC,GAA4B,IAA1BvD,EAAyB,EAAzBA,UAAcC,EAAW,6BAC5DC,EAAUnB,IACRwB,EAASC,cAATD,KACFJ,EAAevB,iBAAgC,MAHa,EAIxCwB,mBAAiB,IAJuB,mBAI3DC,EAJ2D,KAIpDC,EAJoD,KAW5DG,EAAe,WAChBN,GAAgBA,EAAarB,SAC9BqB,EAAarB,QAAQ4B,SAGzB,OACE,uCAAKV,UAAWW,YAAKT,EAAQhB,KAAMc,IAAgBC,GACjD,kBAACkC,EAAA,EAAD,CAAQC,IAAI,SAASG,IAAG,OAAEhC,QAAF,IAAEA,OAAF,EAAEA,EAAMkC,SAChC,kBAACe,EAAA,EAAD,CAAOxD,UAAWE,EAAQf,eAAgB0B,QAAQ,YAChD,kBAAC4C,EAAA,EAAD,CACE3C,kBAAgB,EAChBC,WAAS,EACTC,SAjBa,SAACC,GACpBA,EAAMC,UACNZ,EAASW,EAAME,OAAOd,QAgBhBe,YAAY,qBAGhB,kBAACsC,EAAA,EAAD,CAASpC,MAAM,QACb,kBAACqC,EAAA,EAAD,CAAYpC,MAAOlB,EAAMmB,OAAS,EAAI,UAAY,WAChD,kBAAC,IAAD,QAGJ,kBAACoC,EAAA,EAAD,CAAS5D,UAAWE,EAAQR,UAC5B,kBAACgE,EAAA,EAAD,CAASpC,MAAM,gBACb,kBAACqC,EAAA,EAAD,CAAYlC,KAAK,MAAMC,QAASjB,GAC9B,kBAAC,IAAD,QAGJ,kBAACiD,EAAA,EAAD,CAASpC,MAAM,eACb,kBAACqC,EAAA,EAAD,CAAYlC,KAAK,MAAMC,QAASjB,GAC9B,kBAAC,IAAD,QAGJ,2BAAOT,UAAWE,EAAQL,UAAW8B,IAAKxB,EAAcyB,KAAK,W,gEClE7D7C,EAAYC,aAAW,iBAAO,CAClCE,KAAM,CACJY,QAAS,OACTc,WAAY,UAEdiD,YAAa,CACXtC,MAAOuC,IAAOC,IAAI,UAmDPC,EA/CuB,SAAC,GAAkC,IAAhChE,EAA+B,EAA/BA,UAAWiE,EAAoB,EAApBA,KAAShE,EAAW,oCAChEC,EAAUnB,IADsD,EAE1CqB,mBAAkB6D,EAAKC,SAFmB,mBAE/DA,EAF+D,KAEtDC,EAFsD,OAG5C/D,mBAAiB6D,EAAKG,OAHsB,mBAG/DA,EAH+D,KAGxDC,EAHwD,KAetE,OACE,uCAAKrE,UAAWW,YAAKT,EAAQhB,KAAMc,IAAgBC,GAChDiE,EACC,kBAACR,EAAA,EAAD,CAASpC,MAAM,UACb,kBAACqC,EAAA,EAAD,CAAY3D,UAAWE,EAAQ2D,YAAanC,QAT/B,WACnByC,GAAS,GACTE,GAAS,SAAAC,GAAS,OAAIA,EAAY,OAQ1B,kBAAC,IAAD,CAAcC,SAAS,YAI3B,kBAACb,EAAA,EAAD,CAASpC,MAAM,QACb,kBAACqC,EAAA,EAAD,CAAYjC,QApBD,WACjByC,GAAS,GACTE,GAAS,SAAAC,GAAS,OAAIA,EAAY,OAmB1B,kBAAC,IAAD,CAAoBC,SAAS,YAInC,kBAACtB,EAAA,EAAD,CAAY1B,MAAM,gBAAgBV,QAAQ,MACvCuD,GAEH,kBAACzB,EAAA,EAAD,CAAKvD,SAAU,IACf,kBAACuE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAWY,SAAS,aCpCtBxF,EAAYC,aAAW,iBAAO,CAClCE,KAAM,GACNsF,KAAM,CACJlB,WAAY,GAEdmB,MAAO,CACL9E,OAAQ,IACR+E,mBAAoB,WAsFTC,IAlFqB,SAAC,GAAkC,IAAhC3E,EAA+B,EAA/BA,UAAWiE,EAAoB,EAApBA,KAAShE,EAAW,oCAC9DC,EAAUnB,IADoD,EAE1BqB,wBAA6BwE,GAFH,mBAE7DC,EAF6D,KAE9CC,EAF8C,KAIpE,OACE,oCACE,kBAACC,EAAA,EAAD,eAAM/E,UAAWW,YAAKT,EAAQhB,KAAMc,IAAgBC,GAClD,kBAAC+E,EAAA,EAAD,CACEvC,OACE,kBAACN,EAAA,EAAD,CACEC,IAAI,SACJC,UAAWC,IACXC,IAAK0B,EAAKzB,OAAOC,OACjBC,GAAG,MAGPuC,mBAAiB,EACjBC,UACE,kBAACvC,EAAA,EAAD,CAAK7C,QAAQ,OAAOc,WAAW,UAC7B,kBAAC,IAAD,CAAgB2D,SAAS,UACzB,kBAACtB,EAAA,EAAD,CACEpC,QAAQ,UACRU,MAAM,gBACNvB,UAAWE,EAAQsE,MAElBtB,IAAOe,EAAKd,WAAWC,YAI9B9B,MACE,kBAAC0B,EAAA,EAAD,CACEzB,MAAM,cACNc,UAAWC,IACXI,GAAG,IACH7B,QAAQ,MAEPoD,EAAKzB,OAAOnB,QAInB,kBAACsB,EAAA,EAAD,CAAKwC,GAAI,EAAGC,GAAI,GACd,kBAACnC,EAAA,EAAD,CAAYpC,QAAQ,QAAQU,MAAM,eAC/B0C,EAAKZ,SAEPY,EAAKQ,OACJ,kBAAC9B,EAAA,EAAD,CAAK0C,GAAI,GACP,kBAACC,EAAA,EAAD,CAAgB5D,QAAS,kBAAMoD,EAAiBb,EAAKQ,SACnD,kBAACc,EAAA,EAAD,CAAWvF,UAAWE,EAAQuE,MAAOe,MAAOvB,EAAKQ,UAIvD,kBAAC9B,EAAA,EAAD,CAAK0C,GAAI,GACP,kBAAC,EAAD,CAAWpB,KAAMA,KAEnB,kBAACtB,EAAA,EAAD,CAAK8C,GAAI,GACP,kBAAC7B,EAAA,EAAD,OAEDK,EAAKyB,SAASC,KAAI,SAAAzD,GAAO,OACxB,kBAAC,EAAD,CAASA,QAASA,EAAS0D,IAAK1D,EAAQ2D,QAE1C,kBAAClD,EAAA,EAAD,CAAK8C,GAAI,GACP,kBAAC7B,EAAA,EAAD,OAEF,kBAAC,EAAD,QAGHiB,GACC,kBAAC,IAAD,CACEiB,MAAOjB,EACPkB,QAAS,kBAAMjB,OAAiBF,S,6LCrGpC7F,EAAYC,aAAW,iBAAO,CAClCE,KAAM,OAsBO8G,EAnBiB,SAAC,GAA4B,IAA1BhG,EAAyB,EAAzBA,UAAcC,EAAW,6BACpDC,EAAUnB,IAEhB,OACE,uCAAKiB,UAAWW,YAAKT,EAAQhB,KAAMc,IAAgBC,GACjD,kBAACgD,EAAA,EAAD,CAAYpC,QAAQ,WAAWU,MAAM,iBAArC,eAGA,kBAAC0B,EAAA,EAAD,CAAYpC,QAAQ,KAAKU,MAAM,eAA/B,yCCVAxC,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJ+G,gBAAiBhH,EAAMiH,QAAQC,WAAWC,KAC1CC,UAAW,OACX5G,WAAYR,EAAMK,QAAQ,GAC1BD,cAAeJ,EAAMK,QAAQ,QA0ClBgH,UAtCY,WACzB,IAAMpG,EAAUnB,IACVwH,EAAe7H,cAFU,EAGL0B,mBAAiB,IAHZ,mBAGxBoG,EAHwB,KAGjBC,EAHiB,KAKzBC,EAAWC,sBAAW,sBAAC,4BAAAC,EAAA,+EAEFC,IAAMC,IAAuB,oBAF3B,OAEnBC,EAFmB,OAIrBR,EAAazH,SACf2H,EAASM,EAASC,KAAKR,OALA,gDAQzBS,QAAQC,MAAR,MARyB,yDAU1B,CAACX,IAMJ,OAJA1H,qBAAU,WACR6H,MACC,CAACA,IAGF,kBAACS,EAAA,EAAD,CAAMnH,UAAWE,EAAQhB,KAAMoC,MAAM,eACnC,kBAAC8F,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,EAAD,MACA,kBAAC1E,EAAA,EAAD,CAAK0C,GAAI,GACP,kBAACtF,EAAA,EAAD,OAEDyG,EAAMb,KAAI,SAAA1B,GAAI,OACb,kBAACtB,EAAA,EAAD,CAAK0C,GAAI,EAAGO,IAAK3B,EAAK4B,IACpB,kBAAClB,EAAA,EAAD,CAAUV,KAAMA","file":"static/js/41.948d2226.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\r\n\r\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\r\n  const isMounted = useRef(true);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      isMounted.current = false;\r\n    },\r\n    []\r\n  );\r\n\r\n  return isMounted;\r\n};\r\n\r\nexport default useIsMountedRef;\r\n","import {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  IconButton,\r\n  Input,\r\n  makeStyles,\r\n  Paper,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { ChangeEvent, FC, useRef, useState } from 'react';\r\nimport useAuth from 'src/hooks/useAuth';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface PostAddProps {\r\n  className?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  inputContainer: {\r\n    flexGrow: 1,\r\n    paddingBottom: theme.spacing(0.5),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n    paddingTop: theme.spacing(0.5)\r\n  },\r\n  divider: {\r\n    height: 24,\r\n    width: 1\r\n  },\r\n  fileInput: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst PostAdd: FC<PostAddProps> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\r\n  const [value, setValue] = useState<string>('');\r\n  const { user } = useAuth();\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    event.persist();\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleAttach = (): void => {\r\n    if(fileInputRef && fileInputRef.current)\r\n      fileInputRef.current.click()\r\n  };\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Paper className={classes.inputContainer} variant=\"outlined\">\r\n            <Input\r\n              disableUnderline\r\n              fullWidth\r\n              onChange={handleChange}\r\n              placeholder={`What's on your mind, ${user?.name}`}\r\n            />\r\n          </Paper>\r\n          <Tooltip title=\"Send\">\r\n            <IconButton color={value.length > 0 ? 'primary' : 'default'}>\r\n              <SendIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Divider className={classes.divider} />\r\n          <Tooltip title=\"Attach image\">\r\n            <IconButton edge=\"end\" onClick={handleAttach}>\r\n              <AddPhotoIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Attach file\">\r\n            <IconButton edge=\"end\" onClick={handleAttach}>\r\n              <AttachFileIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <input className={classes.fileInput} ref={fileInputRef} type=\"file\" />\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPostAdd.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PostAdd;\r\n","import { Avatar, Box, Link, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Theme } from 'src/theme';\r\nimport { PostComment } from 'src/types/social';\r\n\r\ninterface CommentProps {\r\n  className?: string;\r\n  comment: PostComment;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  bubble: {\r\n    borderRadius: theme.shape.borderRadius\r\n  }\r\n}));\r\n\r\nconst Comment: FC<CommentProps> = ({ className, comment, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Avatar\r\n        alt=\"Person\"\r\n        component={RouterLink}\r\n        src={comment.author.avatar}\r\n        to=\"#\"\r\n      />\r\n      <Box\r\n        flexGrow={1}\r\n        p={2}\r\n        ml={2}\r\n        bgcolor=\"background.dark\"\r\n        className={classes.bubble}\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n          <Link color=\"textPrimary\" component={RouterLink} to=\"#\" variant=\"h6\">\r\n            {comment.author.name}\r\n          </Link>\r\n          <Box flexGrow={1} />\r\n          <Typography color=\"textSecondary\" variant=\"caption\">\r\n            {moment(comment.createdAt).fromNow()}\r\n          </Typography>\r\n        </Box>\r\n        <Typography variant=\"body1\" color=\"textPrimary\">\r\n          {comment.message}\r\n        </Typography>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = {\r\n  className: PropTypes.string,\r\n  // @ts-ignore\r\n  comment: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Comment;\r\n","import {\r\n  Avatar,\r\n  Divider,\r\n  IconButton,\r\n  Input,\r\n  makeStyles,\r\n  Paper,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { ChangeEvent, FC, useRef, useState } from 'react';\r\nimport useAuth from 'src/hooks/useAuth';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface CommentAddProps {\r\n  className?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  inputContainer: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(2),\r\n    paddingBottom: theme.spacing(0.5),\r\n    paddingLeft: theme.spacing(0.5),\r\n    paddingRight: theme.spacing(0.5),\r\n    paddingTop: theme.spacing(0.5)\r\n  },\r\n  divider: {\r\n    height: 24,\r\n    width: 1\r\n  },\r\n  fileInput: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst CommentAdd: FC<CommentAddProps> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const { user } = useAuth();\r\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    event.persist();\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleAttach = (): void => {\r\n    if(fileInputRef && fileInputRef.current)\r\n      fileInputRef.current.click()\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Avatar alt=\"Person\" src={user?.avatar} />\r\n      <Paper className={classes.inputContainer} variant=\"outlined\">\r\n        <Input\r\n          disableUnderline\r\n          fullWidth\r\n          onChange={handleChange}\r\n          placeholder=\"Leave a message\"\r\n        />\r\n      </Paper>\r\n      <Tooltip title=\"Send\">\r\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Divider className={classes.divider} />\r\n      <Tooltip title=\"Attach image\">\r\n        <IconButton edge=\"end\" onClick={handleAttach}>\r\n          <AddPhotoIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"Attach file\">\r\n        <IconButton edge=\"end\" onClick={handleAttach}>\r\n          <AttachFileIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <input className={classes.fileInput} ref={fileInputRef} type=\"file\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentAdd.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default CommentAdd;\r\n","import {\r\n  Box,\r\n  colors,\r\n  IconButton,\r\n  makeStyles,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC, useState } from 'react';\r\nimport { Post } from 'src/types/social';\r\n\r\ninterface ReactionsProps {\r\n  className?: string;\r\n  post: Post;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  likedButton: {\r\n    color: colors.red[600]\r\n  }\r\n}));\r\n\r\nconst Reactions: FC<ReactionsProps> = ({ className, post, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [isLiked, setLiked] = useState<boolean>(post.isLiked);\r\n  const [likes, setLikes] = useState<number>(post.likes);\r\n\r\n  const handleLike = (): void => {\r\n    setLiked(true);\r\n    setLikes(prevLikes => prevLikes + 1);\r\n  };\r\n\r\n  const handleUnlike = (): void => {\r\n    setLiked(false);\r\n    setLikes(prevLikes => prevLikes - 1);\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      {isLiked ? (\r\n        <Tooltip title=\"Unlike\">\r\n          <IconButton className={classes.likedButton} onClick={handleUnlike}>\r\n            <FavoriteIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Like\">\r\n          <IconButton onClick={handleLike}>\r\n            <FavoriteBorderIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      <Typography color=\"textSecondary\" variant=\"h6\">\r\n        {likes}\r\n      </Typography>\r\n      <Box flexGrow={1} />\r\n      <IconButton>\r\n        <ShareIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactions.propTypes = {\r\n  className: PropTypes.string,\r\n  // @ts-ignore\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Reactions;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  CardHeader,\r\n  CardMedia,\r\n  Divider,\r\n  Link,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC, useState } from 'react';\r\n// @ts-ignore\r\nimport { Lightbox } from 'react-modal-image';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Post } from 'src/types/social';\r\nimport Comment from './Comment';\r\nimport CommentAdd from './CommentAdd';\r\nimport Reactions from './Reactions';\r\n\r\ninterface PostCardProps {\r\n  className?: string;\r\n  post: Post;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  date: {\r\n    marginLeft: 6\r\n  },\r\n  media: {\r\n    height: 500,\r\n    backgroundPosition: 'top'\r\n  }\r\n}));\r\n\r\nconst PostCard: FC<PostCardProps> = ({ className, post, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedImage, setSelectedImage] = useState<string | undefined>(undefined);\r\n\r\n  return (\r\n    <>\r\n      <Card className={clsx(classes.root, className)} {...rest}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar\r\n              alt=\"Person\"\r\n              component={RouterLink}\r\n              src={post.author.avatar}\r\n              to=\"#\"\r\n            />\r\n          }\r\n          disableTypography\r\n          subheader={\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <AccessTimeIcon fontSize=\"small\" />\r\n              <Typography\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n                className={classes.date}\r\n              >\r\n                {moment(post.createdAt).fromNow()}\r\n              </Typography>\r\n            </Box>\r\n          }\r\n          title={\r\n            <Link\r\n              color=\"textPrimary\"\r\n              component={RouterLink}\r\n              to=\"#\"\r\n              variant=\"h6\"\r\n            >\r\n              {post.author.name}\r\n            </Link>\r\n          }\r\n        />\r\n        <Box px={3} pb={2}>\r\n          <Typography variant=\"body1\" color=\"textPrimary\">\r\n            {post.message}\r\n          </Typography>\r\n          {post.media && (\r\n            <Box mt={2}>\r\n              <CardActionArea onClick={() => setSelectedImage(post.media)}>\r\n                <CardMedia className={classes.media} image={post.media} />\r\n              </CardActionArea>\r\n            </Box>\r\n          )}\r\n          <Box mt={2}>\r\n            <Reactions post={post} />\r\n          </Box>\r\n          <Box my={2}>\r\n            <Divider />\r\n          </Box>\r\n          {post.comments.map(comment => (\r\n            <Comment comment={comment} key={comment.id} />\r\n          ))}\r\n          <Box my={2}>\r\n            <Divider />\r\n          </Box>\r\n          <CommentAdd />\r\n        </Box>\r\n      </Card>\r\n      {selectedImage && (\r\n        <Lightbox\r\n          large={selectedImage}\r\n          onClose={() => setSelectedImage(undefined)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  className: PropTypes.string,\r\n  // @ts-ignore\r\n  post: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PostCard;\r\n","import { makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC } from 'react';\r\n\r\ninterface HeaderProps {\r\n  className?: string;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Typography variant=\"overline\" color=\"textSecondary\">\r\n        Social Feed\r\n      </Typography>\r\n      <Typography variant=\"h3\" color=\"textPrimary\">\r\n        Here&apos;s what your connections posted\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import { Box, Container, makeStyles } from '@material-ui/core';\r\nimport React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport Page from 'src/components/Page';\r\nimport PostAdd from 'src/components/PostAdd';\r\nimport PostCard from 'src/components/PostCard';\r\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\r\nimport { Theme } from 'src/theme';\r\nimport { Post } from 'src/types/social';\r\nimport axios from 'src/utils/axios';\r\nimport Header from './Header';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst SocialFeedView: FC = () => {\r\n  const classes = useStyles();\r\n  const isMountedRef = useIsMountedRef();\r\n  const [posts, setPosts] = useState<Post[]>([]);\r\n\r\n  const getPosts = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get<{ posts: Post[] }>('/api/social/feed');\r\n\r\n      if (isMountedRef.current) {\r\n        setPosts(response.data.posts);\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }, [isMountedRef]);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Social Feed\">\r\n      <Container maxWidth=\"lg\">\r\n        <Header />\r\n        <Box mt={3}>\r\n          <PostAdd />\r\n        </Box>\r\n        {posts.map(post => (\r\n          <Box mt={3} key={post.id}>\r\n            <PostCard post={post} />\r\n          </Box>\r\n        ))}\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SocialFeedView;\r\n"],"sourceRoot":""}