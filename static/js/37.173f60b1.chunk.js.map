{"version":3,"sources":["hooks/useIsMountedRef.ts","utils/getInitials.ts","components/Label.tsx","components/GenericMoreButton.tsx","views/extra/charts/ApexChartsView/LineChart.tsx","views/reports/DashboardAlternativeView/CustomerActivity.tsx","views/reports/DashboardAlternativeView/EarningsSegmentation/Chart.tsx","views/reports/DashboardAlternativeView/EarningsSegmentation/index.tsx","views/reports/DashboardAlternativeView/Header.tsx","views/reports/DashboardAlternativeView/LatestOrders.tsx","views/reports/DashboardAlternativeView/Overview.tsx","views/reports/DashboardAlternativeView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","LineChart","useTheme","chart","options","background","paper","stacked","toolbar","show","zoom","colors","dataLabels","enabled","grid","borderColor","divider","yaxis","lines","legend","position","horizontalAlign","labels","text","markers","size","strokeColors","strokeWidth","shape","radius","hover","undefined","sizeOffset","stroke","curve","lineCap","dashArray","mode","type","tooltip","xaxis","axisBorder","axisTicks","categories","moment","subtract","toDate","getTime","format","opposite","series","data","variant","item","borderRight","CustomerActivity","isMountedRef","activities","setActivities","getActivities","useCallback","a","axios","get","response","console","Card","CardHeader","action","GenericMoreButton","Divider","List","disablePadding","activity","i","ListItem","length","key","id","ListItemAvatar","Avatar","alt","component","RouterLink","src","customer","avatar","to","ListItemText","disableTypography","Link","underline","Typography","description","noWrap","createdAt","fromNow","Chart","dataProp","version","datasets","dataset","borderWidth","default","hoverBorderColor","responsive","maintainAspectRatio","animation","cutoutPercentage","layout","tooltips","intersect","caretSize","yPadding","xPadding","dark","titleFontColor","bodyFontColor","footerFontColor","callbacks","label","tooltipItem","_data","index","value","textAlign","flexDirection","EarningsSegmentation","earnings","setEarnings","getEarnings","Box","p","minHeight","timeRanges","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","Breadcrumbs","separator","aria-label","Button","disabled","startIcon","SvgIcon","Menu","getContentAnchorEl","_timeRange","MenuItem","defaultProps","marginRight","LatestOrders","orders","setOrders","getOrders","Table","TableHead","TableRow","TableCell","TableBody","order","items","roles","endIcon","breakpoints","up","down","borderBottom","valueContainer","marginLeft","Overview","overview","md","sm","xs","gutterBottom","paddingTop","paddingBottom","root2","marginTop","chevron","transform","transition","chevronDown","DashboardAlternativeView","campaignTitle","useSelector","state","campaign","createCampaign","showProp","setShowProp","saveSettings","useSettings","user","useAuth","tier","THEMES","LIGHT_COMPANY","LIGHT","Page","Container","IconButton","classNames","Collapse","in","lg","xl"],"mappings":"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","file":"static/js/37.173f60b1.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","const getInitials = (name: string = '') => {\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n};\n\nexport default getInitials;\n","import { fade, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, ReactNode } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={clsx(\n        classes.root,\n        {\n          [classes[color]]: color\n        },\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import {\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Tooltip\n} from '@material-ui/core';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport React, { FC, memo, useRef, useState } from 'react';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nconst GenericMoreButton: FC = props => {\n  const classes = useStyles();\n  const moreRef = useRef<any>(null);\n  const [openMenu, setOpenMenu] = useState<boolean>(false);\n\n  const handleMenuOpen = (): void => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = (): void => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton onClick={handleMenuOpen} ref={moreRef} {...props}>\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(GenericMoreButton);\n","import { Card, CardContent, Typography, useTheme } from '@material-ui/core';\nimport moment from 'moment';\nimport React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\n\nconst LineChart: FC = () => {\n  const theme = useTheme();\n\n  const chart = {\n    options: {\n      chart: {\n        background: theme.palette.background.paper,\n        stacked: false,\n        toolbar: {\n          show: false\n        },\n        zoom: false\n      },\n      colors: ['#1f87e6', '#ff5c7c'],\n      dataLabels: {\n        enabled: false\n      },\n      grid: {\n        borderColor: theme.palette.divider,\n        yaxis: {\n          lines: {\n            show: false\n          }\n        }\n      },\n      legend: {\n        show: true,\n        position: 'top',\n        horizontalAlign: 'right',\n        labels: {\n          colors: theme.palette.text.secondary\n        }\n      },\n      markers: {\n        size: 4,\n        strokeColors: ['#1f87e6', '#27c6db'],\n        strokeWidth: 0,\n        shape: 'circle',\n        radius: 2,\n        hover: {\n          size: undefined,\n          sizeOffset: 2\n        }\n      },\n      stroke: {\n        width: 3,\n        curve: 'smooth',\n        lineCap: 'butt',\n        dashArray: [0, 3]\n      },\n      theme: {\n        mode: theme.palette.type\n      },\n      tooltip: {\n        theme: theme.palette.type\n      },\n      xaxis: {\n        axisBorder: {\n          color: theme.palette.divider\n        },\n        axisTicks: {\n          show: true,\n          color: theme.palette.divider\n        },\n        categories: [\n          `${moment(moment().subtract(11, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`,\n          `${moment(moment().subtract(10, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`,\n          `${moment(moment().subtract(9, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`,\n          `${moment(moment().subtract(8, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`,\n          `${moment(moment().subtract(7, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`,\n          `${moment(moment().subtract(6, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`,\n          `${moment(moment().subtract(5, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`,\n          `${moment(moment().subtract(4, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`,\n          `${moment(moment().subtract(3, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`,\n          `${moment(moment().subtract(2, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`,\n          `${moment(moment().subtract(1, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`,\n          `${moment(moment().subtract(0, 'days').toDate().getTime()).format(\n            'DD MMM'\n          )}`\n        ],\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      yaxis: [\n        {\n          axisBorder: {\n            show: true,\n            color: theme.palette.divider\n          },\n          axisTicks: {\n            show: true,\n            color: theme.palette.divider\n          },\n          labels: {\n            style: {\n              colors: theme.palette.text.secondary\n            }\n          }\n        },\n        {\n          axisTicks: {\n            show: true,\n            color: theme.palette.divider\n          },\n          axisBorder: {\n            show: true,\n            color: theme.palette.divider\n          },\n          labels: {\n            style: {\n              colors: theme.palette.text.secondary\n            }\n          },\n          opposite: true\n        }\n      ]\n    },\n    series: [\n      {\n        name: 'Views',\n        data: [\n          3350,\n          1840,\n          2254,\n          5780,\n          9349,\n          5241,\n          2770,\n          2051,\n          3764,\n          2385,\n          5912,\n          8323\n        ]\n      },\n      {\n        name: 'Comments',\n        data: [560, 198, 254, 388, 1122, 634, 288, 230, 399, 279, 433, 989]\n      }\n    ]\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h4\" color=\"textPrimary\">\n          Web Traffic\n        </Typography>\n        <Chart type=\"line\" height=\"415\" {...chart} />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default LineChart;\n","import {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport { CustomerActivity as CustomerActivityType } from 'src/types/reports';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\n\ninterface CustomerActivityProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst CustomerActivity: FC<CustomerActivityProps> = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [activities, setActivities] = useState<CustomerActivityType[]>([]);\n\n  const getActivities = useCallback(async () => {\n    try {\n      const response = await axios.get<{ activities: CustomerActivityType[] }>(\n        '/api/reports/customer-activity'\n      );\n\n      if (isMountedRef.current) {\n        setActivities(response.data.activities);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getActivities();\n  }, [getActivities]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader title=\"Matched Influencers\" action={<GenericMoreButton />} />\n      <Divider />\n      {/* <Box display=\"flex\">\n        <div className={classes.item}>\n          <Typography align=\"center\" variant=\"h3\" color=\"textPrimary\">\n            15,245\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Registered\n          </Typography>\n        </div>\n        <Divider />\n        <div className={classes.item}>\n          <Typography align=\"center\" variant=\"h3\" color=\"textPrimary\">\n            357\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Online\n          </Typography>\n        </div>\n      </Box>\n      <Divider /> */}\n      <List disablePadding>\n        {activities.map((activity, i) => (\n          <ListItem divider={i < activities.length - 1} key={activity.id}>\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Customer\"\n                component={RouterLink}\n                src={activity.customer.avatar}\n                to=\"#\"\n              >\n                {getInitials(activity.customer.name)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"#\"\n                  underline=\"none\"\n                  variant=\"h6\"\n                >\n                  {activity.customer.name}\n                </Link>\n              }\n              secondary={\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {activity.description}\n                </Typography>\n              }\n            />\n            <Typography color=\"textSecondary\" noWrap variant=\"caption\">\n              {moment(activity.createdAt).fromNow()}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n};\n\nCustomerActivity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CustomerActivity;\n","import { useTheme } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Theme } from 'src/theme';\n\ninterface ChartProps {\n  className?: string;\n  data: any;\n  version: number;\n}\n\nconst Chart: FC<ChartProps> = ({ data: dataProp, version, ...rest }) => {\n  const theme: Theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets.map(dataset => ({\n      ...dataset,\n      borderWidth: 8,\n      borderColor: theme.palette.background.default,\n      hoverBorderColor: theme.palette.background.default\n    })),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n\n          if (version === 3) return `${label}: ${value}%`;\n          else return `${label}: ${value}`;\n        }\n      }\n    }\n  };\n\n  return <Doughnut data={data} options={options} {...rest} />;\n};\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired\n};\n\nexport default Chart;\n","import {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\nimport Chart from './Chart';\n\ninterface EarningsSegmentationProps {\n  className?: string;\n  version: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nconst EarningsSegmentation: FC<EarningsSegmentationProps> = ({\n  className,\n  version,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [earnings, setEarnings] = useState<any>(null);\n\n  const getEarnings = useCallback(async () => {\n    try {\n      if (version === 1) {\n        const response = await axios.get('/api/reports/earnings');\n        if (isMountedRef.current) {\n          setEarnings(response.data.earnings);\n        }\n      } else if (version === 2) {\n        const response = await axios.get('/api/reports/earnings2');\n        if (isMountedRef.current) {\n          setEarnings(response.data.earnings);\n        }\n      } else if (version === 3) {\n        const response = await axios.get('/api/reports/earnings3');\n        if (isMountedRef.current) {\n          setEarnings(response.data.earnings);\n        }\n      } else {\n        const response = await axios.get('/api/reports/earnings');\n        if (isMountedRef.current) {\n          setEarnings(response.data.earnings);\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEarnings();\n  }, [getEarnings]);\n\n  if (!earnings) {\n    return null;\n  }\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader action={<GenericMoreButton />} title=\"Geographics\" />\n      <Divider />\n      <Box p={3} position=\"relative\" minHeight={320}>\n        <Chart data={earnings} version={version} />\n      </Box>\n      <Divider />\n      <Box display=\"flex\">\n        {earnings.labels.map((label: string, i: number) => (\n          <div key={label} className={classes.item}>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              {version === 3 ? (\n                <>{earnings.datasets[0].data[i]}%</>\n              ) : (\n                <>{earnings.datasets[0].data[i]}</>\n              )}\n            </Typography>\n            <Typography variant=\"overline\" color=\"textSecondary\">\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box>\n    </Card>\n  );\n};\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\n\nexport default EarningsSegmentation;\n","import {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  makeStyles,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useRef, useState } from 'react';\nimport { Calendar as CalendarIcon } from 'react-feather';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 10 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const actionRef = useRef<any>(null);\n  const [isMenuOpen, setMenuOpen] = useState<boolean>(false);\n  const [timeRange, setTimeRange] = useState<string>(timeRanges[2].text);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography variant=\"body1\" color=\"textPrimary\">\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          Finance Overview\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n          disabled\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <CalendarIcon />\n            </SvgIcon>\n          }\n        >\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map(_timeRange => (\n            <MenuItem\n              key={_timeRange.value}\n              onClick={() => setTimeRange(_timeRange.text)}\n            >\n              {_timeRange.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Link as RouterLink } from 'react-router-dom';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Label from 'src/components/Label';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Order, OrderStatus } from 'src/types/reports';\nimport axios from 'src/utils/axios';\n\ninterface LatestOrdersProps {\n  className?: string;\n}\n\nconst labelColors: Record<OrderStatus, 'success' | 'warning' | 'error'> = {\n  complete: 'success',\n  pending: 'warning',\n  rejected: 'error'\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  marginRight: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst LatestOrders: FC<LatestOrdersProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [orders, setOrders] = useState<Order[]>([]);\n\n  const getOrders = useCallback(async () => {\n    try {\n      const response = await axios.get<{ orders: Order[] }>(\n        '/api/reports/latest-orders'\n      );\n\n      if (isMountedRef.current) {\n        setOrders(response.data.orders);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getOrders();\n  }, [getOrders]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Companies & Roles Data\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {/* <TableCell sortDirection=\"desc\">\n                  <Tooltip enterDelay={300} title=\"Sort\">\n                    <TableSortLabel active direction=\"desc\">\n                      Number\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell> */}\n                <TableCell>Companies</TableCell>\n                <TableCell>Total Views</TableCell>\n                <TableCell>Roles</TableCell>\n                {/* <TableCell align=\"right\">Date</TableCell> */}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map(order => (\n                <TableRow hover key={order.id}>\n                  <TableCell>{order.customer.name}</TableCell>\n                  <TableCell>{order.items * 13}</TableCell>\n                  <TableCell>\n                    {order.roles &&\n                      order.roles.map(i => (\n                        <Label\n                          key={i}\n                          className={classes.marginRight}\n                          color=\"success\"\n                        >\n                          {i}\n                        </Label>\n                      ))}\n                  </TableCell>\n                  {/* <TableCell>\n                    {numeral(order.totalAmount).format(\n                      `${order.currency}0,0.00`\n                    )}\n                  </TableCell> */}\n                  {/* <TableCell>\n                    <Label color={labelColors[order.status]}>\n                      {order.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(order.createdAt).format('DD MMM, YYYY hh:mm:ss')}\n                  </TableCell> */}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import { Card, Grid, makeStyles, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport Label from 'src/components/Label';\nimport { Theme } from 'src/theme';\n\ninterface OverviewProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Overview: FC<OverviewProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const overview = {\n    income: '32 213',\n    expanses: '2334',\n    profit: '9',\n    subscriptions: '7'\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Grid alignItems=\"center\" container justify=\"space-between\">\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Reactions\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {overview.income}\n            </Typography>\n            <Label className={classes.label} color=\"success\">\n              +22%\n            </Label>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Shares\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {overview.expanses}\n            </Typography>\n            <Label className={classes.label} color=\"success\">\n              +12%\n            </Label>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Click Through Rate\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {overview.profit}%\n            </Typography>\n            <Label className={classes.label} color=\"success\">\n              +6%\n            </Label>\n          </div>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Engagement Rate\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography variant=\"h3\" color=\"textPrimary\">\n              {overview.subscriptions}%\n            </Typography>\n            <Label className={classes.label} color=\"error\">\n              -1%\n            </Label>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n\nOverview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Overview;\n","import {\n  Box,\n  Collapse,\n  Container,\n  Grid,\n  IconButton,\n  makeStyles,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport classNames from 'classnames';\nimport React, { FC, useEffect, useState } from 'react';\nimport { ChevronRight } from 'react-feather';\nimport Page from 'src/components/Page';\nimport { THEMES } from 'src/constants';\nimport useAuth from 'src/hooks/useAuth';\nimport useSettings from 'src/hooks/useSettings';\nimport { useSelector } from 'src/store';\nimport { Theme } from 'src/theme';\nimport LineChart from 'src/views/extra/charts/ApexChartsView/LineChart';\nimport CustomerActivity from './CustomerActivity';\nimport EarningsSegmentation from './EarningsSegmentation';\nimport Header from './Header';\nimport LatestOrders from './LatestOrders';\nimport Overview from './Overview';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  root2: {\n    '& + &': {\n      marginTop: theme.spacing(4)\n    },\n    '&:not(:first-child)': {\n      marginTop: theme.spacing(2)\n    }\n  },\n  chevron: {\n    marginLeft: 8,\n    transform: 'none',\n    transition: 'transform 100ms ease-out',\n    color: theme.palette.primary.main\n  },\n  chevronDown: {\n    transform: 'rotate(90deg)'\n  }\n}));\n\nconst DashboardAlternativeView: FC = () => {\n  const classes = useStyles();\n\n  const { campaignTitle } = useSelector(state => state.campaign.createCampaign);\n  const [showProp, setShowProp] = useState<boolean>(\n    campaignTitle ? true : false\n  );\n\n  const { saveSettings } = useSettings();\n  const { user } = useAuth();\n\n  useEffect(() => {\n    if (user.tier === 'Company') {\n      saveSettings({ theme: THEMES.LIGHT_COMPANY });\n    } else {\n      saveSettings({ theme: THEMES.LIGHT });\n    }\n  }, []);\n\n  return (\n    <Page className={classes.root} title=\"Dashboard\">\n      <Container maxWidth={false}>\n        <Header />\n        <Box className={classes.root2}>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              onClick={() => setShowProp(!showProp)}\n            >\n              <Typography color=\"primary\" variant=\"h4\">\n                Active Campaign\n              </Typography>\n\n              <IconButton\n                className={classNames(classes.chevron, {\n                  [classes.chevronDown]: showProp\n                })}\n              >\n                <SvgIcon fontSize=\"small\">\n                  <ChevronRight />\n                </SvgIcon>\n              </IconButton>\n            </Box>\n          </Box>\n          <Collapse in={showProp}>\n            {!campaignTitle ? (\n              <Typography variant=\"h3\">No Active Campaigns</Typography>\n            ) : (\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Overview />\n                </Grid>\n                <Grid item lg={8} xl={9} xs={12}>\n                  <LineChart />\n                </Grid>\n\n                {/* <Grid item lg={4} xl={3} xs={12}>\n            <EarningsSegmentation version={1} />\n          </Grid>\n          <Grid item lg={4} xl={3} xs={12}>\n            <EarningsSegmentation version={2} />\n          </Grid> */}\n                <Grid item lg={4} xl={3} xs={12}>\n                  <EarningsSegmentation version={3} />\n                </Grid>\n                <Grid item lg={8} xl={9} xs={12}>\n                  <LatestOrders />\n                </Grid>\n                {/* <Grid item lg={8} xs={12}>\n            <LatestOrders />\n          </Grid> */}\n                <Grid item lg={4} xl={3} xs={12}>\n                  <CustomerActivity />\n                </Grid>\n                {/* <Grid item lg={8} xs={12}>\n            <MostProfitableProducts />\n          </Grid> */}\n                {/* <Grid item lg={3} xs={12}>\n            <TopReferrals />\n          </Grid> */}\n              </Grid>\n            )}\n          </Collapse>\n        </Box>\n        <Box className={classes.root2}>\n          <Box\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Box display=\"flex\" alignItems=\"center\">\n              <Typography color=\"primary\" variant=\"h4\">\n                Old Campaigns\n              </Typography>\n\n              <IconButton\n                className={classNames(classes.chevron, {\n                  [classes.chevronDown]: false\n                })}\n              >\n                <SvgIcon fontSize=\"small\">\n                  <ChevronRight />\n                </SvgIcon>\n              </IconButton>\n            </Box>\n          </Box>\n          <Collapse in={false}>\n            {/* <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Overview />\n              </Grid>\n              <Grid item lg={8} xl={9} xs={12}>\n                <LineChart />\n              </Grid>\n              <Grid item lg={4} xl={3} xs={12}>\n                <EarningsSegmentation version={3} />\n              </Grid>\n              <Grid item lg={8} xl={9} xs={12}>\n                <LatestOrders />\n              </Grid>\n              <Grid item lg={4} xl={3} xs={12}>\n                <CustomerActivity />\n              </Grid> \n            </Grid> */}\n          </Collapse>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default DashboardAlternativeView;\n"],"sourceRoot":""}