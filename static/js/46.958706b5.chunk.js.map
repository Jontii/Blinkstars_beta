{"version":3,"sources":["hooks/useIsMountedRef.ts","views/account/AccountView/General/countries.ts","views/account/AccountView/General/GeneralSettings.tsx","views/account/AccountView/General/ProfileDetails.tsx","views/account/AccountView/General/index.tsx","views/account/AccountView/Header.tsx","views/account/AccountView/Notifications.tsx","views/account/AccountView/Security.tsx","views/account/AccountView/Subscription.tsx","views/account/AccountView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","text","value","useStyles","makeStyles","root","GeneralSettings","className","user","rest","classes","enqueueSnackbar","useSnackbar","enableReinitialize","initialValues","canHire","city","country","email","isPublic","name","phone","state","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","wait","success","variant","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Card","clsx","CardHeader","title","Divider","CardContent","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","label","onBlur","onChange","type","Autocomplete","getOptionLabel","option","options","countries","renderInput","params","Typography","color","Switch","checked","edge","Box","mt","FormHelperText","p","display","justifyContent","Button","disabled","theme","marginTop","avatar","height","width","ProfileDetails","alignItems","flexDirection","textAlign","Avatar","src","gutterBottom","Link","component","RouterLink","to","tier","CardActions","General","useAuth","lg","xl","Header","Breadcrumbs","separator","fontSize","aria-label","Notifications","event","preventDefault","wrap","sm","FormControlLabel","control","Checkbox","defaultChecked","Security","password","passwordConfirm","min","oneOf","overview","padding","flexWrap","breakpoints","down","productImage","marginRight","details","Subscription","isMountedRef","useState","subscription","setSubscription","getSubscription","useCallback","axios","get","response","data","Paper","currency","price","alt","proposalsLeft","templatesLeft","invitesLeft","adsLeft","hasAnalytics","hasEmailAlerts","size","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","AccountView","currentTab","setCurrentTab","Page","Container","maxWidth","Tabs","scrollButtons","textColor","map","tab","Tab","key"],"mappings":"gKAAA,WAeeA,IAbS,WACtB,IAAMC,EAAYC,kBAAO,GASzB,OAPAC,qBACE,kBAAM,WACJF,EAAUG,SAAU,KAEtB,IAGKH,I,mUCZM,GACb,CAAEI,KAAM,cAAeC,MAAO,MAC9B,CAAED,KAAM,mBAAiBC,MAAO,MAChC,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,iBAAkBC,MAAO,MACjC,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,sBAAuBC,MAAO,MACtC,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,yBAA0BC,MAAO,MACzC,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,gBAAiBC,MAAO,MAChC,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,iCAAkCC,MAAO,MACjD,CAAED,KAAM,oBAAqBC,MAAO,MACpC,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,eAAgBC,MAAO,MAC/B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,iBAAkBC,MAAO,MACjC,CAAED,KAAM,2BAA4BC,MAAO,MAC3C,CAAED,KAAM,OAAQC,MAAO,MACvB,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,mBAAoBC,MAAO,MACnC,CAAED,KAAM,0BAA2BC,MAAO,MAC1C,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,wCAAyCC,MAAO,MACxD,CAAED,KAAM,eAAgBC,MAAO,MAC/B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,gBAAiBC,MAAO,MAChC,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,OAAQC,MAAO,MACvB,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,iBAAkBC,MAAO,MACjC,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,qBAAsBC,MAAO,MACrC,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,cAAeC,MAAO,MAC9B,CAAED,KAAM,oBAAqBC,MAAO,MACpC,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,8BAA+BC,MAAO,MAC9C,CAAED,KAAM,gBAAiBC,MAAO,MAChC,CAAED,KAAM,OAAQC,MAAO,MACvB,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,gBAAiBC,MAAO,MAChC,CAAED,KAAM,mBAAoBC,MAAO,MACnC,CAAED,KAAM,8BAA+BC,MAAO,MAC9C,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,OAAQC,MAAO,MACvB,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,gBAAiBC,MAAO,MAChC,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,oCAAqCC,MAAO,MACpD,CAAED,KAAM,gCAAiCC,MAAO,MAChD,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,4BAA6BC,MAAO,MAC5C,CAAED,KAAM,OAAQC,MAAO,MACvB,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,cAAeC,MAAO,MAC9B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,yCAA0CC,MAAO,MACzD,CAAED,KAAM,qBAAsBC,MAAO,MACrC,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,mCAAoCC,MAAO,MACnD,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,yBAA0BC,MAAO,MACzC,CAAED,KAAM,gBAAiBC,MAAO,MAChC,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,6CAA8CC,MAAO,MAC7D,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,OAAQC,MAAO,MACvB,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,mBAAoBC,MAAO,MACnC,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,kCAAmCC,MAAO,MAClD,CAAED,KAAM,uBAAwBC,MAAO,MACvC,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,cAAeC,MAAO,MAC9B,CAAED,KAAM,uBAAwBC,MAAO,MACvC,CAAED,KAAM,gBAAiBC,MAAO,MAChC,CAAED,KAAM,cAAeC,MAAO,MAC9B,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,OAAQC,MAAO,MACvB,CAAED,KAAM,iBAAkBC,MAAO,MACjC,CAAED,KAAM,2BAA4BC,MAAO,MAC3C,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,OAAQC,MAAO,MACvB,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,kCAAmCC,MAAO,MAClD,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,mBAAoBC,MAAO,MACnC,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,OAAQC,MAAO,MACvB,CAAED,KAAM,cAAeC,MAAO,MAC9B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,cAAeC,MAAO,MAC9B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,qBAAsBC,MAAO,MACrC,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,eAAgBC,MAAO,MAC/B,CAAED,KAAM,wBAAyBC,MAAO,MACxC,CAAED,KAAM,cAAeC,MAAO,MAC9B,CAAED,KAAM,4BAA6BC,MAAO,MAC5C,CAAED,KAAM,mCAAoCC,MAAO,MACnD,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,wBAAyBC,MAAO,MACxC,CAAED,KAAM,eAAgBC,MAAO,MAC/B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,wBAAyBC,MAAO,MACxC,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,eAAgBC,MAAO,MAC/B,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,kBAAmBC,MAAO,MAClC,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,eAAgBC,MAAO,MAC/B,CAAED,KAAM,+CAAgDC,MAAO,MAC/D,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,yBAA0BC,MAAO,MACzC,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,cAAeC,MAAO,MAC9B,CAAED,KAAM,uBAAwBC,MAAO,MACvC,CAAED,KAAM,4BAA6BC,MAAO,MAC5C,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,+BAAgCC,MAAO,MAC/C,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,cAAeC,MAAO,MAC9B,CAAED,KAAM,OAAQC,MAAO,MACvB,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,sBAAuBC,MAAO,MACtC,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,eAAgBC,MAAO,MAC/B,CAAED,KAAM,2BAA4BC,MAAO,MAC3C,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,uBAAwBC,MAAO,MACvC,CAAED,KAAM,iBAAkBC,MAAO,MACjC,CAAED,KAAM,gBAAiBC,MAAO,MAChC,CAAED,KAAM,uCAAwCC,MAAO,MACvD,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,aAAcC,MAAO,MAC7B,CAAED,KAAM,UAAWC,MAAO,MAC1B,CAAED,KAAM,YAAaC,MAAO,MAC5B,CAAED,KAAM,WAAYC,MAAO,MAC3B,CAAED,KAAM,0BAA2BC,MAAO,MAC1C,CAAED,KAAM,uBAAwBC,MAAO,MACvC,CAAED,KAAM,oBAAqBC,MAAO,MACpC,CAAED,KAAM,iBAAkBC,MAAO,MACjC,CAAED,KAAM,QAASC,MAAO,MACxB,CAAED,KAAM,SAAUC,MAAO,MACzB,CAAED,KAAM,WAAYC,MAAO,OCrNvBC,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OAkOOC,EA/NmC,SAAC,GAI5C,IAHLC,EAGI,EAHJA,UACAC,EAEI,EAFJA,KACGC,EACC,oCACEC,EAAUP,IACRQ,EAAoBC,cAApBD,gBAER,OACE,kBAAC,IAAD,CACEE,oBAAkB,EAClBC,cAAe,CACbC,QAASP,EAAKO,UAAW,EACzBC,KAAMR,EAAKQ,MAAQ,GACnBC,QAAST,EAAKS,SAAW,GACzBC,MAAOV,EAAKU,OAAS,GACrBC,SAAUX,EAAKW,WAAY,EAC3BC,KAAMZ,EAAKY,MAAQ,GACnBC,MAAOb,EAAKa,OAAS,GACrBC,MAAOd,EAAKc,OAAS,GACrBC,OAAQ,MAEVC,iBAAkBC,MAAaC,MAAM,CACnCX,QAASU,MACTT,KAAMS,MAAaE,IAAI,KACvBV,QAASQ,MAAaE,IAAI,KAC1BT,MAAOO,MACJP,MAAM,yBACNS,IAAI,KACJC,SAAS,qBACZT,SAAUM,MACVL,KAAMK,MAAaE,IAAI,KAAKC,SAAS,oBACrCP,MAAOI,MACPH,MAAOG,QAETI,SAAQ,uCAAE,WACRC,EADQ,wBAAAC,EAAA,6DAENC,EAFM,EAENA,UAAWC,EAFL,EAEKA,UAAWC,EAFhB,EAEgBA,UAAWC,EAF3B,EAE2BA,cAF3B,kBAMAC,YAAK,KANL,OAONJ,IACAE,EAAU,CAAEG,SAAS,IACrBF,GAAc,GACdxB,EAAgB,kBAAmB,CACjC2B,QAAS,YAXL,kDAcNC,QAAQC,MAAR,MACAN,EAAU,CAAEG,SAAS,IACrBJ,EAAU,CAAEV,OAAQ,KAAIkB,UACxBN,GAAc,GAjBR,0DAAF,0DAqBP,gBACCO,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAjB,EAPD,EAOCA,OAPD,OASC,0BAAMD,SAAUgB,GACd,kBAACG,EAAA,EAAD,eAAMzC,UAAW0C,YAAKvC,EAAQL,KAAME,IAAgBE,GAClD,kBAACyC,EAAA,EAAD,CAAYC,MAAM,YAClB,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEpB,MAAOqB,QAAQd,EAAQ3B,MAAQsB,EAAOtB,MACtC0C,WAAS,EACTC,WAAYhB,EAAQ3B,MAAQsB,EAAOtB,KACnC4C,MAAM,OACN5C,KAAK,OACL6C,OAAQtB,EACRuB,SAAUtB,EACV1C,MAAO4B,EAAOV,KACdkB,QAAQ,cAGZ,kBAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEpB,MAAOqB,QAAQd,EAAQ7B,OAASwB,EAAOxB,OACvC4C,WAAS,EACTC,WACEhB,EAAQ7B,OAASwB,EAAOxB,MACpBwB,EAAOxB,MACP,wCAEN8C,MAAM,gBACN5C,KAAK,QACL6C,OAAQtB,EACRuB,SAAUtB,EACVhB,UAAQ,EACRuC,KAAK,QACLjE,MAAO4B,EAAOZ,MACdoB,QAAQ,cAGZ,kBAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEpB,MAAOqB,QAAQd,EAAQ1B,OAASqB,EAAOrB,OACvCyC,WAAS,EACTC,WAAYhB,EAAQ1B,OAASqB,EAAOrB,MACpC2C,MAAM,eACN5C,KAAK,QACL6C,OAAQtB,EACRuB,SAAUtB,EACV1C,MAAO4B,EAAOT,MACdiB,QAAQ,cAGZ,kBAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACS,EAAA,EAAD,CACEC,eAAgB,SAAAC,GAAM,OAAIA,EAAOrE,MACjCsE,QAASC,EACTC,YAAa,SAAAC,GAAM,OACjB,kBAACd,EAAA,EAAD,eACEE,WAAS,EACTE,MAAM,UACN5C,KAAK,UACL8C,SAAUtB,EACVN,QAAQ,YACJoC,QAKZ,kBAACpB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEpB,MAAOqB,QAAQd,EAAQzB,OAASoB,EAAOpB,OACvCwC,WAAS,EACTC,WAAYhB,EAAQzB,OAASoB,EAAOpB,MACpC0C,MAAM,eACN5C,KAAK,QACL6C,OAAQtB,EACRuB,SAAUtB,EACV1C,MAAO4B,EAAOR,MACdgB,QAAQ,cAGZ,kBAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACC,EAAA,EAAD,CACEpB,MAAOqB,QAAQd,EAAQ/B,MAAQ0B,EAAO1B,MACtC8C,WAAS,EACTC,WAAYhB,EAAQ/B,MAAQ0B,EAAO1B,KACnCgD,MAAM,OACN5C,KAAK,OACL6C,OAAQtB,EACRuB,SAAUtB,EACV1C,MAAO4B,EAAOd,KACdsB,QAAQ,cAGG,QAAd9B,EAAKY,MACJ,oCACE,kBAACkC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACgB,EAAA,EAAD,CAAYrC,QAAQ,KAAKsC,MAAM,eAA/B,4BAGA,kBAACD,EAAA,EAAD,CAAYrC,QAAQ,QAAQsC,MAAM,iBAAlC,oFAIA,kBAACC,EAAA,EAAD,CACEC,QAAShD,EAAOX,SAChB4D,KAAK,QACL3D,KAAK,WACL8C,SAAUtB,KAGd,kBAACU,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,IACpB,kBAACgB,EAAA,EAAD,CAAYrC,QAAQ,KAAKsC,MAAM,eAA/B,qBAGA,kBAACD,EAAA,EAAD,CAAYrC,QAAQ,QAAQsC,MAAM,iBAAlC,kFAIA,kBAACC,EAAA,EAAD,CACEC,QAAShD,EAAOf,QAChBgE,KAAK,QACL3D,KAAK,UACL8C,SAAUtB,OAMnBF,EAAOnB,QACN,kBAACyD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAgB1C,OAAK,GAAEE,EAAOnB,UAIpC,kBAAC6B,EAAA,EAAD,MACA,kBAAC4B,EAAA,EAAD,CAAKG,EAAG,EAAGC,QAAQ,OAAOC,eAAe,YACvC,kBAACC,EAAA,EAAD,CACEV,MAAM,YACNW,SAAUzC,EACVqB,KAAK,SACL7B,QAAQ,aAJV,uB,sCCpNRnC,EAAYC,aAAW,SAACoF,GAAD,MAAmB,CAC9CnF,KAAM,GACNe,KAAM,CACJqE,UAAWD,EAAMhC,QAAQ,IAE3BkC,OAAQ,CACNC,OAAQ,IACRC,MAAO,SAoDIC,EAhDiC,SAAC,GAI1C,IAHLtF,EAGI,EAHJA,UACAC,EAEI,EAFJA,KACGC,EACC,oCACEC,EAAUP,IAEhB,OACE,kBAAC6C,EAAA,EAAD,eAAMzC,UAAW0C,YAAKvC,EAAQL,KAAME,IAAgBE,GAClD,kBAAC4C,EAAA,EAAD,KACE,kBAAC2B,EAAA,EAAD,CACEI,QAAQ,OACRU,WAAW,SACXC,cAAc,SACdC,UAAU,UAEV,kBAACC,EAAA,EAAD,CAAQ1F,UAAWG,EAAQgF,OAAQQ,IAAK1F,EAAKkF,SAC7C,kBAACf,EAAA,EAAD,CACEpE,UAAWG,EAAQU,KACnBwD,MAAM,cACNuB,cAAY,EACZ7D,QAAQ,MAEP9B,EAAKY,MAER,kBAACuD,EAAA,EAAD,CAAYC,MAAM,cAActC,QAAQ,SAAxC,aACa,IACX,kBAAC8D,EAAA,EAAD,CAAMC,UAAWC,IAAYC,GAAG,KAC7B/F,EAAKgG,SAKd,kBAACC,EAAA,EAAD,KACE,kBAACnB,EAAA,EAAD,CAAQxB,WAAS,EAACxB,QAAQ,QAA1B,qBCxDFnC,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OA4BOqG,EAzBmB,SAAC,GAA4B,IAA1BnG,EAAyB,EAAzBA,UAAcE,EAAW,6BACtDC,EAAUP,IACRK,EAASmG,cAATnG,KAER,OACE,kBAAC8C,EAAA,EAAD,eACE/C,UAAW0C,YAAKvC,EAAQL,KAAME,GAC9BgD,WAAS,EACTC,QAAS,GACL/C,GAEJ,kBAAC6C,EAAA,EAAD,CAAMG,MAAI,EAACmD,GAAI,EAAGlD,GAAI,EAAGmD,GAAI,EAAGlD,GAAI,IAClC,kBAAC,EAAD,CAAgBnD,KAAMA,KAExB,kBAAC8C,EAAA,EAAD,CAAMG,MAAI,EAACmD,GAAI,EAAGlD,GAAI,EAAGmD,GAAI,EAAGlD,GAAI,IAClC,kBAAC,EAAD,CAAiBnD,KAAMA,O,6BCpBzBL,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OA4BOyG,EAzBiB,SAAC,GAA4B,IAA1BvG,EAAyB,EAAzBA,UAAcE,EAAW,6BACpDC,EAAUP,IAEhB,OACE,uCAAKI,UAAW0C,YAAKvC,EAAQL,KAAME,IAAgBE,GACjD,kBAACsG,EAAA,EAAD,CACEC,UAAW,kBAAC,IAAD,CAAkBC,SAAS,UACtCC,aAAW,cAEX,kBAACd,EAAA,EAAD,CAAMxB,MAAM,UAAU2B,GAAG,OAAOF,UAAWC,KAA3C,aAGA,kBAAC3B,EAAA,EAAD,CAAYC,MAAM,eAAlB,YAEF,kBAACD,EAAA,EAAD,CAAYrC,QAAQ,KAAKsC,MAAM,eAA/B,c,oBCPAzE,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OAmGO8G,EAhG8B,SAAC,GAA4B,IAA1B5G,EAAyB,EAAzBA,UAAcE,EAAW,6BACjEC,EAAUP,IAEV0C,EAAY,uCAAG,WACnBuE,GADmB,SAAArF,EAAA,6DAGnBqF,EAAMC,iBAHa,SAKbjF,YAAK,KALQ,2CAAH,sDAQlB,OACE,0BAAMP,SAAUgB,GACd,kBAACG,EAAA,EAAD,eAAMzC,UAAW0C,YAAKvC,EAAQL,KAAME,IAAgBE,GAClD,kBAACyC,EAAA,EAAD,CAAYC,MAAM,kBAClB,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAG8D,KAAK,QAC/B,kBAAChE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG6D,GAAI,EAAG5D,GAAI,IAC3B,kBAACgB,EAAA,EAAD,CAAYwB,cAAY,EAAC7D,QAAQ,KAAKsC,MAAM,eAA5C,UAGA,kBAACD,EAAA,EAAD,CAAYwB,cAAY,EAAC7D,QAAQ,QAAQsC,MAAM,iBAA/C,0DAGA,6BACE,kBAAC4C,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAUC,gBAAc,IACjC3D,MAAM,kBAGV,6BACE,kBAACwD,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,MACT1D,MAAM,wBAGV,6BACE,kBAACwD,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAUC,gBAAc,IACjC3D,MAAM,kBAGV,6BACE,kBAACwD,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAUC,gBAAc,IACjC3D,MACE,oCACE,kBAACW,EAAA,EAAD,CAAYrC,QAAQ,QAAQsC,MAAM,eAAlC,eAGA,kBAACD,EAAA,EAAD,CAAYrC,QAAQ,WAApB,uCAQV,kBAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG6D,GAAI,EAAG5D,GAAI,IAC3B,kBAACgB,EAAA,EAAD,CAAYwB,cAAY,EAAC7D,QAAQ,KAAKsC,MAAM,eAA5C,YAGA,kBAACD,EAAA,EAAD,CAAYwB,cAAY,EAAC7D,QAAQ,QAAQsC,MAAM,iBAA/C,0DAGA,6BACE,kBAAC4C,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAUC,gBAAc,IACjC3D,MAAM,WAGV,6BACE,kBAACwD,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAUC,gBAAc,IACjC3D,MAAM,2BAMhB,kBAACZ,EAAA,EAAD,MACA,kBAAC4B,EAAA,EAAD,CAAKG,EAAG,EAAGC,QAAQ,OAAOC,eAAe,YACvC,kBAACC,EAAA,EAAD,CAAQV,MAAM,YAAYT,KAAK,SAAS7B,QAAQ,aAAhD,qBCrFJnC,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OAwHOuH,GArHqB,SAAC,GAA4B,IAA1BrH,EAAyB,EAAzBA,UAAcE,EAAW,6BACxDC,EAAUP,IACRQ,EAAoBC,cAApBD,gBAER,OACE,kBAAC,IAAD,CACEG,cAAe,CACb+G,SAAU,GACVC,gBAAiB,GACjBvG,OAAQ,MAEVC,iBAAkBC,MAAaC,MAAM,CACnCmG,SAAUpG,MACPsG,IAAI,EAAG,iCACPpG,IAAI,KACJC,SAAS,YACZkG,gBAAiBrG,MACduG,MAAM,CAACvG,IAAQ,YAAa,MAAO,wBACnCG,SAAS,cAEdC,SAAQ,uCAAE,WACRC,EADQ,wBAAAC,EAAA,6DAENC,EAFM,EAENA,UAAWC,EAFL,EAEKA,UAAWC,EAFhB,EAEgBA,UAAWC,EAF3B,EAE2BA,cAF3B,kBAMAC,YAAK,KANL,OAONJ,IACAE,EAAU,CAAEG,SAAS,IACrBF,GAAc,GACdxB,EAAgB,mBAAoB,CAClC2B,QAAS,YAXL,kDAcNC,QAAQC,MAAR,MACAN,EAAU,CAAEG,SAAS,IACrBJ,EAAU,CAAEV,OAAQ,KAAIkB,UACxBN,GAAc,GAjBR,0DAAF,0DAqBP,gBACCO,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAjB,EAPD,EAOCA,OAPD,OASC,0BAAMD,SAAUgB,GACd,kBAACG,EAAA,EAAD,eAAMzC,UAAW0C,YAAKvC,EAAQL,KAAME,IAAgBE,GAClD,kBAACyC,EAAA,EAAD,CAAYC,MAAM,oBAClB,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG6D,GAAI,EAAG5D,GAAI,IAC3B,kBAACC,EAAA,EAAD,CACEpB,MAAOqB,QAAQd,EAAQ8E,UAAYnF,EAAOmF,UAC1C/D,WAAS,EACTC,WAAYhB,EAAQ8E,UAAYnF,EAAOmF,SACvC7D,MAAM,WACN5C,KAAK,WACL6C,OAAQtB,EACRuB,SAAUtB,EACVuB,KAAK,WACLjE,MAAO4B,EAAO+F,SACdvF,QAAQ,cAGZ,kBAACgB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAG6D,GAAI,EAAG5D,GAAI,IAC3B,kBAACC,EAAA,EAAD,CACEpB,MAAOqB,QACLd,EAAQ+E,iBAAmBpF,EAAOoF,iBAEpChE,WAAS,EACTC,WACEhB,EAAQ+E,iBAAmBpF,EAAOoF,gBAEpC9D,MAAM,wBACN5C,KAAK,kBACL6C,OAAQtB,EACRuB,SAAUtB,EACVuB,KAAK,WACLjE,MAAO4B,EAAOgG,gBACdxF,QAAQ,eAIbI,EAAOnB,QACN,kBAACyD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,CAAgB1C,OAAK,GAAEE,EAAOnB,UAIpC,kBAAC6B,EAAA,EAAD,MACA,kBAAC4B,EAAA,EAAD,CAAKG,EAAG,EAAGC,QAAQ,OAAOC,eAAe,YACvC,kBAACC,EAAA,EAAD,CACEV,MAAM,YACNW,SAAUzC,EACVqB,KAAK,SACL7B,QAAQ,aAJV,0B,uCCrGRnC,GAAYC,aAAW,SAACoF,GAAD,MAAmB,CAC9CnF,KAAM,GACN4H,SAAS,cACPC,QAAS1C,EAAMhC,QAAQ,GACvB4B,QAAS,OACTU,WAAY,SACZqC,SAAU,OACV9C,eAAgB,iBACfG,EAAM4C,YAAYC,KAAK,MAAQ,CAC9BtC,cAAe,iBACfD,WAAY,eAGhBwC,aAAc,CACZC,YAAa/C,EAAMhC,QAAQ,GAC3BmC,OAAQ,GACRC,MAAO,IAET4C,QAAQ,cACNN,QAAS1C,EAAMhC,QAAQ,GACvB4B,QAAS,OACTU,WAAY,SACZqC,SAAU,OACV9C,eAAgB,iBACfG,EAAM4C,YAAYC,KAAK,MAAQ,CAC9BtC,cAAe,SACfD,WAAY,mBAiHH2C,GA5G6B,SAAC,GAA4B,IAA1BlI,EAAyB,EAAzBA,UAAcE,EAAW,6BAChEC,EAAUP,KACVuI,EAAe9I,eAFiD,EAG9B+I,mBAAqB,MAHS,mBAG/DC,EAH+D,KAGjDC,EAHiD,KAKhEC,EAAkBC,sBAAW,sBAAC,4BAAAhH,EAAA,+EAETiH,KAAMC,IAAI,6BAFD,OAE1BC,EAF0B,OAI5BR,EAAa1I,SACf6I,EAAgBK,EAASC,KAAKP,cALA,gDAQhCrG,QAAQC,MAAR,MARgC,yDAUjC,CAACkG,IAMJ,OAJA3I,qBAAU,WACR+I,MACC,CAACA,IAECF,EAKH,kBAAC5F,EAAA,EAAD,eAAMzC,UAAW0C,YAAKvC,EAAQL,KAAME,IAAgBE,GAClD,kBAACyC,EAAA,EAAD,CAAYC,MAAM,6BAClB,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,kBAAC+F,GAAA,EAAD,CAAO9G,QAAQ,YACb,kBAAC0C,EAAA,EAAD,CAAKzE,UAAWG,EAAQuH,UACtB,6BACE,kBAACtD,EAAA,EAAD,CAAYS,QAAQ,SAAS9C,QAAQ,KAAKsC,MAAM,eAC7CgE,EAAaS,SACbT,EAAaU,OAEhB,kBAAC3E,EAAA,EAAD,CAAYS,QAAQ,SAAS9C,QAAQ,aAArC,QAIF,kBAAC0C,EAAA,EAAD,CAAKI,QAAQ,OAAOU,WAAW,UAC7B,yBACEyD,IAAI,UACJhJ,UAAWG,EAAQ4H,aACnBpC,IAAI,gDAEN,kBAACvB,EAAA,EAAD,CAAYrC,QAAQ,WAAWsC,MAAM,iBAClCgE,EAAaxH,QAIpB,kBAACgC,EAAA,EAAD,MACA,kBAAC4B,EAAA,EAAD,CAAKzE,UAAWG,EAAQ8H,SACtB,6BACE,kBAAC7D,EAAA,EAAD,CAAYrC,QAAQ,QAAQsC,MAAM,eAAlC,UACMgE,EAAaY,cADnB,oBAGA,kBAAC7E,EAAA,EAAD,CAAYrC,QAAQ,QAAQsC,MAAM,eAAlC,UACMgE,EAAaa,cADnB,gBAIF,6BACE,kBAAC9E,EAAA,EAAD,CAAYrC,QAAQ,QAAQsC,MAAM,eAAlC,UACMgE,EAAac,YADnB,kBAGA,kBAAC/E,EAAA,EAAD,CAAYrC,QAAQ,QAAQsC,MAAM,eAAlC,UACMgE,EAAae,QADnB,eAIF,6BACGf,EAAagB,cACZ,kBAACjF,EAAA,EAAD,CAAYrC,QAAQ,QAAQsC,MAAM,eAAlC,uBAIDgE,EAAaiB,gBACZ,kBAAClF,EAAA,EAAD,CAAYrC,QAAQ,QAAQsC,MAAM,eAAlC,mBAOR,kBAACI,EAAA,EAAD,CAAKC,GAAI,EAAGG,QAAQ,OAAOC,eAAe,YACxC,kBAACC,EAAA,EAAD,CAAQwE,KAAK,QAAQlF,MAAM,YAAYtC,QAAQ,aAA/C,iBAIF,kBAAC0C,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACN,EAAA,EAAD,CAAYrC,QAAQ,QAAQsC,MAAM,iBAAlC,4EAEa,IACX,kBAACwB,EAAA,EAAD,CAAMxB,MAAM,YAAYyB,UAAWC,IAAYC,GAAG,KAAlD,4BAHF,QApEC,MC5DLpG,GAAYC,aAAW,SAACoF,GAAD,MAAmB,CAC9CnF,KAAM,CACJ0J,gBAAiBvE,EAAMwE,QAAQC,WAAWC,KAC1CC,UAAW,OACXC,WAAY5E,EAAMhC,QAAQ,GAC1B6G,cAAe7E,EAAMhC,QAAQ,QAgDlB8G,UA5CS,WACtB,IAAM5J,EAAUP,KADY,EAEQwI,mBAAiB,WAFzB,mBAErB4B,EAFqB,KAETC,EAFS,KAe5B,OACE,kBAACC,EAAA,EAAD,CAAMlK,UAAWG,EAAQL,KAAM8C,MAAM,YACnC,kBAACuH,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,EAAD,MACA,kBAAC3F,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC2F,EAAA,EAAD,CACE1G,SAVe,SAACkD,EAAwBlH,GAChDsK,EAActK,IAUN2K,cAAc,OACd3K,MAAOqK,EACPjI,QAAQ,aACRwI,UAAU,aArBP,CACX,CAAE5K,MAAO,UAAW8D,MAAO,YAsBb+G,KAAI,SAAAC,GAAG,OACX,kBAACC,EAAA,EAAD,CAAKC,IAAKF,EAAI9K,MAAO8D,MAAOgH,EAAIhH,MAAO9D,MAAO8K,EAAI9K,aAIxD,kBAACkD,EAAA,EAAD,MACA,kBAAC4B,EAAA,EAAD,CAAKC,GAAI,GACS,YAAfsF,GAA4B,kBAAC,EAAD,MACb,iBAAfA,GAAiC,kBAAC,GAAD,MAClB,kBAAfA,GAAkC,kBAAC,EAAD,MACnB,aAAfA,GAA6B,kBAAC,GAAD","file":"static/js/46.958706b5.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","export default [\n  { text: 'Afghanistan', value: 'AF' },\n  { text: 'Åland Islands', value: 'AX' },\n  { text: 'Albania', value: 'AL' },\n  { text: 'Algeria', value: 'DZ' },\n  { text: 'American Samoa', value: 'AS' },\n  { text: 'Andorra', value: 'AD' },\n  { text: 'Angola', value: 'AO' },\n  { text: 'Anguilla', value: 'AI' },\n  { text: 'Antarctica', value: 'AQ' },\n  { text: 'Antigua and Barbuda', value: 'AG' },\n  { text: 'Argentina', value: 'AR' },\n  { text: 'Armenia', value: 'AM' },\n  { text: 'Aruba', value: 'AW' },\n  { text: 'Australia', value: 'AU' },\n  { text: 'Austria', value: 'AT' },\n  { text: 'Azerbaijan', value: 'AZ' },\n  { text: 'Bahamas', value: 'BS' },\n  { text: 'Bahrain', value: 'BH' },\n  { text: 'Bangladesh', value: 'BD' },\n  { text: 'Barbados', value: 'BB' },\n  { text: 'Belarus', value: 'BY' },\n  { text: 'Belgium', value: 'BE' },\n  { text: 'Belize', value: 'BZ' },\n  { text: 'Benin', value: 'BJ' },\n  { text: 'Bermuda', value: 'BM' },\n  { text: 'Bhutan', value: 'BT' },\n  { text: 'Bolivia', value: 'BO' },\n  { text: 'Bosnia and Herzegovina', value: 'BA' },\n  { text: 'Botswana', value: 'BW' },\n  { text: 'Bouvet Island', value: 'BV' },\n  { text: 'Brazil', value: 'BR' },\n  { text: 'British Indian Ocean Territory', value: 'IO' },\n  { text: 'Brunei Darussalam', value: 'BN' },\n  { text: 'Bulgaria', value: 'BG' },\n  { text: 'Burkina Faso', value: 'BF' },\n  { text: 'Burundi', value: 'BI' },\n  { text: 'Cambodia', value: 'KH' },\n  { text: 'Cameroon', value: 'CM' },\n  { text: 'Canada', value: 'CA' },\n  { text: 'Cape Verde', value: 'CV' },\n  { text: 'Cayman Islands', value: 'KY' },\n  { text: 'Central African Republic', value: 'CF' },\n  { text: 'Chad', value: 'TD' },\n  { text: 'Chile', value: 'CL' },\n  { text: 'China', value: 'CN' },\n  { text: 'Christmas Island', value: 'CX' },\n  { text: 'Cocos (Keeling) Islands', value: 'CC' },\n  { text: 'Colombia', value: 'CO' },\n  { text: 'Comoros', value: 'KM' },\n  { text: 'Congo', value: 'CG' },\n  { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n  { text: 'Cook Islands', value: 'CK' },\n  { text: 'Costa Rica', value: 'CR' },\n  { text: \"Cote D'Ivoire\", value: 'CI' },\n  { text: 'Croatia', value: 'HR' },\n  { text: 'Cuba', value: 'CU' },\n  { text: 'Cyprus', value: 'CY' },\n  { text: 'Czech Republic', value: 'CZ' },\n  { text: 'Denmark', value: 'DK' },\n  { text: 'Djibouti', value: 'DJ' },\n  { text: 'Dominica', value: 'DM' },\n  { text: 'Dominican Republic', value: 'DO' },\n  { text: 'Ecuador', value: 'EC' },\n  { text: 'Egypt', value: 'EG' },\n  { text: 'El Salvador', value: 'SV' },\n  { text: 'Equatorial Guinea', value: 'GQ' },\n  { text: 'Eritrea', value: 'ER' },\n  { text: 'Estonia', value: 'EE' },\n  { text: 'Ethiopia', value: 'ET' },\n  { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n  { text: 'Faroe Islands', value: 'FO' },\n  { text: 'Fiji', value: 'FJ' },\n  { text: 'Finland', value: 'FI' },\n  { text: 'France', value: 'FR' },\n  { text: 'French Guiana', value: 'GF' },\n  { text: 'French Polynesia', value: 'PF' },\n  { text: 'French Southern Territories', value: 'TF' },\n  { text: 'Gabon', value: 'GA' },\n  { text: 'Gambia', value: 'GM' },\n  { text: 'Georgia', value: 'GE' },\n  { text: 'Germany', value: 'DE' },\n  { text: 'Ghana', value: 'GH' },\n  { text: 'Gibraltar', value: 'GI' },\n  { text: 'Greece', value: 'GR' },\n  { text: 'Greenland', value: 'GL' },\n  { text: 'Grenada', value: 'GD' },\n  { text: 'Guadeloupe', value: 'GP' },\n  { text: 'Guam', value: 'GU' },\n  { text: 'Guatemala', value: 'GT' },\n  { text: 'Guernsey', value: 'GG' },\n  { text: 'Guinea', value: 'GN' },\n  { text: 'Guinea-Bissau', value: 'GW' },\n  { text: 'Guyana', value: 'GY' },\n  { text: 'Haiti', value: 'HT' },\n  { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n  { text: 'Holy See (Vatican City State)', value: 'VA' },\n  { text: 'Honduras', value: 'HN' },\n  { text: 'Hong Kong', value: 'HK' },\n  { text: 'Hungary', value: 'HU' },\n  { text: 'Iceland', value: 'IS' },\n  { text: 'India', value: 'IN' },\n  { text: 'Indonesia', value: 'ID' },\n  { text: 'Iran, Islamic Republic Of', value: 'IR' },\n  { text: 'Iraq', value: 'IQ' },\n  { text: 'Ireland', value: 'IE' },\n  { text: 'Isle of Man', value: 'IM' },\n  { text: 'Israel', value: 'IL' },\n  { text: 'Italy', value: 'IT' },\n  { text: 'Jamaica', value: 'JM' },\n  { text: 'Japan', value: 'JP' },\n  { text: 'Jersey', value: 'JE' },\n  { text: 'Jordan', value: 'JO' },\n  { text: 'Kazakhstan', value: 'KZ' },\n  { text: 'Kenya', value: 'KE' },\n  { text: 'Kiribati', value: 'KI' },\n  { text: \"Korea, Democratic People'S Republic of\", value: 'KP' },\n  { text: 'Korea, Republic of', value: 'KR' },\n  { text: 'Kuwait', value: 'KW' },\n  { text: 'Kyrgyzstan', value: 'KG' },\n  { text: \"Lao People'S Democratic Republic\", value: 'LA' },\n  { text: 'Latvia', value: 'LV' },\n  { text: 'Lebanon', value: 'LB' },\n  { text: 'Lesotho', value: 'LS' },\n  { text: 'Liberia', value: 'LR' },\n  { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n  { text: 'Liechtenstein', value: 'LI' },\n  { text: 'Lithuania', value: 'LT' },\n  { text: 'Luxembourg', value: 'LU' },\n  { text: 'Macao', value: 'MO' },\n  { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n  { text: 'Madagascar', value: 'MG' },\n  { text: 'Malawi', value: 'MW' },\n  { text: 'Malaysia', value: 'MY' },\n  { text: 'Maldives', value: 'MV' },\n  { text: 'Mali', value: 'ML' },\n  { text: 'Malta', value: 'MT' },\n  { text: 'Marshall Islands', value: 'MH' },\n  { text: 'Martinique', value: 'MQ' },\n  { text: 'Mauritania', value: 'MR' },\n  { text: 'Mauritius', value: 'MU' },\n  { text: 'Mayotte', value: 'YT' },\n  { text: 'Mexico', value: 'MX' },\n  { text: 'Micronesia, Federated States of', value: 'FM' },\n  { text: 'Moldova, Republic of', value: 'MD' },\n  { text: 'Monaco', value: 'MC' },\n  { text: 'Mongolia', value: 'MN' },\n  { text: 'Montserrat', value: 'MS' },\n  { text: 'Morocco', value: 'MA' },\n  { text: 'Mozambique', value: 'MZ' },\n  { text: 'Myanmar', value: 'MM' },\n  { text: 'Namibia', value: 'NA' },\n  { text: 'Nauru', value: 'NR' },\n  { text: 'Nepal', value: 'NP' },\n  { text: 'Netherlands', value: 'NL' },\n  { text: 'Netherlands Antilles', value: 'AN' },\n  { text: 'New Caledonia', value: 'NC' },\n  { text: 'New Zealand', value: 'NZ' },\n  { text: 'Nicaragua', value: 'NI' },\n  { text: 'Niger', value: 'NE' },\n  { text: 'Nigeria', value: 'NG' },\n  { text: 'Niue', value: 'NU' },\n  { text: 'Norfolk Island', value: 'NF' },\n  { text: 'Northern Mariana Islands', value: 'MP' },\n  { text: 'Norway', value: 'NO' },\n  { text: 'Oman', value: 'OM' },\n  { text: 'Pakistan', value: 'PK' },\n  { text: 'Palau', value: 'PW' },\n  { text: 'Palestinian Territory, Occupied', value: 'PS' },\n  { text: 'Panama', value: 'PA' },\n  { text: 'Papua New Guinea', value: 'PG' },\n  { text: 'Paraguay', value: 'PY' },\n  { text: 'Peru', value: 'PE' },\n  { text: 'Philippines', value: 'PH' },\n  { text: 'Pitcairn', value: 'PN' },\n  { text: 'Poland', value: 'PL' },\n  { text: 'Portugal', value: 'PT' },\n  { text: 'Puerto Rico', value: 'PR' },\n  { text: 'Qatar', value: 'QA' },\n  { text: 'Reunion', value: 'RE' },\n  { text: 'Romania', value: 'RO' },\n  { text: 'Russian Federation', value: 'RU' },\n  { text: 'RWANDA', value: 'RW' },\n  { text: 'Saint Helena', value: 'SH' },\n  { text: 'Saint Kitts and Nevis', value: 'KN' },\n  { text: 'Saint Lucia', value: 'LC' },\n  { text: 'Saint Pierre and Miquelon', value: 'PM' },\n  { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n  { text: 'Samoa', value: 'WS' },\n  { text: 'San Marino', value: 'SM' },\n  { text: 'Sao Tome and Principe', value: 'ST' },\n  { text: 'Saudi Arabia', value: 'SA' },\n  { text: 'Senegal', value: 'SN' },\n  { text: 'Serbia and Montenegro', value: 'CS' },\n  { text: 'Seychelles', value: 'SC' },\n  { text: 'Sierra Leone', value: 'SL' },\n  { text: 'Singapore', value: 'SG' },\n  { text: 'Slovakia', value: 'SK' },\n  { text: 'Slovenia', value: 'SI' },\n  { text: 'Solomon Islands', value: 'SB' },\n  { text: 'Somalia', value: 'SO' },\n  { text: 'South Africa', value: 'ZA' },\n  { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n  { text: 'Spain', value: 'ES' },\n  { text: 'Sri Lanka', value: 'LK' },\n  { text: 'Sudan', value: 'SD' },\n  { text: 'Suriname', value: 'SR' },\n  { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n  { text: 'Swaziland', value: 'SZ' },\n  { text: 'Sweden', value: 'SE' },\n  { text: 'Switzerland', value: 'CH' },\n  { text: 'Syrian Arab Republic', value: 'SY' },\n  { text: 'Taiwan, Province of China', value: 'TW' },\n  { text: 'Tajikistan', value: 'TJ' },\n  { text: 'Tanzania, United Republic of', value: 'TZ' },\n  { text: 'Thailand', value: 'TH' },\n  { text: 'Timor-Leste', value: 'TL' },\n  { text: 'Togo', value: 'TG' },\n  { text: 'Tokelau', value: 'TK' },\n  { text: 'Tonga', value: 'TO' },\n  { text: 'Trinidad and Tobago', value: 'TT' },\n  { text: 'Tunisia', value: 'TN' },\n  { text: 'Turkey', value: 'TR' },\n  { text: 'Turkmenistan', value: 'TM' },\n  { text: 'Turks and Caicos Islands', value: 'TC' },\n  { text: 'Tuvalu', value: 'TV' },\n  { text: 'Uganda', value: 'UG' },\n  { text: 'Ukraine', value: 'UA' },\n  { text: 'United Arab Emirates', value: 'AE' },\n  { text: 'United Kingdom', value: 'GB' },\n  { text: 'United States', value: 'US' },\n  { text: 'United States Minor Outlying Islands', value: 'UM' },\n  { text: 'Uruguay', value: 'UY' },\n  { text: 'Uzbekistan', value: 'UZ' },\n  { text: 'Vanuatu', value: 'VU' },\n  { text: 'Venezuela', value: 'VE' },\n  { text: 'Viet Nam', value: 'VN' },\n  { text: 'Virgin Islands, British', value: 'VG' },\n  { text: 'Virgin Islands, U.S.', value: 'VI' },\n  { text: 'Wallis and Futuna', value: 'WF' },\n  { text: 'Western Sahara', value: 'EH' },\n  { text: 'Yemen', value: 'YE' },\n  { text: 'Zambia', value: 'ZM' },\n  { text: 'Zimbabwe', value: 'ZW' }\n];\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  makeStyles,\n  Switch,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport clsx from 'clsx';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { User } from 'src/types/user';\nimport wait from 'src/utils/wait';\nimport * as Yup from 'yup';\nimport countries from './countries';\n\ninterface GeneralSettingsProps {\n  className?: string;\n  user: User;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst GeneralSettings: FC<GeneralSettingsProps> = ({\n  className,\n  user,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        canHire: user.canHire || false,\n        city: user.city || '',\n        country: user.country || '',\n        email: user.email || '',\n        isPublic: user.isPublic || false,\n        name: user.name || '',\n        phone: user.phone || '',\n        state: user.state || '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        canHire: Yup.bool(),\n        city: Yup.string().max(255),\n        country: Yup.string().max(255),\n        email: Yup.string()\n          .email('Must be a valid email')\n          .max(255)\n          .required('Email is required'),\n        isPublic: Yup.bool(),\n        name: Yup.string().max(255).required('Name is required'),\n        phone: Yup.string(),\n        state: Yup.string()\n      })}\n      onSubmit={async (\n        values,\n        { resetForm, setErrors, setStatus, setSubmitting }\n      ) => {\n        try {\n          // NOTE: Make API request\n          await wait(200);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Profile updated', {\n            variant: 'success'\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card className={clsx(classes.root, className)} {...rest}>\n            <CardHeader title=\"Profile\" />\n            <Divider />\n            <CardContent>\n              <Grid container spacing={4}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Name\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={\n                      touched.email && errors.email\n                        ? errors.email\n                        : 'We will use this email to contact you'\n                    }\n                    label=\"Email Address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Phone Number\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <Autocomplete\n                    getOptionLabel={option => option.text}\n                    options={countries}\n                    renderInput={params => (\n                      <TextField\n                        fullWidth\n                        label=\"Country\"\n                        name=\"country\"\n                        onChange={handleChange}\n                        variant=\"outlined\"\n                        {...params}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.state && errors.state)}\n                    fullWidth\n                    helperText={touched.state && errors.state}\n                    label=\"State/Region\"\n                    name=\"state\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.state}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.city && errors.city)}\n                    fullWidth\n                    helperText={touched.city && errors.city}\n                    label=\"City\"\n                    name=\"city\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.city}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                {user.name !== 'AMD' && (\n                  <>\n                    <Grid item md={6} xs={12}>\n                      <Typography variant=\"h6\" color=\"textPrimary\">\n                        Make Contact Info Public\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        Means that anyone viewing your profile will be able to\n                        see your contacts details\n                      </Typography>\n                      <Switch\n                        checked={values.isPublic}\n                        edge=\"start\"\n                        name=\"isPublic\"\n                        onChange={handleChange}\n                      />\n                    </Grid>\n                    <Grid item md={6} xs={12}>\n                      <Typography variant=\"h6\" color=\"textPrimary\">\n                        Available to hire\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        Toggling this will let companies know that you are\n                        available for new campaigns\n                      </Typography>\n                      <Switch\n                        checked={values.canHire}\n                        edge=\"start\"\n                        name=\"canHire\"\n                        onChange={handleChange}\n                      />\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>{errors.submit}</FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Save Changes\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  user: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Link,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Theme } from 'src/theme';\nimport { User } from 'src/types/user';\n\ninterface ProfileDetailsProps {\n  className?: string;\n  user: User;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst ProfileDetails: FC<ProfileDetailsProps> = ({\n  className,\n  user,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardContent>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          textAlign=\"center\"\n        >\n          <Avatar className={classes.avatar} src={user.avatar} />\n          <Typography\n            className={classes.name}\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.name}\n          </Typography>\n          <Typography color=\"textPrimary\" variant=\"body1\">\n            Your tier:{' '}\n            <Link component={RouterLink} to=\"#\">\n              {user.tier}\n            </Link>\n          </Typography>\n        </Box>\n      </CardContent>\n      <CardActions>\n        <Button fullWidth variant=\"text\">\n          Remove picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  user: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","import { Grid, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport useAuth from 'src/hooks/useAuth';\nimport GeneralSettings from './GeneralSettings';\nimport ProfileDetails from './ProfileDetails';\n\ninterface GeneralProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst General: FC<GeneralProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid item lg={4} md={6} xl={3} xs={12}>\n        <ProfileDetails user={user} />\n      </Grid>\n      <Grid item lg={8} md={6} xl={9} xs={12}>\n        <GeneralSettings user={user} />\n      </Grid>\n    </Grid>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import { Breadcrumbs, Link, makeStyles, Typography } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link color=\"inherit\" to=\"/app\" component={RouterLink}>\n          Dashboard\n        </Link>\n        <Typography color=\"textPrimary\">Account</Typography>\n      </Breadcrumbs>\n      <Typography variant=\"h3\" color=\"textPrimary\">\n        Settings\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, FormEvent } from 'react';\nimport wait from 'src/utils/wait';\n\ninterface NotificationProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Notifications: FC<NotificationProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  const handleSubmit = async (\n    event: FormEvent<HTMLFormElement>\n  ): Promise<void> => {\n    event.preventDefault();\n    // NOTE: Make API request\n    await wait(500);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Card className={clsx(classes.root, className)} {...rest}>\n        <CardHeader title=\"Notifications\" />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={6} wrap=\"wrap\">\n            <Grid item md={4} sm={6} xs={12}>\n              <Typography gutterBottom variant=\"h6\" color=\"textPrimary\">\n                System\n              </Typography>\n              <Typography gutterBottom variant=\"body2\" color=\"textSecondary\">\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox defaultChecked />}\n                  label=\"Email alerts\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Push Notifications\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox defaultChecked />}\n                  label=\"Text message\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox defaultChecked />}\n                  label={\n                    <>\n                      <Typography variant=\"body1\" color=\"textPrimary\">\n                        Phone calls\n                      </Typography>\n                      <Typography variant=\"caption\">\n                        Short voice phone updating you\n                      </Typography>\n                    </>\n                  }\n                />\n              </div>\n            </Grid>\n            <Grid item md={4} sm={6} xs={12}>\n              <Typography gutterBottom variant=\"h6\" color=\"textPrimary\">\n                Chat App\n              </Typography>\n              <Typography gutterBottom variant=\"body2\" color=\"textSecondary\">\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox defaultChecked />}\n                  label=\"Email\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox defaultChecked />}\n                  label=\"Push notifications\"\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n          <Button color=\"secondary\" type=\"submit\" variant=\"contained\">\n            Save Settings\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  makeStyles,\n  TextField\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport wait from 'src/utils/wait';\nimport * as Yup from 'yup';\n\ninterface SecurityProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Security: FC<SecurityProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        password: '',\n        passwordConfirm: '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        password: Yup.string()\n          .min(7, 'Must be at least 7 characters')\n          .max(255)\n          .required('Required'),\n        passwordConfirm: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Required')\n      })}\n      onSubmit={async (\n        values,\n        { resetForm, setErrors, setStatus, setSubmitting }\n      ) => {\n        try {\n          // NOTE: Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Password updated', {\n            variant: 'success'\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card className={clsx(classes.root, className)} {...rest}>\n            <CardHeader title=\"Change Password\" />\n            <Divider />\n            <CardContent>\n              <Grid container spacing={3}>\n                <Grid item md={4} sm={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={4} sm={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      touched.passwordConfirm && errors.passwordConfirm\n                    )}\n                    fullWidth\n                    helperText={\n                      touched.passwordConfirm && errors.passwordConfirm\n                    }\n                    label=\"Password Confirmation\"\n                    name=\"passwordConfirm\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.passwordConfirm}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>{errors.submit}</FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Change Password\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nSecurity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Security;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Link,\n  makeStyles,\n  Paper,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport axios from 'src/utils/axios';\n\ninterface SubscriptionProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  overview: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column-reverse',\n      alignItems: 'flex-start'\n    }\n  },\n  productImage: {\n    marginRight: theme.spacing(1),\n    height: 48,\n    width: 48\n  },\n  details: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }\n  }\n}));\n\nconst Subscription: FC<SubscriptionProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [subscription, setSubscription] = useState<any | null>(null);\n\n  const getSubscription = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/account/subscription');\n\n      if (isMountedRef.current) {\n        setSubscription(response.data.subscription);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getSubscription();\n  }, [getSubscription]);\n\n  if (!subscription) {\n    return null;\n  }\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader title=\"Manage your subscription\" />\n      <Divider />\n      <CardContent>\n        <Paper variant=\"outlined\">\n          <Box className={classes.overview}>\n            <div>\n              <Typography display=\"inline\" variant=\"h4\" color=\"textPrimary\">\n                {subscription.currency}\n                {subscription.price}\n              </Typography>\n              <Typography display=\"inline\" variant=\"subtitle1\">\n                /mo\n              </Typography>\n            </div>\n            <Box display=\"flex\" alignItems=\"center\">\n              <img\n                alt=\"Product\"\n                className={classes.productImage}\n                src=\"/static/images/products/product_premium.svg\"\n              />\n              <Typography variant=\"overline\" color=\"textSecondary\">\n                {subscription.name}\n              </Typography>\n            </Box>\n          </Box>\n          <Divider />\n          <Box className={classes.details}>\n            <div>\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                {`${subscription.proposalsLeft} proposals left`}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                {`${subscription.templatesLeft} templates`}\n              </Typography>\n            </div>\n            <div>\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                {`${subscription.invitesLeft} invites left`}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textPrimary\">\n                {`${subscription.adsLeft} ads left`}\n              </Typography>\n            </div>\n            <div>\n              {subscription.hasAnalytics && (\n                <Typography variant=\"body2\" color=\"textPrimary\">\n                  Analytics dashboard\n                </Typography>\n              )}\n              {subscription.hasEmailAlerts && (\n                <Typography variant=\"body2\" color=\"textPrimary\">\n                  Email alerts\n                </Typography>\n              )}\n            </div>\n          </Box>\n        </Paper>\n        <Box mt={2} display=\"flex\" justifyContent=\"flex-end\">\n          <Button size=\"small\" color=\"secondary\" variant=\"contained\">\n            Upgrade plan\n          </Button>\n        </Box>\n        <Box mt={2}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            The refunds don&apos;t work once you have the subscription, but you\n            can always{' '}\n            <Link color=\"secondary\" component={RouterLink} to=\"#\">\n              Cancel your subscription\n            </Link>\n            .\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nSubscription.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Subscription;\n","import {\n  Box,\n  Container,\n  Divider,\n  makeStyles,\n  Tab,\n  Tabs\n} from '@material-ui/core';\nimport React, { ChangeEvent, FC, useState } from 'react';\nimport Page from 'src/components/Page';\nimport { Theme } from 'src/theme';\nimport General from './General';\nimport Header from './Header';\nimport Notifications from './Notifications';\nimport Security from './Security';\nimport Subscription from './Subscription';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst AccountView: FC = () => {\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState<string>('general');\n\n  const tabs = [\n    { value: 'general', label: 'General' }\n    // { value: 'subscription', label: 'Subscription' },\n    // { value: 'notifications', label: 'Notifications' },\n    // { value: 'security', label: 'Security' }\n  ];\n\n  const handleTabsChange = (event: ChangeEvent<{}>, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page className={classes.root} title=\"Settings\">\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            variant=\"scrollable\"\n            textColor=\"secondary\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box mt={3}>\n          {currentTab === 'general' && <General />}\n          {currentTab === 'subscription' && <Subscription />}\n          {currentTab === 'notifications' && <Notifications />}\n          {currentTab === 'security' && <Security />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default AccountView;\n"],"sourceRoot":""}