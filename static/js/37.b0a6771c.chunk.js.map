{"version":3,"sources":["hooks/useIsMountedRef.ts","utils/getInitials.ts","components/Label.tsx","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/GenericMoreButton.tsx","../node_modules/@material-ui/icons/AttachMoney.js","../node_modules/@material-ui/icons/FolderOpenOutlined.js","views/reports/DashboardView/Header.tsx","views/reports/DashboardView/LatestProjects.tsx","views/reports/DashboardView/NewProjects.tsx","views/reports/DashboardView/PerformanceOverTime/Chart.tsx","views/reports/DashboardView/PerformanceOverTime/index.tsx","views/reports/DashboardView/RoiPerCustomer.tsx","views/reports/DashboardView/TodaysMoney.tsx","views/reports/DashboardView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","CardContent","React","props","ref","_props$component","component","Component","other","_objectWithoutProperties","_extends","withStyles","paddingBottom","menu","width","maxWidth","memo","moreRef","useState","openMenu","setOpenMenu","title","onClick","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","timeRanges","text","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","item","Breadcrumbs","separator","aria-label","Link","variant","to","RouterLink","Typography","Button","startIcon","SvgIcon","Menu","getContentAnchorEl","_timeRange","MenuItem","key","process","technology","marginLeft","LatestProjects","isMountedRef","projects","setProjects","history","useHistory","getProjects","useCallback","a","axios","get","response","tempProjects","push","data","console","Card","CardHeader","action","GenericMoreButton","Divider","Box","Table","TableHead","TableRow","TableCell","align","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","project","hover","id","Avatar","alt","src","author","avatar","ml","numeral","budget","format","currency","moment","createdAt","label","contrastText","NewProjects","gutterBottom","flexWrap","position","Chart","dataProp","labels","useTheme","options","responsive","maintainAspectRatio","animation","legend","layout","scales","xAxes","gridLines","drawBorder","ticks","fontColor","yAxes","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","callback","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","borderWidth","borderColor","background","titleFontColor","bodyFontColor","footerFontColor","callbacks","tooltipItem","yLabel","canvas","gradient","getContext","createLinearGradient","addColorStop","datasets","pointBorderColor","pointBorderWidth","pointRadius","pointBackgroundColor","chart","PerformanceOverTime","performance","thisWeek","thisMonth","thisYear","RoiPerCustomer","TodaysMoney","dark","minHeight","paddingTop","DashboardView","Page","Container","lg","sm","xs","xl"],"mappings":"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","file":"static/js/37.b0a6771c.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","const getInitials = (name: string = '') => {\n  return name\n    .replace(/\\s+/, ' ')\n    .split(' ')\n    .slice(0, 2)\n    .map(v => v && v[0].toUpperCase())\n    .join('');\n};\n\nexport default getInitials;\n","import { fade, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, ReactNode } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface LabelProps {\n  className?: string;\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'success';\n  children?: ReactNode;\n  style?: {};\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label: FC<LabelProps> = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={clsx(\n        classes.root,\n        {\n          [classes[color]]: color\n        },\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import {\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Tooltip\n} from '@material-ui/core';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport React, { FC, memo, useRef, useState } from 'react';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nconst GenericMoreButton: FC = props => {\n  const classes = useStyles();\n  const moreRef = useRef<any>(null);\n  const [openMenu, setOpenMenu] = useState<boolean>(false);\n\n  const handleMenuOpen = (): void => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = (): void => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton onClick={handleMenuOpen} ref={moreRef} {...props}>\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(GenericMoreButton);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4z\"\n}), 'AttachMoney');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10z\"\n}), 'FolderOpenOutlined');\n\nexports.default = _default;","import {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  makeStyles,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useRef, useState } from 'react';\nimport { Calendar as CalendarIcon } from 'react-feather';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface HeaderProps {\n  className?: string;\n}\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header: FC<HeaderProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const actionRef = useRef<any>(null);\n  const [isMenuOpen, setMenuOpen] = useState<boolean>(false);\n  const [timeRange, setTimeRange] = useState<string>(timeRanges[2].text);\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography variant=\"body1\" color=\"textPrimary\">\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          Here&apos;s what&apos;s happening\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <CalendarIcon />\n            </SvgIcon>\n          }\n        >\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map(_timeRange => (\n            <MenuItem\n              key={_timeRange.value}\n              onClick={() => setTimeRange(_timeRange.text)}\n            >\n              {_timeRange.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { useHistory } from 'react-router';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport { Project } from 'src/types/reports';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\n\ninterface LatestProjectsProps {\n  className?: string;\n}\n\nconst technologyMap: Record<string, string> = {\n  'html-css': `${process.env.PUBLIC_URL}/static/images/technologies/html.svg`,\n  'react-js': `${process.env.PUBLIC_URL}/static/images/technologies/react-js.svg`,\n  'vue-js': `${process.env.PUBLIC_URL}/static/images/technologies/vue-js.svg`,\n  angular: `${process.env.PUBLIC_URL}/static/images/technologies/angular.svg`,\n  figma: `${process.env.PUBLIC_URL}/static/images/technologies/figma.svg`,\n  sketch: `${process.env.PUBLIC_URL}/static/images/technologies/sketch.svg`\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  technology: {\n    height: 30,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  }\n}));\n\nconst LatestProjects: FC<LatestProjectsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState<Project[]>([]);\n  const history = useHistory();\n\n  const getProjects = useCallback(async () => {\n    try {\n      const response = await axios.get<{ projects: Project[] }>(\n        '/api/reports/latest-projects'\n      );\n\n      if (isMountedRef.current) {\n        let tempProjects = [];\n        tempProjects.push(response.data.projects[0]);\n\n        setProjects(tempProjects);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, [getProjects]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader action={<GenericMoreButton />} title=\"Active Campaigns\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={900}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Title</TableCell>\n                <TableCell>Author</TableCell>\n                <TableCell>Budget</TableCell>\n                {/* <TableCell>Area</TableCell> */}\n                <TableCell align=\"right\" sortDirection=\"desc\">\n                  <Tooltip enterDelay={300} title=\"Sort\">\n                    <TableSortLabel active direction=\"desc\">\n                      Created\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {projects.map(project => (\n                <TableRow\n                  hover\n                  key={project.id}\n                  onClick={() => history.push('/app/projects/1')}\n                >\n                  <TableCell>{project.title}</TableCell>\n                  <TableCell>\n                    <Box display=\"flex\" alignItems=\"center\">\n                      <Avatar alt=\"Author\" src={project.author.avatar}>\n                        {getInitials(project.author.name)}\n                      </Avatar>\n                      <Box ml={1}>{project.author.name}</Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {numeral(project.budget).format(\n                      `${project.currency}0,0.00`\n                    )}\n                  </TableCell>\n                  {/* <TableCell>Telekom</TableCell> */}\n                  <TableCell align=\"right\">\n                    {moment(project.createdAt).format('DD MMM, YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      {/* <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/projects\"\n          endIcon={<NavigateNextIcon />}\n        >\n          See all\n        </Button>\n      </Box> */}\n    </Card>\n  );\n};\n\nLatestProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProjects;\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpenOutlined';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface NewProjectsProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst NewProjects: FC<NewProjectsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: 12,\n    difference: -10\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          New Campaigns\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            {data.value}\n          </Typography>\n          {/* <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}%\n          </Label> */}\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <FolderOpenIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nNewProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default NewProjects;\n","import { fade, makeStyles, useTheme } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Theme } from 'src/theme';\n\ninterface ChartProps {\n  className?: string;\n  data: any[];\n  labels: string[];\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nconst Chart: FC<ChartProps> = ({\n  className,\n  data: dataProp,\n  labels,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const theme: Theme = useTheme();\n\n  const data = (canvas: HTMLCanvasElement) => {\n    const ctx = canvas.getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n\n    gradient.addColorStop(0, fade(theme.palette.secondary.main, 0.2));\n    gradient.addColorStop(0.9, 'rgba(255,255,255,0)');\n    gradient.addColorStop(1, 'rgba(255,255,255,0)');\n\n    return {\n      datasets: [\n        {\n          data: dataProp,\n          backgroundColor: gradient,\n          borderColor: theme.palette.secondary.main,\n          pointBorderColor: theme.palette.background.default,\n          pointBorderWidth: 3,\n          pointRadius: 6,\n          pointBackgroundColor: theme.palette.secondary.main\n        }\n      ],\n      labels\n    };\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 7,\n            callback: (value: number) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.default,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem: any) => {\n          let label = `Income: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\ninterface PerformanceOverTimeProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: '100%'\n  }\n}));\n\nconst PerformanceOverTime: FC<PerformanceOverTimeProps> = ({\n  className,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const performance = {\n    thisWeek: {\n      data: [],\n      labels: []\n    },\n    thisMonth: {\n      data: [],\n      labels: []\n    },\n    thisYear: {\n      data: [10, 5, 11, 20, 13, 28, 18, 4, 13, 12, 13, 5],\n      labels: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec'\n      ]\n    }\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Performance Over Time\"\n      />\n      <Divider />\n      <CardContent>\n        <PerfectScrollbar>\n          <Box height={375} minWidth={500}>\n            <Chart\n              className={classes.chart}\n              data={performance.thisYear.data}\n              labels={performance.thisYear.labels}\n            />\n          </Box>\n        </PerfectScrollbar>\n      </CardContent>\n    </Card>\n  );\n};\n\nPerformanceOverTime.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PerformanceOverTime;\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Theme } from 'src/theme';\n\ninterface RoiPerCustomerProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.contrastText,\n    color: theme.palette.secondary.main,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst RoiPerCustomer: FC<RoiPerCustomerProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '25.50',\n    currency: '$'\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          color=\"inherit\"\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n        >\n          Roi per campaign\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography color=\"inherit\" variant=\"h3\">\n            {data.currency}\n            {data.value}\n          </Typography>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar} color=\"inherit\">\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nRoiPerCustomer.propTypes = {\n  className: PropTypes.string\n};\n\nexport default RoiPerCustomer;\n","import { Avatar, Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport Label from 'src/components/Label';\nimport { Theme } from 'src/theme';\n\ninterface TodaysMoneyProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText,\n    height: 48,\n    width: 48\n  }\n}));\n\nconst TodaysMoney: FC<TodaysMoneyProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const data = {\n    value: '24,000',\n    currency: '$',\n    difference: 4\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box flexGrow={1}>\n        <Typography\n          component=\"h3\"\n          gutterBottom\n          variant=\"overline\"\n          color=\"textSecondary\"\n        >\n          Todays money\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\">\n          <Typography variant=\"h3\" color=\"textPrimary\">\n            {data.currency}\n            {data.value}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={data.difference > 0 ? 'success' : 'error'}\n          >\n            {data.difference > 0 ? '+' : ''}\n            {data.difference}%\n          </Label>\n        </Box>\n      </Box>\n      <Avatar className={classes.avatar}>\n        <AttachMoneyIcon />\n      </Avatar>\n    </Card>\n  );\n};\n\nTodaysMoney.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TodaysMoney;\n","import { Container, Grid, makeStyles } from '@material-ui/core';\nimport React, { FC } from 'react';\nimport Page from 'src/components/Page';\nimport { Theme } from 'src/theme';\nimport Header from './Header';\nimport LatestProjects from './LatestProjects';\nimport NewProjects from './NewProjects';\nimport PerformanceOverTime from './PerformanceOverTime';\nimport RoiPerCustomer from './RoiPerCustomer';\nimport TodaysMoney from './TodaysMoney';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst DashboardView: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Page className={classes.root} title=\"Dashboard\">\n      <Container maxWidth={false}>\n        <Header />\n        <Grid container spacing={3}>\n          <Grid item lg={3} sm={6} xs={12}>\n            <TodaysMoney />\n          </Grid>\n          <Grid item lg={3} sm={6} xs={12}>\n            <NewProjects />\n          </Grid>\n          {/* <Grid\n            item\n            lg={3}\n            sm={6}\n            xs={12}\n          >\n            <SystemHealth />\n          </Grid> */}\n          <Grid item lg={3} sm={6} xs={12}>\n            <RoiPerCustomer />\n          </Grid>\n          {/* <Grid\n            item\n            lg={3}\n            xs={12}\n          >\n            <RealTime />\n          </Grid> */}\n          <Grid item lg={9} xs={12}>\n            <PerformanceOverTime />\n          </Grid>\n          {/* <Grid\n            item\n            lg={5}\n            xl={4}\n            xs={12}\n          >\n            <TeamTasks />\n          </Grid> */}\n          <Grid item lg={7} xl={8} xs={12}>\n            <LatestProjects />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default DashboardView;\n"],"sourceRoot":""}