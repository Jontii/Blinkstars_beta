{"version":3,"sources":["utils/getInitials.ts","components/QuillEditor.tsx","views/mail/MailView/Compose.tsx","views/mail/MailView/MailDetails/MailReply.tsx","views/mail/MailView/MailDetails/Toolbar.tsx","views/mail/MailView/MailDetails/index.tsx","views/mail/MailView/MailList/MailItem.tsx","views/mail/MailView/MailList/Toolbar.tsx","views/mail/MailView/MailList/index.tsx","views/mail/MailView/Sidebar/LabelItem.tsx","views/mail/MailView/Sidebar/index.tsx","views/mail/MailView/index.tsx"],"names":["getInitials","name","replace","split","slice","map","v","toUpperCase","join","useStyles","makeStyles","theme","root","borderLeft","borderTop","borderRight","borderBottom","palette","divider","color","secondary","main","stroke","text","primary","padding","spacing","backgroundColor","background","default","border","boxShadow","shadows","borderRadius","shape","fontFamily","typography","fontSize","QuillEditor","className","rest","classes","clsx","maxWidth","maxHeight","width","position","bottom","right","margin","outline","zIndex","display","flexDirection","minHeight","fullScreen","height","input","editor","flexGrow","action","marginRight","Compose","dispatch","useDispatch","isComposeOpen","useSelector","state","mail","useState","setFullScreen","messageBody","setMessageBody","Portal","Backdrop","open","Paper","elevation","Box","bgcolor","alignItems","py","px","Typography","variant","IconButton","onClick","SvgIcon","closeCompose","p","Input","disableUnderline","placeholder","Divider","onChange","value","Button","Tooltip","title","size","avatar","textareaContainer","textarea","body1","resize","fileInput","MailReply","user","useAuth","fileInputRef","useRef","setValue","handleAttach","current","click","Avatar","alt","src","TextareaAutosize","event","persist","target","rows","mt","ref","type","flexShrink","searchContainer","marginLeft","paddingBottom","paddingLeft","paddingRight","paddingTop","searchInput","Toolbar","history","useHistory","useParams","systemLabel","customLabel","push","Hidden","mdDown","overflowY","date","whiteSpace","message","marginBottom","MailDetails","mailId","mails","byId","useEffect","getMail","justifyContent","from","ml","Link","email","to","person","key","moment","createdAt","format","smDown","subject","source","hover","unread","content","left","top","error","fontWeight","fontWeightBold","selected","filterActive","colors","amber","cursor","textDecoration","details","breakpoints","up","minWidth","flexBasis","overflow","textOverflow","label","pxToRem","common","white","MailItem","onDeselect","onSelect","params","labels","getTo","id","isUnread","mr","Checkbox","checked","isStarred","isImportant","component","RouterLink","labelIds","length","mx","labelId","find","_label","style","defaultProps","onDeselectAll","onSelectAll","selectedMails","selectedAllMails","selectedSomeMails","mdUp","openSidebar","indeterminate","noWrap","dark","MailList","setSelectedMails","getMails","allIds","prevSelectedMails","filter","handleDeselectOneMail","includes","handleSelectOneMail","systemLabelIcons","all","MailIcon","inbox","InboxIcon","trash","DeleteIcon","drafts","DraftsIcon","spam","ReportIcon","sent","SendIcon","starred","StarIcon","important","LabelImportantIcon","borderTopRightRadius","borderBottomRightRadius","fontWeightRegular","active","fontWeightMedium","labelRoot","icon","LabelItem","Icon","LabelIcon","getIcon","getColor","displayUnreadCount","Boolean","unreadCount","ListItem","ButtonBase","activeClassName","drawerDesktopRoot","drawerDesktopPaper","drawerMobilePaper","drawerMobileBackdrop","Sidebar","containerRef","location","useLocation","isSidebarOpen","closeSidebar","pathname","fullWidth","openCompose","pr","List","Drawer","paper","onClose","BackdropProps","ModalProps","container","MailView","pageRef","getLabels","Page"],"mappings":"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","file":"static/js/44.f8c03db8.chunk.js","sourcesContent":["const getInitials = (name: string = '') => {\r\n  return name\r\n    .replace(/\\s+/, ' ')\r\n    .split(' ')\r\n    .slice(0, 2)\r\n    .map(v => v && v[0].toUpperCase())\r\n    .join('');\r\n};\r\n\r\nexport default getInitials;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport { Theme } from 'src/theme';\r\n\r\n// NOTE: At this moment, this ReactQuill does not export\r\n// the types for props and we cannot extend them\r\ninterface QuillEditorProps {\r\n  className?: string;\r\n  [key: string]: any;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    '& .ql-toolbar': {\r\n      borderLeft: 'none',\r\n      borderTop: 'none',\r\n      borderRight: 'none',\r\n      borderBottom: `1px solid ${theme.palette.divider}`,\r\n      '& .ql-picker-label:hover': {\r\n        color: theme.palette.secondary.main\r\n      },\r\n      '& .ql-picker-label.ql-active': {\r\n        color: theme.palette.secondary.main\r\n      },\r\n      '& .ql-picker-item:hover': {\r\n        color: theme.palette.secondary.main\r\n      },\r\n      '& .ql-picker-item.ql-selected': {\r\n        color: theme.palette.secondary.main\r\n      },\r\n      '& button:hover': {\r\n        color: theme.palette.secondary.main,\r\n        '& .ql-stroke': {\r\n          stroke: theme.palette.secondary.main\r\n        }\r\n      },\r\n      '& button:focus': {\r\n        color: theme.palette.secondary.main,\r\n        '& .ql-stroke': {\r\n          stroke: theme.palette.secondary.main\r\n        }\r\n      },\r\n      '& button.ql-active': {\r\n        '& .ql-stroke': {\r\n          stroke: theme.palette.secondary.main\r\n        }\r\n      },\r\n      '& .ql-stroke': {\r\n        stroke: theme.palette.text.primary\r\n      },\r\n      '& .ql-picker': {\r\n        color: theme.palette.text.primary\r\n      },\r\n      '& .ql-picker-options': {\r\n        padding: theme.spacing(2),\r\n        backgroundColor: theme.palette.background.default,\r\n        border: 'none',\r\n        boxShadow: theme.shadows[10],\r\n        borderRadius: theme.shape.borderRadius\r\n      }\r\n    },\r\n    '& .ql-container': {\r\n      border: 'none',\r\n      '& .ql-editor': {\r\n        fontFamily: theme.typography.fontFamily,\r\n        fontSize: 16,\r\n        color: theme.palette.text.primary,\r\n        '&.ql-blank::before': {\r\n          color: theme.palette.text.secondary\r\n        }\r\n      }\r\n    }\r\n  }\r\n}));\r\n\r\nconst QuillEditor: FC<QuillEditorProps> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    // @ts-ignore\r\n    <ReactQuill className={clsx(classes.root, className)} {...rest} />\r\n  );\r\n};\r\n\r\nQuillEditor.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default QuillEditor;\r\n","import {\r\n  Backdrop,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  IconButton,\r\n  Input,\r\n  makeStyles,\r\n  Paper,\r\n  Portal,\r\n  SvgIcon,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport clsx from 'clsx';\r\nimport React, { FC, useState } from 'react';\r\nimport {\r\n  Maximize as MaximizeIcon,\r\n  Minimize as MinimizeIcon,\r\n  X as XIcon\r\n} from 'react-feather';\r\nimport QuillEditor from 'src/components/QuillEditor';\r\nimport { closeCompose } from 'src/slices/mail';\r\nimport { useDispatch, useSelector } from 'src/store';\r\nimport { Theme } from 'src/theme';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    maxWidth: `calc(100% - ${theme.spacing(6)}px)`,\r\n    maxHeight: `calc(100% - ${theme.spacing(6)}px)`,\r\n    width: 600,\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    right: 0,\r\n    margin: theme.spacing(3),\r\n    outline: 'none',\r\n    zIndex: 2000,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: 500\r\n  },\r\n  fullScreen: {\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  input: {\r\n    width: '100%'\r\n  },\r\n  editor: {\r\n    flexGrow: 1,\r\n    '& .ql-editor': {\r\n      minHeight: 300\r\n    }\r\n  },\r\n  action: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Compose: FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { isComposeOpen } = useSelector(state => state.mail);\r\n  const [fullScreen, setFullScreen] = useState<boolean>(false);\r\n  const [messageBody, setMessageBody] = useState<string>('');\r\n\r\n  const handleChange = (value: string): void => {\r\n    setMessageBody(value);\r\n  };\r\n\r\n  const handleExitFullScreen = (): void => {\r\n    setFullScreen(false);\r\n  };\r\n\r\n  const handleEnterFullScreen = (): void => {\r\n    setFullScreen(true);\r\n  };\r\n\r\n  const handleClose = (): void => {\r\n    dispatch(closeCompose());\r\n  };\r\n\r\n  if (!isComposeOpen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Portal>\r\n      <Backdrop open={fullScreen} />\r\n      <Paper\r\n        className={clsx(classes.root, { [classes.fullScreen]: fullScreen })}\r\n        elevation={12}\r\n      >\r\n        <Box\r\n          bgcolor=\"background.dark\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          py={1}\r\n          px={2}\r\n        >\r\n          <Typography variant=\"h5\" color=\"textPrimary\">\r\n            New Message\r\n          </Typography>\r\n          <Box flexGrow={1} />\r\n          {fullScreen ? (\r\n            <IconButton onClick={handleExitFullScreen}>\r\n              <SvgIcon fontSize=\"small\">\r\n                <MinimizeIcon />\r\n              </SvgIcon>\r\n            </IconButton>\r\n          ) : (\r\n            <IconButton onClick={handleEnterFullScreen}>\r\n              <SvgIcon fontSize=\"small\">\r\n                <MaximizeIcon />\r\n              </SvgIcon>\r\n            </IconButton>\r\n          )}\r\n          <IconButton onClick={handleClose}>\r\n            <SvgIcon fontSize=\"small\">\r\n              <XIcon />\r\n            </SvgIcon>\r\n          </IconButton>\r\n        </Box>\r\n        <Box p={2}>\r\n          <Input className={classes.input} disableUnderline placeholder=\"To\" />\r\n          <Input\r\n            className={classes.input}\r\n            disableUnderline\r\n            placeholder=\"Subject\"\r\n          />\r\n        </Box>\r\n        <Divider />\r\n        <QuillEditor\r\n          className={classes.editor}\r\n          onChange={handleChange}\r\n          placeholder=\"Leave a message\"\r\n          value={messageBody}\r\n        />\r\n        <Divider />\r\n        <Box display=\"flex\" alignItems=\"center\" py={1} px={2}>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            className={classes.action}\r\n          >\r\n            Send\r\n          </Button>\r\n          <Tooltip title=\"Attach image\">\r\n            <IconButton size=\"small\" className={classes.action}>\r\n              <AddPhotoIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Attach file\">\r\n            <IconButton size=\"small\" className={classes.action}>\r\n              <AttachFileIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Paper>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default Compose;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  TextareaAutosize,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { ChangeEvent, FC, useRef, useState } from 'react';\r\nimport useAuth from 'src/hooks/useAuth';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface MailReplyProps {\r\n  className?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  textareaContainer: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2)\r\n  },\r\n  textarea: {\r\n    ...theme.typography.body1,\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n    border: 'none',\r\n    outline: 'none',\r\n    resize: 'none',\r\n    width: '100%'\r\n  },\r\n  action: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  fileInput: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\nconst MailReply: FC<MailReplyProps> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const { user } = useAuth();\r\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\r\n  const [value, setValue] = useState<string>('');\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLTextAreaElement>): void => {\r\n    event.persist();\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleAttach = (): void => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Avatar alt=\"Person\" className={classes.avatar} src={user.avatar} />\r\n      <Paper className={classes.textareaContainer} variant=\"outlined\">\r\n        <TextareaAutosize\r\n          className={classes.textarea}\r\n          onChange={handleChange}\r\n          placeholder=\"Leave a message\"\r\n          rows={3}\r\n          value={value}\r\n        />\r\n        <Box display=\"flex\" alignItems=\"center\" mt={2}>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            className={classes.action}\r\n          >\r\n            Send\r\n          </Button>\r\n          <Tooltip title=\"Attach image\">\r\n            <IconButton\r\n              size=\"small\"\r\n              className={classes.action}\r\n              onClick={handleAttach}\r\n            >\r\n              <AddPhotoIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Attach file\">\r\n            <IconButton\r\n              size=\"small\"\r\n              className={classes.action}\r\n              onClick={handleAttach}\r\n            >\r\n              <AttachFileIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Paper>\r\n      <input className={classes.fileInput} ref={fileInputRef} type=\"file\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nMailReply.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default MailReply;\r\n","import {\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Input,\r\n  makeStyles,\r\n  Paper,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface ToolbarProps {\r\n  className?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    alignItems: 'center',\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    flexShrink: 0,\r\n    height: 68,\r\n    padding: theme.spacing(2)\r\n  },\r\n  searchContainer: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    marginLeft: theme.spacing(2),\r\n    paddingBottom: theme.spacing(0.5),\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    paddingTop: theme.spacing(0.5)\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Toolbar: FC<ToolbarProps> = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { systemLabel, customLabel } = useParams();\r\n\r\n  const handleBack = (): void => {\r\n    if (systemLabel) {\r\n      return history.push(`/app/mail/${systemLabel}`);\r\n    }\r\n\r\n    if (customLabel) {\r\n      return history.push(`/app/mail/label/${customLabel}`);\r\n    }\r\n\r\n    return history.push('/app/mail/inbox');\r\n  };\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Tooltip title=\"Back\">\r\n        <IconButton onClick={handleBack}>\r\n          <ArrowBackIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Box flexGrow={1} />\r\n      <Hidden mdDown>\r\n        <Paper className={classes.searchContainer} variant=\"outlined\">\r\n          <SearchIcon color=\"action\" />\r\n          <Input\r\n            className={classes.searchInput}\r\n            disableUnderline\r\n            placeholder=\"Search message\"\r\n          />\r\n        </Paper>\r\n      </Hidden>\r\n      <Tooltip title=\"Previous mail\">\r\n        <IconButton>\r\n          <KeyboardArrowLeftIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title=\"Next mail\">\r\n        <IconButton>\r\n          <KeyboardArrowRightIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Hidden,\r\n  IconButton,\r\n  Link,\r\n  makeStyles,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport ReplyAllIcon from '@material-ui/icons/ReplyAllOutlined';\r\nimport ReplyIcon from '@material-ui/icons/ReplyOutlined';\r\nimport moment from 'moment';\r\nimport React, { FC, useEffect } from 'react';\r\nimport Markdown from 'react-markdown/with-html';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMail } from 'src/slices/mail';\r\nimport { useDispatch, useSelector } from 'src/store';\r\nimport { Theme } from 'src/theme';\r\nimport getInitials from 'src/utils/getInitials';\r\nimport MailReply from './MailReply';\r\nimport Toolbar from './Toolbar';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n    overflowY: 'auto'\r\n  },\r\n  avatar: {\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  date: {\r\n    whiteSpace: 'nowrap'\r\n  },\r\n  message: {\r\n    color: theme.palette.text.secondary,\r\n    '& > p': {\r\n      ...theme.typography.body1,\r\n      marginBottom: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n\r\nconst MailDetails: FC = () => {\r\n  const classes = useStyles();\r\n  const { mailId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const mail = useSelector(state => state.mail.mails.byId[mailId]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getMail(mailId));\r\n  }, [dispatch, mailId]);\r\n\r\n  if (!mail) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Toolbar />\r\n      <Divider />\r\n      <Box p={3} display=\"flex\" justifyContent=\"space-between\" flexShrink={0}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Avatar className={classes.avatar} src={mail.from.avatar}>\r\n            {getInitials(mail.from.name)}\r\n          </Avatar>\r\n          <Box ml={2}>\r\n            <Typography display=\"inline\" variant=\"h5\" color=\"textPrimary\">\r\n              {mail.from.name}\r\n            </Typography>{' '}\r\n            <Link color=\"textSecondary\" display=\"inline\" variant=\"body2\">\r\n              {mail.from.email}\r\n            </Link>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              To:{' '}\r\n              {mail.to.map(person => (\r\n                <Link color=\"inherit\" key={person.email}>\r\n                  {person.email}\r\n                </Link>\r\n              ))}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.date}\r\n              color=\"textSecondary\"\r\n              variant=\"caption\"\r\n            >\r\n              {moment(mail.createdAt).format('MMMM Do YYYY, h:mm:ss a')}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Hidden smDown>\r\n            <Tooltip title=\"Reply\">\r\n              <IconButton>\r\n                <ReplyIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Reply all\">\r\n              <IconButton>\r\n                <ReplyAllIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n              <IconButton>\r\n                <DeleteIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Hidden>\r\n          <Tooltip title=\"More options\">\r\n            <IconButton>\r\n              <MoreIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n      <Divider />\r\n      <Box flexGrow={1} py={6} px={3} bgcolor=\"background.dark\">\r\n        <Typography variant=\"h1\" color=\"textPrimary\">\r\n          {mail.subject}\r\n        </Typography>\r\n        <Box mt={2}>\r\n          <Markdown source={mail.message} className={classes.message} />\r\n        </Box>\r\n      </Box>\r\n      <Divider />\r\n      <MailReply />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MailDetails;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Checkbox,\r\n  colors,\r\n  Hidden,\r\n  IconButton,\r\n  makeStyles,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport React, { ChangeEvent, FC } from 'react';\r\nimport { Link as RouterLink, useParams } from 'react-router-dom';\r\nimport { useSelector } from 'src/store';\r\nimport { Theme } from 'src/theme';\r\nimport { Mail } from 'src/types/mail';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\ninterface MailItemProps {\r\n  className?: string;\r\n  mail: Mail;\r\n  onDeselect?: () => void;\r\n  onSelect?: () => void;\r\n  selected: boolean;\r\n}\r\n\r\nconst getTo = (params: any, mailId: string): string => {\r\n  const { systemLabel, customLabel } = params;\r\n  const baseUrl = '/app/mail';\r\n\r\n  if (systemLabel) {\r\n    return `${baseUrl}/${systemLabel}/${mailId}`;\r\n  }\r\n\r\n  if (customLabel) {\r\n    return `${baseUrl}/label/${customLabel}/${mailId}`;\r\n  }\r\n\r\n  return baseUrl;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(2),\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  },\r\n  unread: {\r\n    position: 'relative',\r\n    '&:before': {\r\n      content: '\" \"',\r\n      height: '100%',\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: 0,\r\n      width: 4,\r\n      backgroundColor: theme.palette.error.main\r\n    },\r\n    '& $name, & $subject': {\r\n      fontWeight: theme.typography.fontWeightBold\r\n    }\r\n  },\r\n  selected: {\r\n    backgroundColor: theme.palette.action.selected\r\n  },\r\n  filterActive: {\r\n    color: colors.amber[400]\r\n  },\r\n  content: {\r\n    cursor: 'pointer',\r\n    textDecoration: 'none'\r\n  },\r\n  details: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      flexGrow: 1\r\n    }\r\n  },\r\n  name: {\r\n    [theme.breakpoints.up('md')]: {\r\n      minWidth: 180,\r\n      flexBasis: 180\r\n    }\r\n  },\r\n  subject: {\r\n    maxWidth: 400,\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis'\r\n  },\r\n  message: {\r\n    maxWidth: 800,\r\n    flexGrow: 1,\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    marginRight: 'auto'\r\n  },\r\n  label: {\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    color: theme.palette.common.white,\r\n    paddingLeft: 4,\r\n    paddingRight: 4,\r\n    paddingTop: 2,\r\n    paddingBottom: 2,\r\n    borderRadius: 2,\r\n    '& + &': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  date: {\r\n    whiteSpace: 'nowrap'\r\n  }\r\n}));\r\n\r\nconst MailItem: FC<MailItemProps> = ({\r\n  className,\r\n  mail,\r\n  onDeselect,\r\n  onSelect,\r\n  selected,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const { labels } = useSelector(state => state.mail);\r\n\r\n  const handleCheckboxChange = (event: ChangeEvent<HTMLInputElement>): void =>\r\n    event.target.checked ? onSelect() : onDeselect();\r\n\r\n  const handleStarToggle = (): void => {\r\n    // dispatch action\r\n  };\r\n\r\n  const handleImportantToggle = (): void => {\r\n    // dispatch action\r\n  };\r\n\r\n  const to = getTo(params, mail.id);\r\n\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        classes.root,\r\n        {\r\n          [classes.unread]: !mail.isUnread,\r\n          [classes.selected]: selected\r\n        },\r\n        className\r\n      )}\r\n      {...rest}\r\n    >\r\n      <Hidden smDown>\r\n        <Box mr={1} display=\"flex\" alignItems=\"center\">\r\n          <Checkbox checked={selected} onChange={handleCheckboxChange} />\r\n          <Tooltip title=\"Starred\">\r\n            <IconButton onClick={handleStarToggle}>\r\n              {mail.isStarred ? (\r\n                <StarIcon className={classes.filterActive} />\r\n              ) : (\r\n                <StarBorderIcon />\r\n              )}\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Important\">\r\n            <IconButton onClick={handleImportantToggle}>\r\n              {mail.isImportant ? (\r\n                <LabelImportantIcon className={classes.filterActive} />\r\n              ) : (\r\n                <LabelImportantOutlinedIcon />\r\n              )}\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Hidden>\r\n      <Box\r\n        minWidth=\"1px\"\r\n        display=\"flex\"\r\n        flexGrow={1}\r\n        component={RouterLink}\r\n        // @ts-ignore\r\n        to={to}\r\n        className={classes.content}\r\n      >\r\n        <Avatar src={mail.from.avatar}>{getInitials(mail.from.name)}</Avatar>\r\n        <Box minWidth=\"1px\" ml={1} className={classes.details}>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"textPrimary\"\r\n            className={classes.name}\r\n          >\r\n            {mail.from.name}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            className={classes.subject}\r\n          >\r\n            {mail.subject}\r\n          </Typography>\r\n          <Hidden smDown>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              className={classes.message}\r\n            >\r\n              <Box component=\"span\" ml={2}>\r\n                -\r\n              </Box>\r\n              {mail.message}\r\n            </Typography>\r\n            {mail.labelIds.length > 0 && (\r\n              <Box display=\"flex\" mx={2}>\r\n                {mail.labelIds.map((labelId: string) => {\r\n                  const label = labels.find(_label => _label.id === labelId);\r\n\r\n                  if (!label) return null;\r\n\r\n                  return (\r\n                    <span\r\n                      style={{ backgroundColor: label.color }}\r\n                      key={label.id}\r\n                      className={classes.label}\r\n                    >\r\n                      {label.name}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </Box>\r\n            )}\r\n          </Hidden>\r\n          <Typography\r\n            className={classes.date}\r\n            color=\"textSecondary\"\r\n            variant=\"caption\"\r\n          >\r\n            {moment(mail.createdAt).format('DD MMM YYYY')}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nMailItem.propTypes = {\r\n  className: PropTypes.string,\r\n  // @ts-ignore\r\n  mail: PropTypes.object.isRequired,\r\n  onDeselect: PropTypes.func,\r\n  onSelect: PropTypes.func,\r\n  selected: PropTypes.bool.isRequired\r\n};\r\n\r\nMailItem.defaultProps = {\r\n  onDeselect: () => {},\r\n  onSelect: () => {}\r\n};\r\n\r\nexport default MailItem;\r\n","import {\r\n  Box,\r\n  Checkbox,\r\n  Hidden,\r\n  IconButton,\r\n  Input,\r\n  makeStyles,\r\n  Paper,\r\n  SvgIcon,\r\n  Tooltip,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { ChangeEvent, FC } from 'react';\r\nimport { Menu as MenuIcon, Search as SearchIcon } from 'react-feather';\r\nimport { openSidebar } from 'src/slices/mail';\r\nimport { useDispatch } from 'src/store';\r\nimport { Theme } from 'src/theme';\r\n\r\ninterface ToolbarProps {\r\n  className?: string;\r\n  mails: number;\r\n  onDeselectAll?: () => void;\r\n  onSelectAll?: () => void;\r\n  selectedMails: number;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(2),\r\n    height: 68,\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  searchContainer: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    marginLeft: theme.spacing(2),\r\n    paddingBottom: theme.spacing(0.5),\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    paddingTop: theme.spacing(0.5)\r\n  },\r\n  searchInput: {\r\n    marginLeft: theme.spacing(2),\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst Toolbar: FC<ToolbarProps> = ({\r\n  className,\r\n  mails,\r\n  onDeselectAll,\r\n  onSelectAll,\r\n  selectedMails,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOpenSidebar = (): void => {\r\n    dispatch(openSidebar());\r\n  };\r\n\r\n  const handleCheckboxChange = (event: ChangeEvent<HTMLInputElement>) =>\r\n    event.target.checked ? onSelectAll() : onDeselectAll();\r\n\r\n  const selectedAllMails = selectedMails === mails && mails > 0;\r\n  const selectedSomeMails = selectedMails > 0 && selectedMails < mails;\r\n\r\n  return (\r\n    <div className={clsx(classes.root, className)} {...rest}>\r\n      <Hidden mdUp>\r\n        <IconButton onClick={handleOpenSidebar}>\r\n          <SvgIcon fontSize=\"small\">\r\n            <MenuIcon />\r\n          </SvgIcon>\r\n        </IconButton>\r\n      </Hidden>\r\n      <Hidden smDown>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Checkbox\r\n            checked={selectedAllMails}\r\n            indeterminate={selectedSomeMails}\r\n            onChange={handleCheckboxChange}\r\n          />\r\n          <Typography variant=\"h6\" color=\"textPrimary\">\r\n            Select all\r\n          </Typography>\r\n        </Box>\r\n        <Box flexGrow={1} />\r\n        <Paper className={classes.searchContainer} variant=\"outlined\">\r\n          <SvgIcon color=\"action\" fontSize=\"small\">\r\n            <SearchIcon />\r\n          </SvgIcon>\r\n          <Input\r\n            className={classes.searchInput}\r\n            disableUnderline\r\n            placeholder=\"Search mail\"\r\n          />\r\n        </Paper>\r\n        <Tooltip title=\"Refresh\">\r\n          <IconButton>\r\n            <RefreshIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"More options\">\r\n          <IconButton>\r\n            <MoreIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Tooltip title=\"Next page\">\r\n            <IconButton>\r\n              <KeyboardArrowLeftIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          {mails > 0 && (\r\n            <>\r\n              <Typography noWrap variant=\"body2\" color=\"textSecondary\">\r\n                1 - {mails} of {mails}\r\n              </Typography>\r\n              <Tooltip title=\"Previous page\">\r\n                <IconButton>\r\n                  <KeyboardArrowRightIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string,\r\n  mails: PropTypes.number.isRequired,\r\n  onDeselectAll: PropTypes.func,\r\n  onSelectAll: PropTypes.func,\r\n  selectedMails: PropTypes.number.isRequired\r\n};\r\n\r\nToolbar.defaultProps = {\r\n  onDeselectAll: () => {},\r\n  onSelectAll: () => {}\r\n};\r\n\r\nexport default Toolbar;\r\n","import { Divider, makeStyles } from '@material-ui/core';\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMails } from 'src/slices/mail';\r\nimport { useDispatch, useSelector } from 'src/store';\r\nimport { Theme } from 'src/theme';\r\nimport MailItem from './MailItem';\r\nimport Toolbar from './Toolbar';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.dark\r\n  }\r\n}));\r\n\r\nconst MailList: FC = () => {\r\n  const classes = useStyles();\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const { mails } = useSelector(state => state.mail);\r\n  const [selectedMails, setSelectedMails] = useState<string[]>([]);\r\n\r\n  const handleSelectAllMails = (): void => {\r\n    setSelectedMails(mails.allIds.map(mailId => mailId));\r\n  };\r\n\r\n  const handleDeselectAllMails = (): void => {\r\n    setSelectedMails([]);\r\n  };\r\n\r\n  const handleSelectOneMail = (mailId: string): void => {\r\n    setSelectedMails(prevSelectedMails => {\r\n      if (!prevSelectedMails.includes(mailId)) {\r\n        return [...prevSelectedMails, mailId];\r\n      }\r\n\r\n      return prevSelectedMails;\r\n    });\r\n  };\r\n\r\n  const handleDeselectOneMail = (mailId: string): void => {\r\n    setSelectedMails(prevSelectedMails =>\r\n      prevSelectedMails.filter(id => id !== mailId)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getMails(params));\r\n  }, [dispatch, params]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Toolbar\r\n        onDeselectAll={handleDeselectAllMails}\r\n        onSelectAll={handleSelectAllMails}\r\n        selectedMails={selectedMails.length}\r\n        mails={mails.allIds.length}\r\n      />\r\n      <Divider />\r\n      {mails.allIds.map((mailId: string) => (\r\n        <MailItem\r\n          mail={mails.byId[mailId]}\r\n          key={mailId}\r\n          onDeselect={() => handleDeselectOneMail(mailId)}\r\n          onSelect={() => handleSelectOneMail(mailId)}\r\n          selected={selectedMails.includes(mailId)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MailList;\r\n","import {\r\n  ButtonBase,\r\n  ListItem,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport ReportIcon from '@material-ui/icons/Report';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport { Theme } from 'src/theme';\r\nimport { Label } from 'src/types/mail';\r\n\r\ninterface LabelItemProps {\r\n  label: Label;\r\n}\r\n\r\nconst systemLabelIcons = {\r\n  all: MailIcon,\r\n  inbox: InboxIcon,\r\n  trash: DeleteIcon,\r\n  drafts: DraftsIcon,\r\n  spam: ReportIcon,\r\n  sent: SendIcon,\r\n  starred: StarIcon,\r\n  important: LabelImportantIcon\r\n};\r\n\r\nconst getIcon = (label: any) => {\r\n  if (label.type === 'system_label') {\r\n    return systemLabelIcons[label.id];\r\n  }\r\n\r\n  return LabelIcon;\r\n};\r\n\r\nconst getTo = (label: any): string => {\r\n  const baseUrl = '/app/mail';\r\n\r\n  if (label.type === 'system_label') {\r\n    return `${baseUrl}/${label.id}`;\r\n  }\r\n\r\n  if (label.type === 'custom_label') {\r\n    return `${baseUrl}/label/${label.name}`;\r\n  }\r\n\r\n  return baseUrl;\r\n};\r\n\r\nconst getColor = (label: any): string => {\r\n  if (label.type === 'custom_label') {\r\n    return label.color;\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: 0\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: 36,\r\n    color: theme.palette.text.secondary,\r\n    borderTopRightRadius: 18,\r\n    borderBottomRightRadius: 18,\r\n    paddingRight: 18,\r\n    paddingLeft: 32,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.action.hover\r\n    }\r\n  },\r\n  active: {\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    backgroundColor: theme.palette.action.selected\r\n  },\r\n  label: {\r\n    fontWeight: 'inherit',\r\n    color: 'inherit'\r\n  },\r\n  labelRoot: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1, 0)\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  text: {\r\n    fontWeight: 'inherit',\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst LabelItem: FC<LabelItemProps> = ({ label, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  const Icon = getIcon(label);\r\n  const to = getTo(label);\r\n  const color = getColor(label);\r\n  const displayUnreadCount = Boolean(\r\n    label.unreadCount && label.unreadCount > 0\r\n  );\r\n\r\n  return (\r\n    <ListItem className={classes.root} {...rest}>\r\n      <ButtonBase\r\n        activeClassName={classes.active}\r\n        component={RouterLink}\r\n        to={to}\r\n        className={classes.content}\r\n      >\r\n        <Icon className={classes.icon} color=\"inherit\" style={{ color }} />\r\n        <Typography className={classes.text} variant=\"body2\">\r\n          {label.name}\r\n        </Typography>\r\n        {displayUnreadCount && (\r\n          <Typography color=\"inherit\" variant=\"caption\">\r\n            {label.unreadCount}\r\n          </Typography>\r\n        )}\r\n      </ButtonBase>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nLabelItem.propTypes = {\r\n  // @ts-ignore\r\n  label: PropTypes.object.isRequired\r\n};\r\n\r\nexport default LabelItem;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { closeSidebar, openCompose } from 'src/slices/mail';\r\nimport { useDispatch, useSelector } from 'src/store';\r\nimport LabelItem from './LabelItem';\r\n\r\ninterface SidebarProps {\r\n  containerRef: any;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  drawerDesktopRoot: {\r\n    width: 280,\r\n    flexShrink: 0\r\n  },\r\n  drawerDesktopPaper: {\r\n    position: 'relative'\r\n  },\r\n  drawerMobilePaper: {\r\n    position: 'relative',\r\n    width: 280\r\n  },\r\n  drawerMobileBackdrop: {\r\n    position: 'absolute'\r\n  }\r\n}));\r\n\r\nconst Sidebar: FC<SidebarProps> = ({ containerRef }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const { labels, isSidebarOpen } = useSelector(state => state.mail);\r\n\r\n  const handleCloseSidebar = (): void => {\r\n    dispatch(closeSidebar());\r\n  };\r\n\r\n  const handleComposeClick = (): void => {\r\n    dispatch(openCompose());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSidebarOpen) {\r\n      dispatch(closeSidebar());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <div>\r\n      <Box px={3} py={2}>\r\n        <Button\r\n          color=\"secondary\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          onClick={handleComposeClick}\r\n        >\r\n          Compose\r\n        </Button>\r\n      </Box>\r\n      <Divider />\r\n      <Box py={2} pr={2}>\r\n        <List>\r\n          {labels.map(label => (\r\n            <LabelItem key={label.id} label={label} />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden smDown>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            root: classes.drawerDesktopRoot,\r\n            paper: classes.drawerDesktopPaper\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          open={isSidebarOpen}\r\n          onClose={handleCloseSidebar}\r\n          classes={{\r\n            paper: classes.drawerMobilePaper\r\n          }}\r\n          style={{ position: 'absolute', zIndex: 1200 }}\r\n          BackdropProps={{ classes: { root: classes.drawerMobileBackdrop } }}\r\n          ModalProps={{ container: () => containerRef.current }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  containerRef: PropTypes.any.isRequired\r\n};\r\n\r\nexport default Sidebar;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport React, { FC, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Page from 'src/components/Page';\r\nimport { getLabels } from 'src/slices/mail';\r\nimport { useDispatch } from 'src/store';\r\nimport Compose from './Compose';\r\nimport MailDetails from './MailDetails';\r\nimport MailList from './MailList';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    overflow: 'hidden',\r\n    position: 'relative'\r\n  }\r\n}));\r\n\r\nconst MailView: FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { mailId } = useParams();\r\n  const pageRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getLabels());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Mail\" ref={pageRef}>\r\n      <Sidebar containerRef={pageRef} />\r\n      {mailId ? <MailDetails /> : <MailList />}\r\n      <Compose />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MailView;\r\n"],"sourceRoot":""}