{"version":3,"sources":["hooks/useIsMountedRef.ts","components/PostAdd.tsx","components/PostCard/Comment.tsx","components/PostCard/CommentAdd.tsx","components/PostCard/Reactions.tsx","components/PostCard/index.tsx","views/social/ProfileView/Connections.tsx","views/social/ProfileView/Header.tsx","views/social/ProfileView/Timeline/About.tsx","views/social/ProfileView/Timeline/index.tsx","views/social/ProfileView/index.tsx"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","inputContainer","flexGrow","paddingBottom","spacing","paddingLeft","paddingRight","paddingTop","divider","height","width","fileInput","display","PostAdd","className","rest","classes","fileInputRef","useState","value","setValue","user","useAuth","handleAttach","click","clsx","alignItems","variant","disableUnderline","fullWidth","onChange","event","persist","target","placeholder","name","title","color","length","edge","onClick","ref","type","marginBottom","bubble","borderRadius","shape","Comment","comment","Avatar","alt","component","RouterLink","src","author","avatar","to","Box","p","ml","bgcolor","mb","Link","Typography","moment","createdAt","fromNow","message","marginLeft","CommentAdd","Paper","Input","Tooltip","IconButton","Divider","likedButton","colors","red","Reactions","post","isLiked","setLiked","likes","setLikes","prevLikes","fontSize","date","media","backgroundPosition","PostCard","undefined","selectedImage","setSelectedImage","Card","CardHeader","disableTypography","subheader","px","pb","mt","CardActionArea","CardMedia","image","my","comments","map","key","id","large","onClose","connectStatusMap","connected","not_connected","pending","searchInput","Connections","isMountedRef","enqueueSnackbar","useSnackbar","connections","setConnections","search","setSearch","getConnections","useCallback","a","axios","get","response","data","py","SvgIcon","Grid","container","filter","connection","toLowerCase","includes","item","xs","md","mx","gutterBottom","commonConnections","status","Button","size","connectionId","prevConnections","_","clone","newConnection","cover","position","backgroundSize","backgroundRepeat","content","top","left","backgroundImage","visibility","changeButton","bottom","right","backgroundColor","blueGrey","palette","common","white","breakpoints","down","border","action","Header","profile","connectedStatus","setConnectedStatus","handleConnectToggle","prevConnectedStatus","style","startIcon","Container","maxWidth","bio","Hidden","smDown","jobAvatar","secondary","main","cityAvatar","About","CardContent","LinearProgress","profileProgress","quote","List","ListItem","disableGutters","ListItemAvatar","ListItemText","primary","currentJob","href","company","previousJob","primaryTypographyProps","currentCity","originCity","email","Timeline","posts","setPosts","getPosts","console","error","lg","background","dark","minHeight","ProfileView","currentTab","setCurrentTab","setProfile","Page","Tabs","scrollButtons","textColor","label","tab","Tab"],"mappings":"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","file":"static/js/41.8b90565a.chunk.js","sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nconst useIsMountedRef = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import {\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  IconButton,\n  Input,\n  makeStyles,\n  Paper,\n  Tooltip\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport SendIcon from '@material-ui/icons/Send';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { ChangeEvent, FC, useRef, useState } from 'react';\nimport useAuth from 'src/hooks/useAuth';\nimport { Theme } from 'src/theme';\n\ninterface PostAddProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  inputContainer: {\n    flexGrow: 1,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingTop: theme.spacing(0.5)\n  },\n  divider: {\n    height: 24,\n    width: 1\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nconst PostAdd: FC<PostAddProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const [value, setValue] = useState<string>('');\n  const { user } = useAuth();\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = (): void => {\n    if(fileInputRef && fileInputRef.current)\n      fileInputRef.current.click()\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardContent>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Paper className={classes.inputContainer} variant=\"outlined\">\n            <Input\n              disableUnderline\n              fullWidth\n              onChange={handleChange}\n              placeholder={`What's on your mind, ${user?.name}`}\n            />\n          </Paper>\n          <Tooltip title=\"Send\">\n            <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n              <SendIcon />\n            </IconButton>\n          </Tooltip>\n          <Divider className={classes.divider} />\n          <Tooltip title=\"Attach image\">\n            <IconButton edge=\"end\" onClick={handleAttach}>\n              <AddPhotoIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Attach file\">\n            <IconButton edge=\"end\" onClick={handleAttach}>\n              <AttachFileIcon />\n            </IconButton>\n          </Tooltip>\n          <input className={classes.fileInput} ref={fileInputRef} type=\"file\" />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nPostAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default PostAdd;\n","import { Avatar, Box, Link, makeStyles, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Theme } from 'src/theme';\nimport { PostComment } from 'src/types/social';\n\ninterface CommentProps {\n  className?: string;\n  comment: PostComment;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'flex',\n    marginBottom: theme.spacing(2)\n  },\n  bubble: {\n    borderRadius: theme.shape.borderRadius\n  }\n}));\n\nconst Comment: FC<CommentProps> = ({ className, comment, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Avatar\n        alt=\"Person\"\n        component={RouterLink}\n        src={comment.author.avatar}\n        to=\"#\"\n      />\n      <Box\n        flexGrow={1}\n        p={2}\n        ml={2}\n        bgcolor=\"background.dark\"\n        className={classes.bubble}\n      >\n        <Box display=\"flex\" alignItems=\"center\" mb={1}>\n          <Link color=\"textPrimary\" component={RouterLink} to=\"#\" variant=\"h6\">\n            {comment.author.name}\n          </Link>\n          <Box flexGrow={1} />\n          <Typography color=\"textSecondary\" variant=\"caption\">\n            {moment(comment.createdAt).fromNow()}\n          </Typography>\n        </Box>\n        <Typography variant=\"body1\" color=\"textPrimary\">\n          {comment.message}\n        </Typography>\n      </Box>\n    </div>\n  );\n};\n\nComment.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  comment: PropTypes.object.isRequired\n};\n\nexport default Comment;\n","import {\n  Avatar,\n  Divider,\n  IconButton,\n  Input,\n  makeStyles,\n  Paper,\n  Tooltip\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport SendIcon from '@material-ui/icons/Send';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { ChangeEvent, FC, useRef, useState } from 'react';\nimport useAuth from 'src/hooks/useAuth';\nimport { Theme } from 'src/theme';\n\ninterface CommentAddProps {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  inputContainer: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    paddingTop: theme.spacing(0.5)\n  },\n  divider: {\n    height: 24,\n    width: 1\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nconst CommentAdd: FC<CommentAddProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n  const [value, setValue] = useState<string>('');\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleAttach = (): void => {\n    if(fileInputRef && fileInputRef.current)\n      fileInputRef.current.click()\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Avatar alt=\"Person\" src={user?.avatar} />\n      <Paper className={classes.inputContainer} variant=\"outlined\">\n        <Input\n          disableUnderline\n          fullWidth\n          onChange={handleChange}\n          placeholder=\"Leave a message\"\n        />\n      </Paper>\n      <Tooltip title=\"Send\">\n        <IconButton color={value.length > 0 ? 'primary' : 'default'}>\n          <SendIcon />\n        </IconButton>\n      </Tooltip>\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Attach image\">\n        <IconButton edge=\"end\" onClick={handleAttach}>\n          <AddPhotoIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Attach file\">\n        <IconButton edge=\"end\" onClick={handleAttach}>\n          <AttachFileIcon />\n        </IconButton>\n      </Tooltip>\n      <input className={classes.fileInput} ref={fileInputRef} type=\"file\" />\n    </div>\n  );\n};\n\nCommentAdd.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CommentAdd;\n","import {\n  Box,\n  colors,\n  IconButton,\n  makeStyles,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ShareIcon from '@material-ui/icons/Share';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useState } from 'react';\nimport { Post } from 'src/types/social';\n\ninterface ReactionsProps {\n  className?: string;\n  post: Post;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  likedButton: {\n    color: colors.red[600]\n  }\n}));\n\nconst Reactions: FC<ReactionsProps> = ({ className, post, ...rest }) => {\n  const classes = useStyles();\n  const [isLiked, setLiked] = useState<boolean>(post.isLiked);\n  const [likes, setLikes] = useState<number>(post.likes);\n\n  const handleLike = (): void => {\n    setLiked(true);\n    setLikes(prevLikes => prevLikes + 1);\n  };\n\n  const handleUnlike = (): void => {\n    setLiked(false);\n    setLikes(prevLikes => prevLikes - 1);\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      {isLiked ? (\n        <Tooltip title=\"Unlike\">\n          <IconButton className={classes.likedButton} onClick={handleUnlike}>\n            <FavoriteIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Like\">\n          <IconButton onClick={handleLike}>\n            <FavoriteBorderIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      )}\n      <Typography color=\"textSecondary\" variant=\"h6\">\n        {likes}\n      </Typography>\n      <Box flexGrow={1} />\n      <IconButton>\n        <ShareIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  );\n};\n\nReactions.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired\n};\n\nexport default Reactions;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardActionArea,\n  CardHeader,\n  CardMedia,\n  Divider,\n  Link,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { FC, useState } from 'react';\n// @ts-ignore\nimport { Lightbox } from 'react-modal-image';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Post } from 'src/types/social';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\nimport Reactions from './Reactions';\n\ninterface PostCardProps {\n  className?: string;\n  post: Post;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  }\n}));\n\nconst PostCard: FC<PostCardProps> = ({ className, post, ...rest }) => {\n  const classes = useStyles();\n  const [selectedImage, setSelectedImage] = useState<string | undefined>(undefined);\n\n  return (\n    <>\n      <Card className={clsx(classes.root, className)} {...rest}>\n        <CardHeader\n          avatar={\n            <Avatar\n              alt=\"Person\"\n              component={RouterLink}\n              src={post.author.avatar}\n              to=\"#\"\n            />\n          }\n          disableTypography\n          subheader={\n            <Box display=\"flex\" alignItems=\"center\">\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          }\n          title={\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {post.author.name}\n            </Link>\n          }\n        />\n        <Box px={3} pb={2}>\n          <Typography variant=\"body1\" color=\"textPrimary\">\n            {post.message}\n          </Typography>\n          {post.media && (\n            <Box mt={2}>\n              <CardActionArea onClick={() => setSelectedImage(post.media)}>\n                <CardMedia className={classes.media} image={post.media} />\n              </CardActionArea>\n            </Box>\n          )}\n          <Box mt={2}>\n            <Reactions post={post} />\n          </Box>\n          <Box my={2}>\n            <Divider />\n          </Box>\n          {post.comments.map(comment => (\n            <Comment comment={comment} key={comment.id} />\n          ))}\n          <Box my={2}>\n            <Divider />\n          </Box>\n          <CommentAdd />\n        </Box>\n      </Card>\n      {selectedImage && (\n        <Lightbox\n          large={selectedImage}\n          onClose={() => setSelectedImage(undefined)}\n        />\n      )}\n    </>\n  );\n};\n\nPostCard.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  post: PropTypes.object.isRequired\n};\n\nexport default PostCard;\n","import {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Grid,\n  IconButton,\n  Input,\n  Link,\n  makeStyles,\n  Paper,\n  SvgIcon,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport _ from 'lodash';\nimport { useSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { MoreVertical as MoreIcon, Search as SearchIcon } from 'react-feather';\nimport { Link as RouterLink } from 'react-router-dom';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport { Connection } from 'src/types/social';\nimport axios from 'src/utils/axios';\n\ninterface ConnectionsProps {\n  className?: string;\n}\n\nconst connectStatusMap = {\n  connected: 'Connected',\n  not_connected: 'Connect',\n  pending: 'Pending'\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  searchInput: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    height: 60,\n    width: 60\n  }\n}));\n\nconst Connections: FC<ConnectionsProps> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const { enqueueSnackbar } = useSnackbar();\n  const [connections, setConnections] = useState<Connection[]>([]);\n  const [search, setSearch] = useState<string>('');\n\n  const handleConnectToggle = (connectionId: string): void => {\n    setConnections(prevConnections => {\n      const newConnections = _.map(prevConnections, _.clone);\n\n      return newConnections.map(connection => {\n        if (connection.id === connectionId) {\n          const newConnection = { ...connection };\n\n          newConnection.status =\n            connection.status === 'connected' || connection.status === 'pending'\n              ? 'not_connected'\n              : 'pending';\n\n          if (newConnection.status === 'pending') {\n            enqueueSnackbar('Connection request sent', {\n              variant: 'success'\n            });\n          }\n\n          return newConnection;\n        }\n\n        return connection;\n      });\n    });\n  };\n\n  const getConnections = useCallback(async () => {\n    const response = await axios.get<{ connections: Connection[] }>(\n      '/api/social/connections'\n    );\n\n    if (isMountedRef.current) {\n      setConnections(response.data.connections);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getConnections();\n  }, [getConnections]);\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader title=\"Connections\" />\n      <Divider />\n      <Box py={2} px={3} display=\"flex\" alignItems=\"center\">\n        <SvgIcon fontSize=\"small\" color=\"action\">\n          <SearchIcon />\n        </SvgIcon>\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          value={search}\n          onChange={event => setSearch(event.target.value)}\n          placeholder=\"Search connections\"\n        />\n      </Box>\n      <Divider />\n      <Box p={3}>\n        <Grid container spacing={3}>\n          {connections\n            .filter(connection =>\n              connection.name.toLowerCase().includes(search)\n            )\n            .map(connection => (\n              <Grid item key={connection.id} xs={12} md={6}>\n                <Paper variant=\"outlined\">\n                  <Box p={2} display=\"flex\" alignItems=\"center\">\n                    <Avatar\n                      alt=\"Profile image\"\n                      className={classes.avatar}\n                      component={RouterLink}\n                      src={connection.avatar}\n                      to=\"#\"\n                    />\n                    <Box flexGrow={1} mx={2}>\n                      <Link\n                        variant=\"h5\"\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        {connection.name}\n                      </Link>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        gutterBottom\n                      >\n                        {connection.commonConnections} connections in common\n                      </Typography>\n                      {connection.status !== 'rejected' && (\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          onClick={() => handleConnectToggle(connection.id)}\n                        >\n                          {connectStatusMap[connection.status]}\n                        </Button>\n                      )}\n                    </Box>\n                    <IconButton>\n                      <SvgIcon fontSize=\"small\">\n                        <MoreIcon />\n                      </SvgIcon>\n                    </IconButton>\n                  </Box>\n                </Paper>\n              </Grid>\n            ))}\n        </Grid>\n      </Box>\n    </Card>\n  );\n};\n\nConnections.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Connections;\n","import {\n  Avatar,\n  Box,\n  Button,\n  colors,\n  Container,\n  Hidden,\n  IconButton,\n  makeStyles,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Theme } from 'src/theme';\nimport { Profile } from 'src/types/social';\n\ninterface HeaderProps {\n  className?: string;\n  profile: Profile;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  cover: {\n    position: 'relative',\n    height: 460,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage:\n        'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.common.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute'\n  },\n  action: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst Header: FC<HeaderProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const [connectedStatus, setConnectedStatus] = useState<string>(\n    profile.connectedStatus\n  );\n\n  const handleConnectToggle = (): void => {\n    setConnectedStatus(prevConnectedStatus =>\n      prevConnectedStatus === 'not_connected' ? 'pending' : 'not_connected'\n    );\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <div\n        className={classes.cover}\n        style={{ backgroundImage: `url(${profile.cover})` }}\n      >\n        <Button\n          className={classes.changeButton}\n          variant=\"contained\"\n          startIcon={<AddPhotoIcon />}\n        >\n          Change Cover\n        </Button>\n      </div>\n      <Container maxWidth=\"lg\">\n        <Box position=\"relative\" mt={1} display=\"flex\" alignItems=\"center\">\n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src={profile.avatar}\n          />\n          <Box marginLeft=\"160px\">\n            <Typography variant=\"overline\" color=\"textSecondary\">\n              {profile.bio}\n            </Typography>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              {profile.name}\n            </Typography>\n          </Box>\n          <Box flexGrow={1} />\n          <Hidden smDown>\n            {connectedStatus === 'not_connected' && (\n              <Button\n                onClick={handleConnectToggle}\n                size=\"small\"\n                variant=\"outlined\"\n                className={classes.action}\n              >\n                Connect\n              </Button>\n            )}\n            {connectedStatus === 'pending' && (\n              <Button\n                onClick={handleConnectToggle}\n                size=\"small\"\n                variant=\"outlined\"\n                className={classes.action}\n              >\n                Pending\n              </Button>\n            )}\n            <Button\n              color=\"secondary\"\n              component={RouterLink}\n              size=\"small\"\n              to=\"/app/chat\"\n              variant=\"contained\"\n              className={classes.action}\n            >\n              Send message\n            </Button>\n          </Hidden>\n          <Tooltip title=\"More options\">\n            <IconButton className={classes.action}>\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Header;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  colors,\n  Divider,\n  LinearProgress,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC } from 'react';\nimport {\n  Briefcase as BriefcaseIcon,\n  Home as HomeIcon,\n  Mail as MailIcon,\n  Plus as PlusIcon\n} from 'react-feather';\nimport { Theme } from 'src/theme';\nimport { Profile } from 'src/types/social';\n\ninterface AboutProps {\n  className?: string;\n  profile: Profile;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {},\n  jobAvatar: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  cityAvatar: {\n    backgroundColor: colors.red[600]\n  }\n}));\n\nconst About: FC<AboutProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Card>\n        <CardHeader title=\"Profile Progress\" />\n        <Divider />\n        <CardContent>\n          <LinearProgress\n            variant=\"determinate\"\n            value={profile.profileProgress}\n          />\n          <Box mt={2}>\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              50% Set Up Complete\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n      <Box mt={3}>\n        <Card>\n          <CardHeader title=\"About\" />\n          <Divider />\n          <CardContent>\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              &quot;\n              {profile.quote}\n              &quot;\n            </Typography>\n            <List>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.jobAvatar}>\n                    <BriefcaseIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  disableTypography\n                  primary={\n                    <Typography variant=\"body2\" color=\"textPrimary\">\n                      {profile.currentJob.title} at{' '}\n                      <Link variant=\"subtitle2\" color=\"textPrimary\" href=\"#\">\n                        {profile.currentJob.company}\n                      </Link>\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography variant=\"caption\" color=\"textSecondary\">\n                      Past:\n                      {profile.previousJob.title}{' '}\n                      <Link variant=\"caption\" color=\"textSecondary\" href=\"#\">\n                        {profile.previousJob.company}\n                      </Link>\n                    </Typography>\n                  }\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <PlusIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary=\"Add school or collage\"\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textSecondary'\n                  }}\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <HomeIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  disableTypography\n                  primary={\n                    <Typography variant=\"body2\" color=\"textPrimary\">\n                      Lives in{' '}\n                      <Link variant=\"subtitle2\" color=\"textPrimary\" href=\"#\">\n                        {profile.currentCity}\n                      </Link>\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography variant=\"caption\" color=\"textSecondary\">\n                      Originally from{' '}\n                      <Link variant=\"caption\" color=\"textSecondary\" href=\"#\">\n                        {profile.originCity}\n                      </Link>\n                    </Typography>\n                  }\n                />\n              </ListItem>\n              <ListItem disableGutters divider>\n                <ListItemAvatar>\n                  <Avatar className={classes.cityAvatar}>\n                    <MailIcon size=\"22\" />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={profile.email}\n                  primaryTypographyProps={{\n                    variant: 'body2',\n                    color: 'textPrimary'\n                  }}\n                />\n              </ListItem>\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n    </div>\n  );\n};\n\nAbout.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default About;\n","import { Box, Grid, makeStyles } from '@material-ui/core';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport PostAdd from 'src/components/PostAdd';\nimport PostCard from 'src/components/PostCard';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Post, Profile } from 'src/types/social';\nimport axios from 'src/utils/axios';\nimport About from './About';\n\ninterface TimelineProps {\n  className?: string;\n  profile: Profile;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Timeline: FC<TimelineProps> = ({ className, profile, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  const getPosts = useCallback(async () => {\n    try {\n      const response = await axios.get<{ posts: Post[] }>('/api/social/posts');\n\n      if (isMountedRef.current) {\n        setPosts(response.data.posts);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} lg={4}>\n          <About profile={profile} />\n        </Grid>\n        <Grid item xs={12} md={6} lg={8}>\n          <PostAdd />\n          {posts.map(post => (\n            <Box mt={3} key={post.id}>\n              <PostCard post={post} />\n            </Box>\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nTimeline.propTypes = {\n  className: PropTypes.string,\n  // @ts-ignore\n  profile: PropTypes.object.isRequired\n};\n\nexport default Timeline;\n","import {\n  Box,\n  Container,\n  Divider,\n  makeStyles,\n  Tab,\n  Tabs\n} from '@material-ui/core';\nimport React, {\n  ChangeEvent,\n  FC,\n  useCallback,\n  useEffect,\n  useState\n} from 'react';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { Theme } from 'src/theme';\nimport { Profile } from 'src/types/social';\nimport axios from 'src/utils/axios';\nimport Connections from './Connections';\nimport Header from './Header';\nimport Timeline from './Timeline';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%'\n  }\n}));\n\nconst ProfileView: FC = () => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [currentTab, setCurrentTab] = useState<string>('timeline');\n  const [profile, setProfile] = useState<Profile | null>(null);\n\n  const tabs = [\n    { value: 'timeline', label: 'Timeline' },\n    { value: 'connections', label: 'Connections' }\n  ];\n\n  const handleTabsChange = (event: ChangeEvent, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  const getPosts = useCallback(async () => {\n    try {\n      const response = await axios.get<{ profile: Profile }>(\n        '/api/social/profile'\n      );\n\n      if (isMountedRef.current) {\n        setProfile(response.data.profile);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Profile\">\n      <Header profile={profile} />\n      <Container maxWidth=\"lg\">\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            textColor=\"secondary\"\n            variant=\"scrollable\"\n          >\n            {tabs.map(tab => (\n              <Tab key={tab.value} label={tab.label} value={tab.value} />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box py={3} pb={6}>\n          {currentTab === 'timeline' && <Timeline profile={profile} />}\n          {currentTab === 'connections' && <Connections />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ProfileView;\n"],"sourceRoot":""}